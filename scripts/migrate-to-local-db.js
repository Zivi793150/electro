#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å MongoDB Atlas –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/migrate-to-local-db.js
 */

const { MongoClient } = require('mongodb');
require('dotenv').config();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const SOURCE_URI = process.env.MONGO_URI || 'mongodb+srv://electro:electro123@cluster0.mongodb.net/Tanker_products?retryWrites=true&w=majority';
const TARGET_URI = process.env.LOCAL_MONGO_URI || 'mongodb://tanker_user:tanker_password_2024@localhost:27017/tanker_products';

const COLLECTIONS_TO_MIGRATE = [
  'products',
  'product_groups', 
  'information',
  'pickup_points',
  'analytics',
  'orders'
];

async function migrateCollection(sourceDb, targetDb, collectionName) {
  console.log(`üì¶ –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏: ${collectionName}`);
  
  try {
    const sourceCollection = sourceDb.collection(collectionName);
    const targetCollection = targetDb.collection(collectionName);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const documents = await sourceCollection.find({}).toArray();
    
    if (documents.length === 0) {
      console.log(`   ‚ö†Ô∏è  –ö–æ–ª–ª–µ–∫—Ü–∏—è ${collectionName} –ø—É—Å—Ç–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
      return;
    }
    
    console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${documents.length}`);
    
    // –û—á–∏—â–∞–µ–º —Ü–µ–ª–µ–≤—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é (–µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    await targetCollection.deleteMany({});
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —Ü–µ–ª–µ–≤—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
    if (documents.length > 0) {
      await targetCollection.insertMany(documents);
      console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${documents.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
    }
    
  } catch (error) {
    console.error(`   ‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${collectionName}:`, error.message);
  }
}

async function migrateDatabase() {
  let sourceClient, targetClient;
  
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...');
    console.log(`üì§ –ò—Å—Ç–æ—á–Ω–∏–∫: ${SOURCE_URI}`);
    console.log(`üì• –¶–µ–ª—å: ${TARGET_URI}`);
    console.log('');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∏—Å—Ö–æ–¥–Ω–æ–π –ë–î
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏—Å—Ö–æ–¥–Ω–æ–π –ë–î...');
    sourceClient = new MongoClient(SOURCE_URI);
    await sourceClient.connect();
    const sourceDb = sourceClient.db('Tanker_products');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏—Å—Ö–æ–¥–Ω–æ–π –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ü–µ–ª–µ–≤–æ–π –ë–î
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î...');
    targetClient = new MongoClient(TARGET_URI);
    await targetClient.connect();
    const targetDb = targetClient.db('tanker_products');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    console.log('');
    
    // –ú–∏–≥—Ä–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
    for (const collectionName of COLLECTIONS_TO_MIGRATE) {
      await migrateCollection(sourceDb, targetDb, collectionName);
    }
    
    console.log('');
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('');
    console.log('üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –û–±–Ω–æ–≤–∏—Ç–µ MONGO_URI –≤ .env —Ñ–∞–π–ª–µ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î');
    console.log('   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    process.exit(1);
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if (sourceClient) {
      await sourceClient.close();
    }
    if (targetClient) {
      await targetClient.close();
    }
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  migrateDatabase();
}

module.exports = { migrateDatabase };
