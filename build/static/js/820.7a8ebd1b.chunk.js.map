{"version":3,"file":"static/js/820.7a8ebd1b.chunk.js","mappings":"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","sources":["utils/price.js","utils/cache.js","components/Modal.js","utils/telegram.js","pages/Product.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[\\.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport { trackFormSubmit } from '../utils/analytics';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData, product);\r\n      \r\n      if (result.success) {\r\n        // Отслеживаем успешную отправку формы\r\n        trackFormSubmit('contact_form', product?.id || null);\r\n        alert('Спасибо за вашу заявку! Менеджер обязательно ответит в течение 2 минут');\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n\r\nexport const sendToTelegram = async (formData, product = null) => {\r\n  try {\r\n    // Определяем базовый URL API (локально шлём на порт сервера)\r\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\r\n    const API_BASE = 'https://electro-1-vjdu.onrender.com';\r\n\r\n    // Отправляем данные на наш API endpoint\r\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: formData.name,\r\n        phone: formData.phone,\r\n        message: formData.message,\r\n        product: product\r\n      })\r\n    });\r\n    \r\n    const result = await response.json();\r\n    \r\n    if (result.success) {\r\n      return { success: true, message: 'Заявка успешно отправлена!' };\r\n    } else {\r\n      console.error('Ошибка API:', result.error);\r\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport DeliveryInfo from '../components/DeliveryInfo';\nimport { trackProductView, trackButtonClick } from '../utils/analytics';\nimport { fetchWithCache } from '../utils/cache';\nimport '../styles/Product.css';\nimport '../styles/ProductVariations.css';\n\n// Надёжный fetch с повторами и таймаутом\nconst fetchWithRetry = async (url, options = {}, retries = 2, backoffMs = 800, timeoutMs = 12000) => {\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: { 'Accept': 'application/json', ...(options.headers || {}) },\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (attempt === retries) throw error;\n      await new Promise(r => setTimeout(r, backoffMs * Math.pow(2, attempt)));\n    }\n  }\n};\n\nconst categories = [\n  { id: 'grinders', name: 'Болгарки' },\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\n  { id: 'hammers', name: 'Перфораторы' },\n  { id: 'drills', name: 'Дрели' },\n  { id: 'jigsaws', name: 'Лобзики' },\n  { id: 'levels', name: 'Лазерные уровни' },\n  { id: 'generators', name: 'Генераторы' },\n  { id: 'measuring', name: 'Измерители' }\n];\n\nconst Product = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [siteSettings, setSiteSettings] = useState({\n    city: 'Алматы',\n    deliveryInfo: {\n      freeDelivery: 'Бесплатная доставка по городу',\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\n      pickupAddress: 'ул. Толе би 216Б',\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\n    }\n  });\n  \n  const [selectedCity, setSelectedCity] = useState(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    return savedCity || 'Алматы';\n  });\n  \n  const [selectedDelivery, setSelectedDelivery] = useState(null);\n  const [deliveryInfo, setDeliveryInfo] = useState(null);\n  const [isCityChanging, setIsCityChanging] = useState(false);\n  \n  // Состояние для вариаций товара\n  const [productGroup, setProductGroup] = useState(null);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n  const [selectedParameters, setSelectedParameters] = useState({});\n  \n\n  \n  const [detectingCity, setDetectingCity] = useState(false);\n  \n  // Функция для автоматического определения города\n  const detectUserCity = () => {\n    if (navigator.geolocation) {\n      setDetectingCity(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Используем обратное геокодирование для определения города\n          fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&addressdetails=1`)\n            .then(response => response.json())\n            .then(data => {\n              if (data.address && data.address.city) {\n                const detectedCity = data.address.city;\n                // Проверяем, есть ли этот город в нашем списке\n                if (cities.includes(detectedCity)) {\n                  setSelectedCity(detectedCity);\n                  localStorage.setItem('selectedCity', detectedCity);\n                }\n              }\n              setDetectingCity(false);\n            })\n            .catch(error => {\n              console.log('Ошибка определения города:', error);\n              setDetectingCity(false);\n            });\n        },\n        (error) => {\n          console.log('Ошибка получения геолокации:', error);\n          // Быстрый фолбэк на Алматы, чтобы не тормозить в регионах с ограничениями\n          if (!localStorage.getItem('selectedCity')) {\n            setSelectedCity('Алматы');\n            localStorage.setItem('selectedCity', 'Алматы');\n          }\n          setDetectingCity(false);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 3000,\n          maximumAge: 600000 // 10 минут\n        }\n      );\n    }\n  };\n  \n  // Список городов Казахстана\n  const cities = [\n    'Алматы',\n    'Астана',\n    'Шымкент',\n    'Актобе',\n    'Караганда',\n    'Тараз',\n    'Павлодар',\n    'Семей',\n    'Усть-Каменогорск',\n    'Уральск',\n    'Кызылорда',\n    'Костанай',\n    'Петропавловск',\n    'Атырау',\n    'Актау',\n    'Темиртау',\n    'Туркестан',\n    'Кокшетау',\n    'Талдыкорган',\n    'Экибастуз',\n    'Рудный',\n    'Жанаозен',\n    'Жезказган',\n    'Балхаш',\n    'Кентау',\n    'Сатпаев',\n    'Капчагай',\n    'Риддер',\n    'Степногорск',\n    'Аральск',\n    'Аркалык',\n    'Житикара',\n    'Кандыагаш',\n    'Лисаковск',\n    'Шахтинск',\n    'Абай',\n    'Аягоз',\n    'Зайсан',\n    'Курчатов',\n    'Приозерск',\n    'Серебрянск',\n    'Текели',\n    'Уштобе',\n    'Чарск',\n    'Шемонаиха',\n    'Щучинск'\n  ];\n  \n  // Объединяем все изображения из разных полей\n  const getAllImages = () => {\n    const currentProduct = getCurrentProduct();\n    const images = [];\n    \n    // Добавляем основное изображение из поля image (если есть)\n    if (currentProduct?.image) {\n      images.push(currentProduct.image);\n    }\n    \n    // Добавляем изображения из поля images\n    if (Array.isArray(currentProduct?.images)) {\n      images.push(...currentProduct.images);\n    }\n    \n    // Добавляем изображения из поля images2\n    if (Array.isArray(currentProduct?.images2)) {\n      images.push(...currentProduct.images2);\n    }\n    \n    // Добавляем изображения из поля images3\n    if (Array.isArray(currentProduct?.images3)) {\n      images.push(...currentProduct.images3);\n    }\n    \n    // Если нет изображений, добавляем placeholder\n    if (images.length === 0) {\n      images.push('/images/products/placeholder.png');\n    }\n    \n    return images;\n  };\n  \n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    const fetchProductAndGroup = async () => {\n      try {\n        // Загружаем товар\n            const productData = await fetchWithCache(`${API_URL}/${id}`, {}, 5 * 60 * 1000); // Кэш на 5 минут\n        \n        if (productData.error) {\n          setError(productData.error);\n          setProduct(null);\n          setLoading(false);\n          return;\n        }\n        \n        setProduct(productData);\n        \n        // Отслеживаем просмотр товара\n        trackProductView(id, productData.name);\n        \n        // Загружаем группу вариаций для этого товара\n        try {\n         const groupRes = await fetchWithRetry(`https://electro-1-vjdu.onrender.com/api/product-groups/by-product/${id}`);\n          if (groupRes.ok) {\n            const groupData = await groupRes.json();\n            setProductGroup(groupData);\n            \n             // Инициализация выбранной вариации\n            if (groupData.baseProductId?._id === id) {\n               // Открыли страницу базового товара\n               setSelectedVariant(null);\n               setSelectedParameters({});\n             } else {\n               // Открыли страницу вариации — находим её и выставляем параметры\n               const currentVariant = (groupData.variants || []).find(v => v.productId && (v.productId._id === id));\n               if (currentVariant) {\n                 setSelectedVariant(currentVariant);\n                 setSelectedParameters(currentVariant.parameters || {});\n               }\n            }\n          }\n        } catch (groupError) {\n          console.log('Группа вариаций не найдена для товара:', groupError);\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        setError('Ошибка загрузки товара');\n        setLoading(false);\n      }\n    };\n    \n    fetchProductAndGroup();\n  }, [id]);\n\n  useEffect(() => {\n    fetchWithCache(`${API_URL}?limit=4`, {}, 5 * 60 * 1000) // Кэш на 5 минут\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Загружаем информацию сайта\n  useEffect(() => {\n   fetchWithRetry('https://electro-1-vjdu.onrender.com/api/information')\n      .then(res => res.json())\n      .then(data => {\n        if (data.information) {\n          setSiteSettings(data.information);\n        }\n      })\n      .catch(error => {\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\n      });\n  }, []);\n  \n  // Инициализируем выбранный город из localStorage и автоматически определяем город\n  useEffect(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    \n    // Если есть сохраненный город, используем его\n    if (savedCity) {\n      setSelectedCity(savedCity);\n    } else {\n      // Если нет сохраненного города, пытаемся определить автоматически\n      detectUserCity();\n    }\n  }, []);\n\n  // Сбрасываем активное изображение при смене товара\n  useEffect(() => {\n    setActiveImage(0);\n  }, [selectedVariant]);\n\n  if (loading) {\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\n  }\n  if (error || !product) {\n    return (\n      <div className=\"product\">\n        <Header />\n        <main className=\"product-main\">\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\n            <h1>Товар не найден</h1>\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/catalog\">каталог</a>.</p>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Найти категорию для хлебных крошек\n  const categoryObj = categories.find(cat => cat.id === product.category);\n  const categoryName = categoryObj ? categoryObj.name : '';\n\n  // Преимущества — если есть в product, иначе дефолтные\n  const productAdvantages = product.advantages || [\n    'Высокий крутящий момент и мощность',\n    'Долговечный литий-ионный аккумулятор',\n    'Компактный и лёгкий корпус для работы одной рукой'\n  ];\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = (formData) => {\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\n    alert('Спасибо! Ваша заявка отправлена. Мы свяжемся с вами в ближайшее время.');\n  };\n\n  const handleBuy = () => {\n    const currentProduct = getCurrentProduct();\n    const currentPrice = getCurrentPrice();\n    \n    navigate('/checkout', { \n      state: { \n        product: currentProduct,\n        selectedVariant,\n        selectedParameters,\n        originalPrice: product.price,\n        currentPrice\n      } \n    });\n  };\n\n  // Функции для работы с вариациями\n  const normalize = (val) => {\n    if (val === undefined || val === null) return '';\n    return String(val).trim();\n  };\n\n  const handleParameterChange = (paramName, value) => {\n    const newParameters = { ...selectedParameters, [paramName]: value };\n    setSelectedParameters(newParameters);\n    \n    // Находим подходящую вариацию\n    if (productGroup) {\n      // Удаляем параметр из поиска, если значение пустое или false\n      const filteredParameters = {};\n      Object.entries(newParameters).forEach(([key, val]) => {\n        if (val && val !== 'false') {\n          filteredParameters[key] = val;\n        }\n      });\n      \n      // Если нет выбранных параметров, сбрасываем на базовый товар\n      if (Object.keys(filteredParameters).length === 0) {\n        setSelectedVariant(null);\n        return;\n      }\n      \n      // Ищем вариацию с точным совпадением всех параметров\n      let matchingVariant = productGroup.variants.find(variant => {\n        if (!variant.isActive) return false;\n        \n        // Проверяем, что все выбранные параметры совпадают\n        return Object.entries(filteredParameters).every(([key, val]) => {\n          return normalize(variant.parameters[key]) === normalize(val);\n        });\n      });\n      \n      if (matchingVariant) {\n        setSelectedVariant(matchingVariant);\n      } else {\n        // Нет точной комбинации — не подставляем другой товар\n        setSelectedVariant(null);\n      }\n    }\n  };\n\n  // Получаем текущий товар для отображения (с учетом выбранной вариации)\n  const getCurrentProduct = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      // Убеждаемся, что у нас есть полная информация о товаре\n      return selectedVariant.productId;\n    }\n    return product;\n  };\n\n  // Получаем текущую цену\n  const getCurrentPrice = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      return selectedVariant.productId.price;\n    }\n    return product?.price;\n  };\n\n  // Проверяем, есть ли вариации с определенным параметром\n  const hasVariationsWithParameter = (paramName) => {\n    if (!productGroup) return false;\n    return productGroup.variants.some(variant => \n      variant.isActive && variant.parameters[paramName]\n    );\n  };\n\n  // Получаем доступные значения для параметра\n  const getAvailableValuesForParameter = (paramName) => {\n    if (!productGroup) return [];\n    // Учитываем другие выбранные параметры, чтобы не предлагать невозможные комбинации\n    const otherParams = { ...selectedParameters };\n    delete otherParams[paramName];\n    const values = new Set();\n    productGroup.variants.forEach(variant => {\n      if (!variant.isActive) return;\n      // Совпадает ли вариант по всем другим выбранным параметрам?\n      const matchesOthers = Object.entries(otherParams).every(([k, v]) => {\n        if (!v || v === 'false') return true;\n        return normalize(variant.parameters[k]) === normalize(v);\n      });\n      if (!matchesOthers) return;\n      const val = variant.parameters[paramName];\n      if (val) values.add(val);\n    });\n    return Array.from(values);\n  };\n\n  // Все возможные значения параметра (без учёта выбранных других параметров)\n  const getAllValuesForParameter = (param) => {\n    if (Array.isArray(param.values) && param.values.length > 0) return param.values;\n    if (!productGroup) return [];\n    const values = new Set();\n    productGroup.variants.forEach(variant => {\n      const val = variant.parameters[param.name];\n      if (val) values.add(val);\n    });\n    return Array.from(values);\n  };\n\n  // Модалка фото\n  const handleImageClick = () => setShowImageModal(true);\n  const handleCloseImageModal = () => setShowImageModal(false);\n  const handlePrevImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev - 1 + images.length) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  const handleNextImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev + 1) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  \n  const handleCityChange = (e) => {\n    const newCity = e.target.value;\n    setIsCityChanging(true);\n    setSelectedCity(newCity);\n    localStorage.setItem('selectedCity', newCity);\n    // Сбрасываем выбранную доставку при смене города\n    setSelectedDelivery(null);\n    // Загружаем информацию о доставке для нового города\n    fetchDeliveryInfo(newCity);\n    \n    // Убираем анимацию через 500мс\n    setTimeout(() => {\n      setIsCityChanging(false);\n    }, 500);\n  };\n\n  const fetchDeliveryInfo = async (cityName) => {\n    try {\n      const response = await fetch(`https://electro-1-vjdu.onrender.com/api/pickup-points/delivery/${encodeURIComponent(cityName)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setDeliveryInfo(data);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки информации о доставке:', error);\n    }\n  };\n  \n\n\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\n    if (product.productGroup && product.productGroup.coverImage) {\n      return product.productGroup.coverImage;\n    }\n    \n    // Затем проверяем обычные изображения товара\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  return (\n    <div className=\"product-page\">\n      <Header />\n      <main className=\"product-main\">\n        <div className=\"product-container\">\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n            <a href=\"/\">Главная</a>\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <a href=\"/catalog\">Каталог</a>\n            {categoryName && (\n              <>\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                <a href={`/catalog?category=${product.category}`}>{categoryName}</a>\n              </>\n            )}\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <span style={{color:'#1a2236', fontWeight:500}}>{product.name}</span>\n          </nav>\n          <div className=\"product-flex\">\n            {/* Фото и миниатюры */}\n            <div className=\"product-gallery\">\n              <div className=\"product-gallery-inner\">\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\n                  <img \n                    src={getAllImages()[activeImage]} \n                    alt={product.name} \n                    loading=\"lazy\"\n                    style={{maxWidth: '100%', maxHeight: '100%', objectFit: 'contain'}}\n                  />\n                </div>\n                {getAllImages().length > 1 && (\n                  <>\n                    <div className=\"product-thumbs\">\n                      {getAllImages().map((img, idx) => (\n                        <img \n                          key={idx} \n                          src={img} \n                          alt={product.name + idx} \n                          className={activeImage === idx ? \"active\" : \"\"} \n                          onClick={() => setActiveImage(idx)} \n                          loading=\"lazy\"\n                          width=\"80\"\n                          height=\"80\"\n                        />\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Инфо и цена справа */}\n            <div className=\"product-info-block\">\n              <>\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 6, wordBreak: 'break-word', marginTop: 28, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 8, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\n                <div className=\"product-divider\"></div>\n                {/* Компонент выбора вариаций */}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-variations\" style={{\n                    marginBottom: '20px'\n                  }}>\n                    {productGroup.parameters\n                      .filter(param => {\n                        const paramNameLower = (param.name || '').toLowerCase();\n                        const isModelParam = paramNameLower.includes('модель');\n\n                        // Требуем, чтобы для «модель» были выбраны и мощность, и регулятор\n                        if (isModelParam) {\n                          const powerParam = (productGroup.parameters.find(p => (p.name || '').toLowerCase().includes('мощ')) || {}).name;\n                          const regulatorParam = (productGroup.parameters.find(p => (p.name || '').toLowerCase().includes('регуля')) || {}).name;\n                          const powerSelected = powerParam ? !!selectedParameters[powerParam] : false;\n                          const regulatorSelected = regulatorParam ? !!selectedParameters[regulatorParam] : false;\n                          if (!powerSelected || !regulatorSelected) return false;\n                        }\n\n                        const visibleByDefault = param.visibleByDefault !== false;\n                        if (visibleByDefault) return true;\n\n                        const allowed = new Set((Array.isArray(param.visibleForProductIds) ? param.visibleForProductIds : []).map(String));\n                        if (allowed.size === 0) return false;\n\n                        const currentId = getCurrentProduct()?._id ? String(getCurrentProduct()._id) : '';\n                        if (currentId && allowed.has(currentId)) return true;\n\n                        // If a variant from the allowed list is still possible given the selected parameters (excluding this param), show it\n                        const otherParams = { ...selectedParameters };\n                        delete otherParams[param.name];\n                        // Если другие параметры ещё не выбраны, изначально скрываем\n                        const hasAnyOther = Object.values(otherParams).some(v => v && v !== 'false' && String(v).trim() !== '');\n                        if (!hasAnyOther) return false;\n                        const matchesOtherParams = (variant) => {\n                          return Object.entries(otherParams).every(([k, v]) => {\n                            if (!v || v === 'false') return true;\n                            return normalize(variant.parameters[k]) === normalize(v);\n                          });\n                        };\n                        const hasCandidate = (productGroup.variants || []).some(v => {\n                          if (!v.isActive || !v.productId) return false;\n                          const vid = typeof v.productId === 'string' ? v.productId : (v.productId._id || v.productId);\n                          if (!vid) return false;\n                          if (!allowed.has(String(vid))) return false;\n                          return matchesOtherParams(v);\n                        });\n                        return hasCandidate;\n                      })\n                      .map((param, index) => {\n                      // Для чекбоксов проверяем, есть ли вариации с этим параметром\n                      if (param.type === 'checkbox' && !hasVariationsWithParameter(param.name)) {\n                        return null; // Не показываем чекбокс, если нет вариаций с этим параметром\n                      }\n                      \n                      // Для select и radio показываем все возможные значения, но недоступные отключаем\n                      const allValues = param.type === 'select' || param.type === 'radio'\n                        ? getAllValuesForParameter(param)\n                        : param.values;\n                      const availableValues = param.type === 'select' || param.type === 'radio' \n                        ? getAvailableValuesForParameter(param.name)\n                        : param.values;\n                      \n                      return (\n                        <div key={index} style={{ marginBottom: '15px' }}>\n                          <label style={{ \n                            display: 'block', \n                            marginBottom: '8px', \n                            fontWeight: '500',\n                            color: '#333'\n                          }}>\n                            {param.name}\n                            {param.required && <span style={{ color: '#e74c3c' }}> *</span>}\n                          </label>\n                          \n                          {param.type === 'select' && (\n                            <select\n                              value={selectedParameters[param.name] || ''}\n                              onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                              required={param.required}\n                              style={{\n                                width: '100%',\n                                padding: '8px 12px',\n                                border: 'none',\n                                borderRadius: '4px',\n                                fontSize: '14px',\n                                background: 'transparent'\n                              }}\n                            >\n                              <option value=\"\">Выберите {param.name.toLowerCase()}</option>\n                              {allValues.map((value, valueIndex) => (\n                                <option key={valueIndex} value={value} disabled={!availableValues.includes(value)}>\n                                  {value}\n                                </option>\n                              ))}\n                            </select>\n                          )}\n                          \n                          {param.type === 'radio' && (\n                            <div style={{ display: 'flex', gap: '15px', flexWrap: 'wrap' }}>\n                              {allValues.map((value, valueIndex) => (\n                                <label key={valueIndex} style={{ \n                                  display: 'flex', \n                                  alignItems: 'center', \n                                  cursor: 'pointer',\n                                  fontSize: '14px'\n                                }}>\n                                  <input\n                                    type=\"radio\"\n                                    name={param.name}\n                                    value={value}\n                                    checked={selectedParameters[param.name] === value}\n                                    onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                                    required={param.required}\n                                    style={{ marginRight: '6px' }}\n                                    disabled={!availableValues.includes(value)}\n                                  />\n                                  {value}\n                                </label>\n                              ))}\n                            </div>\n                          )}\n                          \n                          {param.type === 'checkbox' && (\n                            <label style={{ \n                              display: 'flex', \n                              alignItems: 'center', \n                              cursor: 'pointer',\n                              fontSize: '14px'\n                            }}>\n                              <input\n                                type=\"checkbox\"\n                                checked={selectedParameters[param.name] === 'true'}\n                                onChange={(e) => handleParameterChange(param.name, e.target.checked ? 'true' : 'false')}\n                                style={{ marginRight: '6px' }}\n                              />\n                              {param.name}\n                            </label>\n                          )}\n                        </div>\n                      );\n                    })}\n                    \n\n                  </div>\n                )}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-divider\"></div>\n                )}\n\n                <div className=\"product-buy-row\">\n                  <div className=\"product-price-block\">\n                    <div className=\"product-price-label-value\">\n                      <div className=\"product-price-label\">Цена</div>\n                      <div className=\"product-price-value\">\n                        {formatTenge(getCurrentPrice())}\n                        <span className=\"product-currency\">₸</span>\n                      </div>\n                    </div>\n\n                    {getCurrentProduct().article && (\n                      <div style={{\n                        fontSize: '0.85rem', \n                        color: '#666', \n                        marginTop: 6, \n                        textAlign: 'left',\n                        wordBreak: 'break-word',\n                        width: '140px',\n                        minWidth: '140px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start'\n                      }}>\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\n                        <span style={{marginTop: 2}}>{getCurrentProduct().article}</span>\n                      </div>\n                    )}\n                  </div>\n                  <span className=\"product-price-divider\"></span>\n                  <div className=\"product-buy-btns\">\n                    <button \n                      className=\"product-btn-ask\" \n                      onClick={() => {\n                        trackButtonClick('Задать вопрос', 'product_page', id);\n                        handleOpenModal();\n                      }}\n                      data-analytics-context=\"product_page\"\n                    >\n                      Задать вопрос\n                    </button>\n                    <div className=\"product-btns-divider\"></div>\n                    <button \n                      className=\"product-btn-buy\" \n                      onClick={() => {\n                        trackButtonClick('Купить', 'product_page', id);\n                        handleBuy();\n                      }}\n                      data-analytics-context=\"product_page\"\n                    >\n                      Купить\n                    </button>\n                  </div>\n                </div>\n                <div className=\"product-divider\"></div>\n                <div style={{\n                  marginTop: 14, \n                  background: '#fff', \n                  border: 'none',\n                  borderRadius: 8, \n                  padding: '10px 12px 8px 12px', \n                  fontSize: '0.98rem', \n                  color: '#222', \n                  boxShadow: 'none', \n                  maxWidth: 320,\n                  transition: 'all 0.3s ease',\n                  transform: isCityChanging ? 'scale(0.98)' : 'scale(1)',\n                  opacity: isCityChanging ? 0.8 : 1\n                }}>\n                  {/* Единый блок: выбор города + инфо по доставке */}\n                    <DeliveryInfo \n                      city={selectedCity} \n                    onCityChange={handleCityChange}\n                    cities={cities}\n                      onDeliverySelect={setSelectedDelivery}\n                      compact={true}\n                      selectedDelivery={selectedDelivery}\n                    />\n                  \n                  {false && selectedCity !== 'Алматы' && (\n                  <div style={{background:'#f0f1f4', borderRadius:7, padding:'7px 10px', marginTop:8, color:'#222', fontSize:'0.93rem', display:'flex', alignItems:'center', gap:6}}>\n                    <span style={{fontSize:15, color:'#888'}}>ⓘ</span>\n                    <span>\n                        {selectedDelivery \n                          ? `Доставка в ${selectedCity} через ${selectedDelivery.name.toLowerCase()}. ${selectedDelivery.type === 'pickup' ? 'Самовывоз из наших пунктов' : selectedDelivery.type === 'indriver' ? 'В течение дня' : selectedDelivery.type === 'yandex' ? '1-2 дня' : selectedDelivery.type === 'kazpost' ? '3-5 дней' : selectedDelivery.type === 'cdek' ? '1-2 дня' : selectedDelivery.type === 'air' ? '1-3 дня' : '1-3 дня'}.`\n                          : `Доставка в ${selectedCity} осуществляется через курьерские службы. Срок доставки 1-3 дня.`\n                      }\n                    </span>\n                  </div>\n                  )}\n                </div>\n              </>\n            </div>\n          </div>\n          {/* Вкладки снизу */}\n          <div className=\"product-tabs-wrap\">\n            <Tabs product={getCurrentProduct()} />\n                </div>\n            </div>\n      </main>\n      {/* Мини-каталог популярных товаров */}\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Популярные товары</h2>\n        </div>\n        <div className=\"mini-catalog-slider-wrapper\">\n          <div className=\"mini-catalog-slider\">\n            {/* Первый набор карточек */}\n            {miniProducts.map(product => (\n              <div\n                key={`first-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 3px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\n            {miniProducts.map(product => (\n              <div\n                key={`second-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 3px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} product={getCurrentProduct().name} />\n    {/* Модальное окно для увеличенного фото */}\n    {showImageModal && (\n      <div className=\"image-modal-overlay\" onClick={handleCloseImageModal} style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'rgba(0,0,0,0.55)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>\n        <div className=\"image-modal-content\" style={{background:'#fff',padding:0,borderRadius:'8px',boxShadow:'0 8px 32px rgba(0,0,0,0.18)',position:'relative',maxWidth:'90vw',maxHeight:'90vh',display:'flex',flexDirection:'column',alignItems:'center'}} onClick={e=>e.stopPropagation()}>\n          <img src={getAllImages()[activeImage]} alt={getCurrentProduct().name} style={{maxWidth:'80vw',maxHeight:'80vh',objectFit:'contain',background:'#fff'}} width=\"800\" height=\"600\" />\n          {getAllImages().length > 1 && (\n            <>\n              <button \n                onClick={handlePrevImage} \n                style={{\n                  position: 'absolute',\n                  left: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ‹\n              </button>\n              <button \n                onClick={handleNextImage} \n                style={{\n                  position: 'absolute',\n                  right: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ›\n              </button>\n              <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                <span style={{color:'#666', fontSize:'14px'}}>{activeImage + 1} из {getAllImages().length}</span>\n              </div>\n            </>\n          )}\n          <button onClick={handleCloseImageModal} style={{position:'absolute',top:8,right:12,fontSize:32,background:'none',border:'none',color:'#222',cursor:'pointer',lineHeight:1}}>&times;</button>\n        </div>\n      </div>\n    )}\n    </div>\n  );\n};\n\nfunction Tabs({product}) {\n  const [tab,setTab]=React.useState('desc');\n  \n  // Функция для парсинга характеристик из строки\n  const parseCharacteristics = (characteristicsStr) => {\n    if (!characteristicsStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(characteristicsStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\n        const [name, value] = line.split(':').map(s => s.trim());\n        return { name, value };\n      });\n    }\n  };\n  \n  // Функция для парсинга комплектации из строки\n  const parseEquipment = (equipmentStr) => {\n    if (!equipmentStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(equipmentStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам или запятым\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\n    }\n  };\n  \n  const characteristics = parseCharacteristics(product.characteristics);\n  const equipment = parseEquipment(product.equipment);\n  return (\n    <div className=\"product-tabs\">\n      <div className=\"product-tabs-header\">\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\n      </div>\n      <div className=\"product-tabs-content\">\n        {tab==='desc' && (\n          <div className=\"product-desc-kaspi-block\">\n            {product.description ? (\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='specs' && (\n          <div className=\"product-specs-kaspi-block\">\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\n            {characteristics.length > 0 ? (\n              <div className=\"product-specs-group\">\n                <div className=\"product-specs-flex-table\">\n                  {characteristics.map((spec, i) => (\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\n                      <span className=\"product-specs-flex-dots\"></span>\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\n            )}\n          </div>\n        )}\n        {tab==='equip' && (\n          <div className=\"product-desc-kaspi-block\">\n            {equipment.length > 0 ? (\n              <ul style={{margin: 0, paddingLeft: 20}}>\n                {equipment.map((item, idx) => (\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Product; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","_ref","isOpen","onClose","onSubmit","product","formData","setFormData","useState","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","target","_objectSpread","_jsx","className","onClick","children","_jsxs","stopPropagation","preventDefault","validation","isValid","Object","keys","validateForm","result","API_BASE","method","headers","body","success","sendToTelegram","trackFormSubmit","id","alert","htmlFor","type","onChange","placeholder","rows","disabled","fetchWithRetry","retries","backoffMs","timeoutMs","attempt","controller","AbortController","timeoutId","setTimeout","abort","signal","clearTimeout","Promise","r","pow","categories","Tabs","_ref5","tab","setTab","React","characteristics","characteristicsStr","parse","_unused","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","_unused2","parseEquipment","description","dangerouslySetInnerHTML","__html","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","Product","useParams","setProduct","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","setSelectedCity","localStorage","getItem","selectedDelivery","setSelectedDelivery","setDeliveryInfo","isCityChanging","setIsCityChanging","productGroup","setProductGroup","selectedVariant","setSelectedVariant","selectedParameters","setSelectedParameters","detectingCity","setDetectingCity","cities","getAllImages","currentProduct","getCurrentProduct","images","image","push","Array","isArray","images2","images3","navigate","useNavigate","API_URL","useEffect","productData","trackProductView","groupRes","_groupData$baseProduc","groupData","baseProductId","_id","currentVariant","variants","find","v","productId","parameters","groupError","fetchProductAndGroup","then","res","information","catch","savedCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","address","detectedCity","setItem","enableHighAccuracy","timeout","maximumAge","textAlign","Header","href","Footer","categoryObj","cat","category","categoryName","normalize","advantages","val","handleParameterChange","paramName","newParameters","filteredParameters","entries","forEach","matchingVariant","variant","isActive","every","_ref2","getCurrentPrice","price","handleCloseImageModal","fetchDeliveryInfo","encodeURIComponent","cityName","shortDesc","getOptimalImage","preferredSize","coverImage","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","fontSize","_Fragment","fontWeight","handleImageClick","cursor","src","alt","maxWidth","maxHeight","objectFit","img","width","height","wordBreak","marginTop","subtitle","param","_getCurrentProduct","toLowerCase","powerParam","p","regulatorParam","powerSelected","regulatorSelected","visibleByDefault","allowed","Set","visibleForProductIds","currentId","has","otherParams","values","some","vid","_ref4","k","index","allValues","add","from","getAllValuesForParameter","availableValues","_ref3","getAvailableValuesForParameter","required","border","borderRadius","background","valueIndex","checked","marginRight","article","minWidth","flexDirection","trackButtonClick","handleBuy","currentPrice","state","originalPrice","boxShadow","transition","transform","opacity","DeliveryInfo","onCityChange","newCity","onDeliverySelect","compact","window","location","minHeight","fontFamily","justifyContent","srcSet","borderTop","alignSelf","textDecoration","letterSpacing","verticalAlign","Modal","handleCloseModal","top","left","zIndex","prev","newIndex","right"],"sourceRoot":""}