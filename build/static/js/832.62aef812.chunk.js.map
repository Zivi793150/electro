{"version":3,"file":"static/js/832.62aef812.chunk.js","mappings":"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","sources":["utils/price.js","utils/cache.js","pages/Catalog.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[\\.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { trackPageView } from '../utils/analytics';\nimport { fetchWithCache } from '../utils/cache';\nimport '../styles/Catalog.css';\nimport { Link, useLocation } from 'react-router-dom';\n\n// Надёжный fetch с повторами и таймаутом\nconst fetchWithRetry = async (url, options = {}, retries = 2, backoffMs = 800, timeoutMs = 12000) => {\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: { 'Accept': 'application/json', ...(options.headers || {}) },\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (attempt === retries) throw error;\n      await new Promise(r => setTimeout(r, backoffMs * Math.pow(2, attempt)));\n    }\n  }\n};\n\nconst Catalog = () => {\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\n    if (product.productGroup && product.productGroup.coverImage) {\n      return product.productGroup.coverImage;\n    }\n    \n    // Затем проверяем coverPhoto или обычное фото\n    const mainImage = product.coverPhoto || product.image;\n    \n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return mainImage || '/images/products/placeholder.png';\n  };\n\n  // Функция для преобразования кириллического названия категории в латинский ID\n  const categoryToId = (categoryName) => {\n    const categoryMap = {\n      'дрели': 'drills',\n      'болгарки': 'grinders',\n      'шуруповёрты': 'screwdrivers',\n      'перфораторы': 'hammers',\n      'лобзики': 'jigsaws',\n      'лазерные уровни': 'levels',\n      'генераторы': 'generators',\n      'измерители': 'measuring',\n      'дрель': 'drills',\n      'болгарка': 'grinders',\n      'шуруповёрт': 'screwdrivers',\n      'перфоратор': 'hammers',\n      'лобзик': 'jigsaws',\n      'лазерный уровень': 'levels',\n      'генератор': 'generators',\n      'измеритель': 'measuring'\n    };\n    \n    // Нормализуем название: убираем лишние пробелы, приводим к нижнему регистру\n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\s+/g, ' ');\n    \n    // Сначала ищем точное совпадение\n    if (categoryMap[normalizedName]) {\n      return categoryMap[normalizedName];\n    }\n    \n    // Если точного совпадения нет, ищем по частичному совпадению\n    for (const [key, value] of Object.entries(categoryMap)) {\n      if (normalizedName.includes(key) || key.includes(normalizedName)) {\n        return value;\n      }\n    }\n    \n    // Если ничего не найдено, создаем ID из названия\n    return normalizedName.replace(/[^a-z0-9]/g, '-');\n  };\n\n  // Функция для получения названия категории по ID\n  const idToCategory = (categoryId) => {\n    const idMap = {\n      'drills': 'Дрели',\n      'grinders': 'Болгарки',\n      'screwdrivers': 'Шуруповёрты',\n      'hammers': 'Перфораторы',\n      'jigsaws': 'Лобзики',\n      'levels': 'Лазерные уровни',\n      'генераторы': 'Генераторы',\n      'measuring': 'Измерители'\n    };\n    \n    // Если есть точное совпадение в маппинге, возвращаем его\n    if (idMap[categoryId]) {\n      return idMap[categoryId];\n    }\n    \n    // Если нет точного совпадения, ищем по частичному совпадению\n    const foundCategory = categories.find(cat => cat.id === categoryId);\n    if (foundCategory) {\n      return foundCategory.name;\n    }\n    \n    // Если ничего не найдено, возвращаем ID как есть\n    return categoryId;\n  };\n\n  // Статические категории для fallback (без \"Все товары\")\n  const staticCategories = [\n    { id: 'drills', name: 'Дрели' },\n    { id: 'grinders', name: 'Болгарки' },\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\n    { id: 'hammers', name: 'Перфораторы' },\n    { id: 'jigsaws', name: 'Лобзики' },\n    { id: 'levels', name: 'Лазерные уровни' },\n    { id: 'generators', name: 'Генераторы' },\n    { id: 'measuring', name: 'Измерители' }\n  ];\n\n  const location = useLocation();\n  const getCategoryFromQuery = () => {\n    // Извлекаем категорию из URL пути\n    const pathParts = location.pathname.split('/');\n    if (pathParts.length > 2 && pathParts[1] === 'catalog') {\n      return pathParts[2]; // Возвращаем название категории из URL\n    }\n    return null; // По умолчанию не выбрана категория - показываем все\n  };\n  const [selectedCategory, setSelectedCategory] = useState(getCategoryFromQuery());\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(24);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n\n  // Отслеживаем изменения URL для определения активной категории\n  useEffect(() => {\n    const categoryFromUrl = getCategoryFromQuery();\n    setSelectedCategory(categoryFromUrl);\n  }, [location.search, location.pathname]);\n\n  // Закрытие выпадающего списка при клике вне его\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.category-dropdown')) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    if (isDropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isDropdownOpen]);\n\n          const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  // Загрузка товаров с кэшированием\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    fetchWithCache(API_URL, {}, 10 * 60 * 1000) // Кэш на 10 минут\n      .then(data => {\n        setProducts(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Ошибка загрузки товаров');\n        setLoading(false);\n      });\n  }, []);\n\n  // Отслеживаем просмотр страницы каталога\n  useEffect(() => {\n    trackPageView('catalog');\n  }, []);\n\n  // Извлечение категорий из товаров\n  useEffect(() => {\n    if (products.length > 0) {\n      setCategoriesLoading(true);\n      \n      // Извлекаем уникальные категории из товаров, нормализуем и сортируем их\n      const categoryMap = new Map();\n      \n      products.forEach(product => {\n        if (product.category) {\n          // Нормализуем название категории: убираем лишние пробелы и приводим к нижнему регистру\n          const normalizedCategory = product.category.trim().toLowerCase().replace(/\\s+/g, ' ');\n          const originalCategory = product.category.trim();\n          \n          // Если такой нормализованной категории еще нет, добавляем её\n          if (!categoryMap.has(normalizedCategory)) {\n            categoryMap.set(normalizedCategory, originalCategory);\n          }\n        }\n      });\n      \n      const uniqueCategories = Array.from(categoryMap.values()).sort();\n      \n      if (uniqueCategories.length > 0) {\n        // Убираем \"Все товары\" - показываем только реальные категории\n        const realCategories = uniqueCategories.map(category => ({\n          id: categoryToId(category),\n          name: category\n        }));\n        setCategories(realCategories);\n      } else {\n        // Если нет категорий в товарах, используем статические\n        setCategories(staticCategories);\n      }\n      setCategoriesLoading(false);\n    }\n  }, [products]);\n\n  // Принудительное применение стилей для карточек\n  useEffect(() => {\n    const forceStyles = () => {\n      const grid = document.querySelector('.catalog-products-grid');\n      const cards = document.querySelectorAll('.product-card');\n      const images = document.querySelectorAll('.product-image');\n      const infos = document.querySelectorAll('.product-info');\n      \n      if (grid) {\n        grid.style.display = 'grid';\n        grid.style.gap = '0';\n        grid.style.margin = '0';\n        grid.style.padding = '0';\n        grid.style.borderCollapse = 'collapse';\n        grid.style.borderSpacing = '0';\n      }\n      \n      cards.forEach(card => {\n        card.style.margin = '-1px';\n        card.style.border = '1px solid #e3e6ea';\n        card.style.borderRadius = '0';\n        card.style.padding = '0';\n        card.style.background = '#fff';\n        card.style.display = 'flex';\n        card.style.flexDirection = 'column';\n        card.style.height = '100%';\n        card.style.position = 'relative';\n        card.style.overflow = 'hidden';\n        card.style.boxSizing = 'border-box';\n        card.style.minHeight = 'auto';\n      });\n      \n      images.forEach(img => {\n        img.style.height = '160px';\n        img.style.padding = '0';\n        img.style.margin = '0';\n      });\n      \n      infos.forEach(info => {\n        info.style.padding = '6px';\n        info.style.minHeight = '80px';\n      });\n    };\n\n    // Применяем стили сразу и после загрузки\n    forceStyles();\n    setTimeout(forceStyles, 50);\n    setTimeout(forceStyles, 100);\n    setTimeout(forceStyles, 200);\n    setTimeout(forceStyles, 500);\n    setTimeout(forceStyles, 1000);\n\n    // Применяем стили при изменении размера окна\n    const handleResize = () => {\n      setTimeout(forceStyles, 100);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [products]);\n\n  // При загрузке /catalog показываем все товары, при выборе категории - фильтруем\n  const filteredProducts = selectedCategory\n    ? products.filter(product => {\n        if (!product.category) return false;\n        const productCategoryId = categoryToId(product.category.trim());\n        return productCategoryId === selectedCategory;\n      })\n    : products;\n\n  // Пагинация\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n\n  // Сброс на первую страницу при смене категории\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedCategory]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"catalog\">\n      <Header />\n      <main className=\"catalog-main\">\n        <div className=\"container catalog-layout\">\n          <aside className=\"catalog-sidebar desktop-sidebar\">\n            <h3 className=\"sidebar-title\">Категории</h3>\n            {categoriesLoading ? (\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                Загрузка категорий...\n              </div>\n            ) : (\n              <ul className=\"sidebar-categories\">\n                {categories.map(category => (\n                  <li key={category.id}>\n                    <Link\n                      to={`/catalog/${category.id}`}\n                      className={`sidebar-category-btn${selectedCategory === category.id ? ' active' : ''}`}\n                      style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\n                    >\n                      {category.name}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </aside>\n          <div className=\"catalog-content\">\n            <div className=\"category-dropdown-container mobile-dropdown\">\n              <div className={`category-dropdown ${isDropdownOpen ? 'open' : ''}`}>\n                <button \n                  className=\"category-dropdown-btn\"\n                  onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                  disabled={categoriesLoading}\n                >\n                  <span>\n                    {categoriesLoading \n                      ? 'Загрузка...' \n                      : location.pathname === '/catalog'\n                        ? 'Каталог товаров'\n                        : selectedCategory \n                          ? idToCategory(selectedCategory) || 'Каталог товаров'\n                          : 'Каталог товаров'\n                    }\n                  </span>\n                  <span className=\"dropdown-arrow\">▼</span>\n                </button>\n                {isDropdownOpen && !categoriesLoading && (\n                  <div className=\"category-dropdown-menu\">\n                    {categories.map(category => (\n                      <Link\n                        key={category.id}\n                        to={`/catalog/${category.id}`}\n                        className={`category-dropdown-item${selectedCategory === category.id ? ' active' : ''}`}\n                        style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\n                        onClick={() => setIsDropdownOpen(false)}\n                      >\n                        {category.name}\n                      </Link>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n            <h1 className=\"catalog-title\" style={{textAlign: 'left', marginLeft: 0}}>\n              {categoriesLoading \n                ? 'Каталог товаров' \n                : location.pathname === '/catalog'\n                  ? 'Каталог товаров'\n                  : selectedCategory \n                    ? idToCategory(selectedCategory) || 'Каталог товаров'\n                    : 'Каталог товаров'\n              }\n            </h1>\n            {loading ? (\n              <div style={{padding: 32}}>Загрузка...</div>\n            ) : error ? (\n              <div style={{color: 'red', padding: 32}}>{error}</div>\n            ) : (\n            <div className=\"catalog-products-grid\" style={{gap: 0}}>\n              {currentProducts.map(product => (\n                <Link\n                  to={`/product/${product._id}`}\n                  key={product._id}\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <div\n                    className=\"product-card kaspi-style mini-product-card\"\n                    style={{ cursor: 'pointer', minHeight: 'auto', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', border: '1px solid #e3e6ea', margin: '-1px' }}\n                  >\n                    <div className=\"product-image\" style={{height: '160px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                      <picture style={{width: '100%', height: '100%'}}>\n                        <source \n                          srcSet={getOptimalImage(product, 'webp')} \n                          type=\"image/webp\"\n                        />\n                        <img \n                          src={getOptimalImage(product, 'medium')} \n                          alt={product.name} \n                          style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                          loading=\"lazy\"\n                          width=\"260\"\n                          height=\"160\"\n                        />\n                      </picture>\n                    </div>\n                    <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 12px auto', alignSelf:'center'}}></div>\n                    <div className=\"product-info\" style={{padding: '6px 8px 3px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight: '80px'}}>\n                      <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '20px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                      <div style={{width:'100%', textAlign:'left', margin:'0 0 2px 0'}}>\n                        <span style={{color:'#888', fontSize:'0.98rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                      </div>\n                      <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:2, justifyContent:'flex-start', width:'100%'}}>\n                        <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1.25rem',letterSpacing:0.5}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                        <span style={{height:'2.7em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 7px',verticalAlign:'middle'}}></span>\n                      </div>\n                  </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n            )}\n            \n            {/* Пагинация */}\n            {totalPages > 1 && (\n              <div className=\"pagination-container\" style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginTop: '40px',\n                marginBottom: '20px',\n                gap: '8px'\n              }}>\n                {/* Кнопка \"Предыдущая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === 1 ? '#f5f5f5' : '#fff',\n                    color: currentPage === 1 ? '#999' : '#333',\n                    cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  ← Назад\n                </button>\n                \n                {/* Номера страниц */}\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => {\n                  // Показываем только первые 5 страниц, последние 5 и текущую с соседними\n                  if (\n                    pageNumber === 1 ||\n                    pageNumber === totalPages ||\n                    (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\n                  ) {\n                    return (\n                      <button\n                        key={pageNumber}\n                        onClick={() => handlePageChange(pageNumber)}\n                        style={{\n                          padding: '8px 12px',\n                          border: '1px solid #e3e6ea',\n                          background: currentPage === pageNumber ? '#e86c0a' : '#fff',\n                          color: currentPage === pageNumber ? '#fff' : '#333',\n                          cursor: 'pointer',\n                          borderRadius: '4px',\n                          fontSize: '14px',\n                          fontWeight: '500',\n                          minWidth: '40px'\n                        }}\n                      >\n                        {pageNumber}\n                      </button>\n                    );\n                  } else if (\n                    pageNumber === currentPage - 2 ||\n                    pageNumber === currentPage + 2\n                  ) {\n                    return (\n                      <span\n                        key={pageNumber}\n                        style={{\n                          padding: '8px 4px',\n                          color: '#999',\n                          fontSize: '14px'\n                        }}\n                      >\n                        ...\n                      </span>\n                    );\n                  }\n                  return null;\n                })}\n                \n                {/* Кнопка \"Следующая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === totalPages ? '#f5f5f5' : '#fff',\n                    color: currentPage === totalPages ? '#999' : '#333',\n                    cursor: currentPage === totalPages ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  Вперед →\n                </button>\n              </div>\n            )}\n            \n            <section className=\"seo-description\">\n              <h2>Электроинструменты: качество и надёжность</h2>\n              <p>Мы предлагаем широкий ассортимент профессиональных электроинструментов от ведущих мировых производителей. В нашем каталоге вы найдёте дрели, шуруповёрты, болгарки, перфораторы и многое другое. Вся продукция сертифицирована и имеет гарантию от производителя.</p>\n              <p>Работаем как с розничными, так и с оптовыми клиентами. Предоставляем техническую поддержку и консультации по выбору инструмента. Доставка по Алматы и области.</p>\n            </section>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Catalog; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","Catalog","getOptimalImage","product","preferredSize","productGroup","coverImage","mainImage","coverPhoto","image","imageVariants","webp","categoryToId","categoryName","categoryMap","normalizedName","toLowerCase","Object","entries","idToCategory","categoryId","idMap","foundCategory","categories","find","cat","id","name","staticCategories","location","useLocation","getCategoryFromQuery","pathParts","pathname","split","selectedCategory","setSelectedCategory","useState","products","setProducts","loading","setLoading","setError","isDropdownOpen","setIsDropdownOpen","currentPage","setCurrentPage","productsPerPage","setCategories","categoriesLoading","setCategoriesLoading","useEffect","categoryFromUrl","search","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","then","catch","err","trackPageView","forEach","category","normalizedCategory","originalCategory","has","uniqueCategories","Array","from","values","sort","realCategories","map","forceStyles","grid","querySelector","cards","querySelectorAll","images","infos","style","display","gap","margin","padding","borderCollapse","borderSpacing","card","border","borderRadius","background","flexDirection","height","position","overflow","boxSizing","minHeight","img","info","setTimeout","handleResize","window","filteredProducts","filter","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","ceil","handlePageChange","pageNumber","scrollTo","top","behavior","_jsxs","className","children","_jsx","Header","textAlign","color","Link","to","textDecoration","width","onClick","disabled","marginLeft","_id","cursor","fontFamily","fontWeight","alignItems","justifyContent","srcSet","type","src","alt","objectFit","maxWidth","borderTop","alignSelf","fontSize","lineHeight","marginBottom","letterSpacing","marginTop","price","verticalAlign","_","index","minWidth","Footer"],"sourceRoot":""}