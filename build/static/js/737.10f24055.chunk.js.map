{"version":3,"file":"static/js/737.10f24055.chunk.js","mappings":"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","sources":["admin/PickupPoints.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst PickupPoints = ({ onLogout }) => {\n  const [pickupPoints, setPickupPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingPoint, setEditingPoint] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-a8bl.onrender.com/api/pickup-points';\n\n  // Начальное состояние формы\n  const initialFormState = {\n    name: '',\n    address: '',\n    city: '',\n    description: '',\n    workingHours: 'Пн-Пт: 9:00-18:00',\n    phone: '',\n    deliveryType: 'pickup',\n    deliveryCost: 0,\n    isActive: true\n  };\n\n  const [formData, setFormData] = useState(initialFormState);\n\n  // Типы доставки\n  const deliveryTypes = [\n    { value: 'pickup', label: 'Самовывоз', cost: 0 },\n    { value: 'indriver', label: 'InDriver', cost: 2000 },\n    { value: 'yandex', label: 'Яндекс.Доставка', cost: 2500 },\n    { value: 'kazpost', label: 'Казпочта', cost: 1500 },\n    { value: 'cdek', label: 'СДЭК', cost: 3000 },\n    { value: 'air', label: 'Авиа доставка', cost: 5000 }\n  ];\n\n  useEffect(() => {\n    fetchPickupPoints();\n  }, []);\n\n  const fetchPickupPoints = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      console.log('Загружаем пункты самовывоза с:', API_URL);\n      const response = await fetch(API_URL);\n      console.log('Статус ответа:', response.status);\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Полученные данные:', data);\n        setPickupPoints(Array.isArray(data) ? data : []);\n      } else {\n        console.error('HTTP ошибка:', response.status, response.statusText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки пунктов самовывоза:', error);\n      if (error.message.includes('Failed to fetch')) {\n        setError('Сервер недоступен. Проверьте подключение к интернету.');\n      } else if (error.message.includes('Unexpected token')) {\n        setError('Сервер вернул неверный формат данных. Возможно, сервер не запущен.');\n      } else {\n        setError(`Ошибка загрузки: ${error.message}`);\n      }\n      setPickupPoints([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n\n    // Валидация\n    if (!formData.name.trim() || !formData.address.trim() || !formData.city.trim()) {\n      setError('Заполните все обязательные поля');\n      return;\n    }\n\n    try {\n      const url = editingPoint ? `${API_URL}/${editingPoint._id}` : API_URL;\n      const method = editingPoint ? 'PUT' : 'POST';\n\n      console.log('Отправляем запрос:', method, url);\n      console.log('Данные:', formData);\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      console.log('Статус ответа:', response.status);\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Успешный ответ:', result);\n        setSuccess(editingPoint ? 'Пункт самовывоза обновлен' : 'Пункт самовывоза добавлен');\n        setFormData(initialFormState);\n        setEditingPoint(null);\n        setShowForm(false);\n        fetchPickupPoints();\n        \n        // Скрыть сообщение через 3 секунды\n        setTimeout(() => setSuccess(''), 3000);\n      } else {\n        let errorMessage = 'Ошибка сервера';\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.error || errorData.message || `HTTP ${response.status}`;\n        } catch (parseError) {\n          errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n        }\n        throw new Error(errorMessage);\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      if (error.message.includes('Failed to fetch')) {\n        setError('Сервер недоступен. Проверьте подключение к интернету.');\n      } else if (error.message.includes('Unexpected token')) {\n        setError('Сервер вернул неверный формат данных. Возможно, сервер не запущен.');\n      } else {\n        setError(error.message);\n      }\n    }\n  };\n\n  const handleEdit = (point) => {\n    setEditingPoint(point);\n    setFormData({\n      name: point.name || '',\n      address: point.address || '',\n      city: point.city || '',\n      description: point.description || '',\n      workingHours: point.workingHours || 'Пн-Пт: 9:00-18:00',\n      phone: point.phone || '',\n      deliveryType: point.deliveryType || 'pickup',\n      deliveryCost: point.deliveryCost || 0,\n      isActive: point.isActive !== false\n    });\n    setShowForm(true);\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('Вы уверены, что хотите удалить этот пункт самовывоза?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_URL}/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (response.ok) {\n        setSuccess('Пункт самовывоза удален');\n        fetchPickupPoints();\n        setTimeout(() => setSuccess(''), 3000);\n      } else {\n        throw new Error('Ошибка удаления');\n      }\n    } catch (error) {\n      setError('Ошибка при удалении');\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData(initialFormState);\n    setEditingPoint(null);\n    setShowForm(false);\n    setError('');\n  };\n\n  const handleDeliveryTypeChange = (type) => {\n    const selectedType = deliveryTypes.find(t => t.value === type);\n    setFormData({\n      ...formData,\n      deliveryType: type,\n      deliveryCost: selectedType ? selectedType.cost : 0\n    });\n  };\n\n  const getDeliveryTypeLabel = (type) => {\n    const found = deliveryTypes.find(t => t.value === type);\n    return found ? found.label : type;\n  };\n\n  const getStatusBadge = (isActive) => {\n    return (\n      <span style={{\n        padding: '4px 8px',\n        borderRadius: '12px',\n        fontSize: '12px',\n        fontWeight: '500',\n        backgroundColor: isActive ? '#d4edda' : '#f8d7da',\n        color: isActive ? '#155724' : '#721c24'\n      }}>\n        {isActive ? 'Активен' : 'Неактивен'}\n      </span>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '50vh',\n        fontSize: '18px',\n        color: '#666'\n      }}>\n        Загрузка...\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      minHeight: '100vh', \n      background: '#f5f7fa', \n      padding: '32px 0' \n    }}>\n      <div style={{ \n        maxWidth: 1200, \n        margin: '0 auto', \n        background: '#fff', \n        borderRadius: 12, \n        border: '1px solid #e0e0e0', \n        padding: 24 \n      }}>\n        \n        {/* Заголовок и навигация */}\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center', \n          marginBottom: 24 \n        }}>\n          <h1 style={{ \n            fontWeight: 700, \n            fontSize: 28, \n            color: '#1a2236', \n            margin: 0 \n          }}>\n            🏬 Управление пунктами самовывоза\n          </h1>\n          <div style={{ display: 'flex', gap: 12 }}>\n            <button\n              onClick={() => navigate('/admin/products')}\n              style={{\n                background: '#6c757d',\n                color: '#fff',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 16px',\n                fontWeight: 600,\n                cursor: 'pointer',\n                fontSize: 14\n              }}\n            >\n              📦 Товары\n            </button>\n            <button\n              onClick={() => navigate('/admin/settings')}\n              style={{\n                background: '#1e88e5',\n                color: '#fff',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 16px',\n                fontWeight: 600,\n                cursor: 'pointer',\n                fontSize: 14\n              }}\n            >\n              ⚙️ Настройки\n            </button>\n            <button\n              onClick={onLogout}\n              style={{\n                background: '#dc3545',\n                color: '#fff',\n                border: 'none',\n                borderRadius: 8,\n                padding: '10px 16px',\n                fontWeight: 600,\n                cursor: 'pointer',\n                fontSize: 14\n              }}\n            >\n              Выйти\n            </button>\n          </div>\n        </div>\n\n\n\n        {/* Уведомления */}\n        {error && (\n          <div style={{\n            background: '#f8d7da',\n            border: '1px solid #f5c6cb',\n            color: '#721c24',\n            padding: '12px 16px',\n            borderRadius: 8,\n            marginBottom: 20\n          }}>\n            ❌ {error}\n          </div>\n        )}\n\n        {success && (\n          <div style={{\n            background: '#d4edda',\n            border: '1px solid #c3e6cb',\n            color: '#155724',\n            padding: '12px 16px',\n            borderRadius: 8,\n            marginBottom: 20\n          }}>\n            ✅ {success}\n          </div>\n        )}\n\n        {/* Кнопки управления */}\n        <div style={{ marginBottom: 24, display: 'flex', gap: 12 }}>\n          <button\n            onClick={() => {\n              setShowForm(true);\n              setEditingPoint(null);\n              setFormData(initialFormState);\n            }}\n            style={{\n              background: '#28a745',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 8,\n              padding: '12px 24px',\n              fontWeight: 600,\n              cursor: 'pointer',\n              fontSize: 16\n            }}\n          >\n            ➕ Добавить пункт самовывоза\n          </button>\n          \n          <button\n            onClick={async () => {\n              setError('');\n              setSuccess('Тестируем подключение к серверу...');\n              \n              try {\n                // Сначала проверим основной API\n                const productsResponse = await fetch('https://electro-a8bl.onrender.com/api/products');\n                console.log('API продуктов статус:', productsResponse.status);\n                \n                // Затем проверим тестовый endpoint API пунктов самовывоза\n                const testResponse = await fetch('https://electro-a8bl.onrender.com/api/pickup-points/test');\n                console.log('Тестовый API статус:', testResponse.status);\n                \n                if (testResponse.ok) {\n                  const testData = await testResponse.json();\n                  console.log('Тестовые данные:', testData);\n                  setSuccess(`✅ Сервер доступен! База данных: ${testData.database}, Коллекции: ${testData.collections.join(', ')}`);\n                  fetchPickupPoints();\n                } else {\n                  // Если тестовый endpoint не работает, проверим основной\n                  const pickupResponse = await fetch('https://electro-a8bl.onrender.com/api/pickup-points');\n                  console.log('API пунктов самовывоза статус:', pickupResponse.status);\n                  \n                  if (pickupResponse.ok) {\n                    setSuccess('✅ Сервер доступен! API пунктов самовывоза работает.');\n                    fetchPickupPoints();\n                  } else {\n                    setError(`❌ API пунктов самовывоза недоступен. Статус: ${pickupResponse.status}`);\n                  }\n                }\n              } catch (error) {\n                console.error('Ошибка тестирования:', error);\n                setError(`❌ Ошибка подключения: ${error.message}`);\n              }\n            }}\n            style={{\n              background: '#17a2b8',\n              color: '#fff',\n              border: 'none',\n              borderRadius: 8,\n              padding: '12px 24px',\n              fontWeight: 600,\n              cursor: 'pointer',\n              fontSize: 16\n            }}\n          >\n            🔄 Тест API\n          </button>\n        </div>\n\n        {/* Форма добавления/редактирования */}\n        {showForm && (\n          <div style={{\n            background: '#f8f9fa',\n            border: '1px solid #e9ecef',\n            borderRadius: 12,\n            padding: 24,\n            marginBottom: 24,\n            position: 'relative'\n          }}>\n            <button\n              onClick={handleCancel}\n              style={{\n                position: 'absolute',\n                top: 16,\n                right: 16,\n                background: 'none',\n                border: 'none',\n                fontSize: 20,\n                color: '#666',\n                cursor: 'pointer',\n                width: 32,\n                height: 32,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                borderRadius: '50%',\n                transition: 'all 0.2s'\n              }}\n              onMouseOver={(e) => {\n                e.target.style.background = '#f0f0f0';\n                e.target.style.color = '#333';\n              }}\n              onMouseOut={(e) => {\n                e.target.style.background = 'none';\n                e.target.style.color = '#666';\n              }}\n            >\n              ✕\n            </button>\n\n            <h2 style={{ \n              margin: '0 0 20px 0', \n              fontSize: 20, \n              fontWeight: 600, \n              color: '#333',\n              paddingRight: 40\n            }}>\n              {editingPoint ? 'Редактировать пункт самовывоза' : 'Добавить новый пункт самовывоза'}\n            </h2>\n\n            <form onSubmit={handleSubmit} style={{ display: 'grid', gap: 16 }}>\n              \n              {/* Основная информация */}\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16 }}>\n                <div>\n                  <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                    Название пункта *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    placeholder=\"Например: Главный офис\"\n                    style={{\n                      width: '100%',\n                      padding: '10px 12px',\n                      border: '1px solid #ddd',\n                      borderRadius: 6,\n                      fontSize: 14\n                    }}\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                    Город *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.city}\n                    onChange={(e) => setFormData({ ...formData, city: e.target.value })}\n                    placeholder=\"Например: Алматы\"\n                    style={{\n                      width: '100%',\n                      padding: '10px 12px',\n                      border: '1px solid #ddd',\n                      borderRadius: 6,\n                      fontSize: 14\n                    }}\n                    required\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                  Адрес *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.address}\n                  onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n                  placeholder=\"Полный адрес пункта самовывоза\"\n                  style={{\n                    width: '100%',\n                    padding: '10px 12px',\n                    border: '1px solid #ddd',\n                    borderRadius: 6,\n                    fontSize: 14\n                  }}\n                  required\n                />\n              </div>\n\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16 }}>\n                <div>\n                  <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                    Телефон\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                    placeholder=\"+7 (777) 123-45-67\"\n                    style={{\n                      width: '100%',\n                      padding: '10px 12px',\n                      border: '1px solid #ddd',\n                      borderRadius: 6,\n                      fontSize: 14\n                    }}\n                  />\n                </div>\n\n                <div>\n                  <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                    Часы работы\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.workingHours}\n                    onChange={(e) => setFormData({ ...formData, workingHours: e.target.value })}\n                    placeholder=\"Пн-Пт: 9:00-18:00\"\n                    style={{\n                      width: '100%',\n                      padding: '10px 12px',\n                      border: '1px solid #ddd',\n                      borderRadius: 6,\n                      fontSize: 14\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                  Описание\n                </label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                  placeholder=\"Дополнительная информация о пункте самовывоза\"\n                  style={{\n                    width: '100%',\n                    padding: '10px 12px',\n                    border: '1px solid #ddd',\n                    borderRadius: 6,\n                    fontSize: 14,\n                    minHeight: 80,\n                    resize: 'vertical'\n                  }}\n                />\n              </div>\n\n              {/* Тип доставки */}\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16 }}>\n                <div>\n                  <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                    Тип доставки\n                  </label>\n                  <select\n                    value={formData.deliveryType}\n                    onChange={(e) => handleDeliveryTypeChange(e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '10px 12px',\n                      border: '1px solid #ddd',\n                      borderRadius: 6,\n                      fontSize: 14,\n                      background: '#fff'\n                    }}\n                  >\n                    {deliveryTypes.map(type => (\n                      <option key={type.value} value={type.value}>\n                        {type.label} {type.cost > 0 ? `(${type.cost} ₸)` : '(Бесплатно)'}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#333' }}>\n                    Стоимость доставки (₸)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.deliveryCost}\n                    onChange={(e) => setFormData({ ...formData, deliveryCost: Number(e.target.value) })}\n                    min=\"0\"\n                    style={{\n                      width: '100%',\n                      padding: '10px 12px',\n                      border: '1px solid #ddd',\n                      borderRadius: 6,\n                      fontSize: 14\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label style={{ display: 'flex', alignItems: 'center', gap: 8, cursor: 'pointer' }}>\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.isActive}\n                    onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n                    style={{ width: 16, height: 16 }}\n                  />\n                  <span style={{ fontWeight: 500, color: '#333' }}>Активный пункт</span>\n                </label>\n              </div>\n\n              {/* Кнопки формы */}\n              <div style={{ display: 'flex', gap: 12, justifyContent: 'flex-end' }}>\n                <button\n                  type=\"button\"\n                  onClick={handleCancel}\n                  style={{\n                    background: '#6c757d',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: 6,\n                    padding: '10px 20px',\n                    fontWeight: 500,\n                    cursor: 'pointer',\n                    fontSize: 14\n                  }}\n                >\n                  Отмена\n                </button>\n                <button\n                  type=\"submit\"\n                  style={{\n                    background: '#28a745',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: 6,\n                    padding: '10px 20px',\n                    fontWeight: 600,\n                    cursor: 'pointer',\n                    fontSize: 14\n                  }}\n                >\n                  {editingPoint ? 'Сохранить изменения' : 'Добавить пункт'}\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        {/* Список пунктов самовывоза */}\n        <div>\n          <h2 style={{ \n            fontSize: 20, \n            fontWeight: 600, \n            color: '#333', \n            marginBottom: 16 \n          }}>\n            Существующие пункты самовывоза ({pickupPoints.length})\n          </h2>\n\n          {pickupPoints.length === 0 ? (\n            <div style={{\n              textAlign: 'center',\n              padding: '40px 20px',\n              color: '#666',\n              background: '#f8f9fa',\n              borderRadius: 8,\n              border: '1px dashed #dee2e6'\n            }}>\n              <div style={{ fontSize: 48, marginBottom: 16 }}>🏬</div>\n              <div style={{ fontSize: 16, marginBottom: 8 }}>Пункты самовывоза не найдены</div>\n              <div style={{ fontSize: 14, color: '#999' }}>\n                Добавьте первый пункт самовывоза, нажав кнопку выше\n              </div>\n            </div>\n          ) : (\n            <div style={{ display: 'grid', gap: 16 }}>\n              {pickupPoints.map((point) => (\n                <div\n                  key={point._id}\n                  style={{\n                    border: '1px solid #e0e0e0',\n                    borderRadius: 12,\n                    padding: 20,\n                    background: point.isActive ? '#fff' : '#f8f9fa',\n                    opacity: point.isActive ? 1 : 0.7\n                  }}\n                >\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                    <div style={{ flex: 1 }}>\n                      <div style={{ display: 'flex', alignItems: 'center', gap: 12, marginBottom: 8 }}>\n                        <h3 style={{ margin: 0, fontSize: 18, fontWeight: 600, color: '#333' }}>\n                          {point.name}\n                        </h3>\n                        {getStatusBadge(point.isActive)}\n                      </div>\n                      \n                      <div style={{ marginBottom: 8 }}>\n                        <strong style={{ color: '#666' }}>📍 Адрес:</strong> {point.address}\n                      </div>\n                      \n                      <div style={{ marginBottom: 8 }}>\n                        <strong style={{ color: '#666' }}>🏙️ Город:</strong> {point.city}\n                      </div>\n                      \n                      {point.phone && (\n                        <div style={{ marginBottom: 8 }}>\n                          <strong style={{ color: '#666' }}>📞 Телефон:</strong> {point.phone}\n                        </div>\n                      )}\n                      \n                      <div style={{ marginBottom: 8 }}>\n                        <strong style={{ color: '#666' }}>🕒 Часы работы:</strong> {point.workingHours}\n                      </div>\n                      \n                      <div style={{ marginBottom: 8 }}>\n                        <strong style={{ color: '#666' }}>🚚 Тип доставки:</strong> {getDeliveryTypeLabel(point.deliveryType)}\n                        {point.deliveryCost > 0 ? ` (${point.deliveryCost} ₸)` : ' (Бесплатно)'}\n                      </div>\n                      \n                      {point.description && (\n                        <div style={{ marginBottom: 8 }}>\n                          <strong style={{ color: '#666' }}>📝 Описание:</strong> {point.description}\n                        </div>\n                      )}\n                      \n                      <div style={{ fontSize: 12, color: '#999' }}>\n                        Создан: {new Date(point.createdAt).toLocaleDateString('ru-RU')}\n                        {point.updatedAt && (\n                          <span> | Обновлен: {new Date(point.updatedAt).toLocaleDateString('ru-RU')}</span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div style={{ display: 'flex', flexDirection: 'column', gap: 8 }}>\n                      <button\n                        onClick={() => handleEdit(point)}\n                        style={{\n                          background: '#ffc107',\n                          color: '#212529',\n                          border: 'none',\n                          borderRadius: 6,\n                          padding: '8px 16px',\n                          fontWeight: 500,\n                          cursor: 'pointer',\n                          fontSize: 13\n                        }}\n                      >\n                        ✏️ Редактировать\n                      </button>\n                      <button\n                        onClick={() => handleDelete(point._id)}\n                        style={{\n                          background: '#dc3545',\n                          color: '#fff',\n                          border: 'none',\n                          borderRadius: 6,\n                          padding: '8px 16px',\n                          fontWeight: 500,\n                          cursor: 'pointer',\n                          fontSize: 13\n                        }}\n                      >\n                        🗑️ Удалить\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PickupPoints; "],"names":["_ref","onLogout","pickupPoints","setPickupPoints","useState","loading","setLoading","showForm","setShowForm","editingPoint","setEditingPoint","error","setError","success","setSuccess","navigate","useNavigate","API_URL","initialFormState","name","address","city","description","workingHours","phone","deliveryType","deliveryCost","isActive","formData","setFormData","deliveryTypes","value","label","cost","useEffect","fetchPickupPoints","async","console","log","response","fetch","status","ok","statusText","Error","data","json","Array","isArray","message","includes","handleCancel","getDeliveryTypeLabel","type","found","find","t","_jsx","style","display","justifyContent","alignItems","height","fontSize","color","children","minHeight","background","padding","_jsxs","maxWidth","margin","borderRadius","border","marginBottom","fontWeight","gap","onClick","cursor","productsResponse","testResponse","testData","database","collections","join","pickupResponse","position","top","right","width","transition","onMouseOver","e","target","onMouseOut","paddingRight","onSubmit","preventDefault","trim","url","_id","method","headers","body","JSON","stringify","errorMessage","errorData","parseError","result","setTimeout","gridTemplateColumns","onChange","placeholder","required","resize","selectedType","handleDeliveryTypeChange","map","Number","min","checked","length","textAlign","point","opacity","flex","backgroundColor","Date","createdAt","toLocaleDateString","updatedAt","flexDirection","handleEdit","window","confirm","id","handleDelete"],"sourceRoot":""}