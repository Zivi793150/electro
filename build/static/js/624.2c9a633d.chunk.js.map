{"version":3,"file":"static/js/624.2c9a633d.chunk.js","mappings":"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","sources":["components/Modal.js","utils/telegram.js","pages/Product.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData);\r\n      \r\n      if (result.success) {\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n// В реальном проекте здесь будет интеграция с Telegram Bot API\r\n\r\nexport const sendToTelegram = async (formData) => {\r\n  try {\r\n    // Здесь будет реальная отправка в Telegram\r\n    // Пока что просто логируем данные\r\n    \r\n    const message = `\r\n🔔 Новая заявка с сайта!\r\n\r\n👤 Имя: ${formData.name}\r\n📞 Телефон: ${formData.phone}\r\n💬 Сообщение: ${formData.message || 'Не указано'}\r\n⏰ Время: ${new Date().toLocaleString('ru-RU')}\r\n    `;\r\n\r\n    console.log('Отправка в Telegram:', message);\r\n    \r\n    // В реальном проекте здесь будет fetch запрос к Telegram Bot API\r\n    // const response = await fetch('/api/send-telegram', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     chat_id: 'YOUR_CHAT_ID',\r\n    //     text: message,\r\n    //     parse_mode: 'HTML'\r\n    //   })\r\n    // });\r\n    \r\n    return { success: true, message: 'Заявка успешно отправлена!' };\r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport DeliveryInfo from '../components/DeliveryInfo';\nimport '../styles/Product.css';\n\nconst categories = [\n  { id: 'grinders', name: 'Болгарки' },\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\n  { id: 'hammers', name: 'Перфораторы' },\n  { id: 'drills', name: 'Дрели' },\n  { id: 'jigsaws', name: 'Лобзики' },\n  { id: 'levels', name: 'Лазерные уровни' },\n  { id: 'generators', name: 'Генераторы' },\n  { id: 'measuring', name: 'Измерители' }\n];\n\nconst Product = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [siteSettings, setSiteSettings] = useState({\n    city: 'Алматы',\n    deliveryInfo: {\n      freeDelivery: 'Бесплатная доставка по городу',\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\n      pickupAddress: 'ул. Толе би 216Б',\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\n    }\n  });\n  \n  const [selectedCity, setSelectedCity] = useState(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    return savedCity || 'Алматы';\n  });\n  \n  const [selectedDelivery, setSelectedDelivery] = useState(null);\n  const [deliveryInfo, setDeliveryInfo] = useState(null);\n  const [isCityChanging, setIsCityChanging] = useState(false);\n  \n  // Состояния для вариаций товара\n  const [productWithVariations, setProductWithVariations] = useState(null);\n  const [selectedVariation, setSelectedVariation] = useState(null);\n  const [variationType, setVariationType] = useState('');\n  \n\n  \n  const [detectingCity, setDetectingCity] = useState(false);\n  \n  // Функция для автоматического определения города\n  const detectUserCity = () => {\n    if (navigator.geolocation) {\n      setDetectingCity(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Используем обратное геокодирование для определения города\n          fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&addressdetails=1`)\n            .then(response => response.json())\n            .then(data => {\n              if (data.address && data.address.city) {\n                const detectedCity = data.address.city;\n                // Проверяем, есть ли этот город в нашем списке\n                if (cities.includes(detectedCity)) {\n                  setSelectedCity(detectedCity);\n                  localStorage.setItem('selectedCity', detectedCity);\n                }\n              }\n              setDetectingCity(false);\n            })\n            .catch(error => {\n              console.log('Ошибка определения города:', error);\n              setDetectingCity(false);\n            });\n        },\n        (error) => {\n          console.log('Ошибка получения геолокации:', error);\n          setDetectingCity(false);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000 // 5 минут\n        }\n      );\n    }\n  };\n  \n  // Список городов Казахстана\n  const cities = [\n    'Алматы',\n    'Астана',\n    'Шымкент',\n    'Актобе',\n    'Караганда',\n    'Тараз',\n    'Павлодар',\n    'Семей',\n    'Усть-Каменогорск',\n    'Уральск',\n    'Кызылорда',\n    'Костанай',\n    'Петропавловск',\n    'Атырау',\n    'Актау',\n    'Темиртау',\n    'Туркестан',\n    'Кокшетау',\n    'Талдыкорган',\n    'Экибастуз',\n    'Рудный',\n    'Жанаозен',\n    'Жезказган',\n    'Балхаш',\n    'Кентау',\n    'Сатпаев',\n    'Капчагай',\n    'Риддер',\n    'Степногорск',\n    'Аральск',\n    'Аркалык',\n    'Житикара',\n    'Кандыагаш',\n    'Лисаковск',\n    'Шахтинск',\n    'Абай',\n    'Аягоз',\n    'Зайсан',\n    'Курчатов',\n    'Приозерск',\n    'Серебрянск',\n    'Текели',\n    'Уштобе',\n    'Чарск',\n    'Шемонаиха',\n    'Щучинск'\n  ];\n  \n  // Объединяем все изображения из разных полей\n  const getAllImages = () => {\n    const images = [];\n    const currentProduct = getCurrentProduct();\n    \n    // Добавляем основное изображение из поля image (если есть)\n    if (currentProduct?.image) {\n      images.push(currentProduct.image);\n    }\n    \n    // Добавляем изображения из поля images\n    if (Array.isArray(currentProduct?.images)) {\n      images.push(...currentProduct.images);\n    }\n    \n    // Добавляем изображения из поля images2\n    if (Array.isArray(currentProduct?.images2)) {\n      images.push(...currentProduct.images2);\n    }\n    \n    // Добавляем изображения из поля images3\n    if (Array.isArray(currentProduct?.images3)) {\n      images.push(...currentProduct.images3);\n    }\n    \n    // Если есть вариация с изображениями, добавляем их\n    if (selectedVariation?.images && Array.isArray(selectedVariation.images)) {\n      images.push(...selectedVariation.images);\n    }\n    \n    // Если нет изображений, добавляем placeholder\n    if (images.length === 0) {\n      images.push('/images/products/placeholder.png');\n    }\n    \n    return images;\n  };\n  \n  const allImages = getAllImages();\n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-a8bl.onrender.com/api/products';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    // Сначала проверяем, есть ли у товара вариации\n    fetch(`${API_URL}/${id}/with-variations`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          // Если ошибка, загружаем обычный товар\n          return fetch(`${API_URL}/${id}`);\n        }\n        return Promise.resolve(data);\n      })\n      .then(data => {\n        if (data.error) {\n          setError(data.error);\n          setProduct(null);\n          setProductWithVariations(null);\n        } else if (data.isVariation || data.isMasterProduct) {\n          // Товар с вариациями\n          setProductWithVariations(data);\n          if (data.isVariation) {\n            setProduct(data.currentVariation.productId);\n            setSelectedVariation(data.currentVariation);\n            setVariationType(data.currentVariation.variationType);\n          } else {\n            setProduct(data.masterProduct);\n            setVariationType(data.masterProduct.variationTypes[0] || 'power');\n            // Выбираем первую вариацию по умолчанию\n            if (data.variations && data.variations.length > 0) {\n              setSelectedVariation(data.variations[0]);\n            }\n          }\n        } else {\n          // Обычный товар без вариаций\n          setProduct(data.product);\n          setProductWithVariations(null);\n        }\n        setLoading(false);\n      })\n      .catch(() => {\n        setError('Ошибка загрузки товара');\n        setLoading(false);\n      });\n  }, [id]);\n\n  useEffect(() => {\n    fetch(`${API_URL}?limit=4`)\n      .then(res => res.json())\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Загружаем информацию сайта\n  useEffect(() => {\n    fetch('https://electro-a8bl.onrender.com/api/information')\n      .then(res => res.json())\n      .then(data => {\n        if (data.information) {\n          setSiteSettings(data.information);\n        }\n      })\n      .catch(error => {\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\n      });\n  }, []);\n  \n  // Инициализируем выбранный город из localStorage и автоматически определяем город\n  useEffect(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    \n    // Если есть сохраненный город, используем его\n    if (savedCity) {\n      setSelectedCity(savedCity);\n    } else {\n      // Если нет сохраненного города, пытаемся определить автоматически\n      detectUserCity();\n    }\n  }, []);\n\n  if (loading) {\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\n  }\n  if (error || !product) {\n    return (\n      <div className=\"product\">\n        <Header />\n        <main className=\"product-main\">\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\n            <h1>Товар не найден</h1>\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/catalog\">каталог</a>.</p>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Найти категорию для хлебных крошек\n  const categoryObj = categories.find(cat => cat.id === getCurrentProduct().category);\n  const categoryName = categoryObj ? categoryObj.name : '';\n\n  // Преимущества — если есть в product, иначе дефолтные\n  const productAdvantages = getCurrentProduct().advantages || [\n    'Высокий крутящий момент и мощность',\n    'Долговечный литий-ионный аккумулятор',\n    'Компактный и лёгкий корпус для работы одной рукой'\n  ];\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = (formData) => {\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\n    alert('Спасибо! Ваша заявка отправлена. Мы свяжемся с вами в ближайшее время.');\n  };\n\n  const handleBuy = () => {\n    // Если есть выбранная вариация, используем её данные\n    const productToBuy = selectedVariation ? selectedVariation.productId : product;\n    navigate('/checkout', { state: { product: productToBuy } });\n  };\n\n  // Обработчик выбора вариации\n  const handleVariationSelect = (variation) => {\n    setSelectedVariation(variation);\n    setProduct(variation.productId);\n  };\n\n  // Получение доступных вариаций\n  const getAvailableVariations = () => {\n    if (!productWithVariations) return [];\n    \n    if (productWithVariations.isVariation) {\n      return productWithVariations.variations || [];\n    } else if (productWithVariations.isMasterProduct) {\n      return productWithVariations.variations || [];\n    }\n    \n    return [];\n  };\n\n  // Получение текущего товара для отображения\n  const getCurrentProduct = () => {\n    if (selectedVariation) {\n      return selectedVariation.productId;\n    }\n    return product;\n  };\n\n  // Модалка фото\n  const handleImageClick = () => setShowImageModal(true);\n  const handleCloseImageModal = () => setShowImageModal(false);\n  const handlePrevImage = (e) => {\n    e.stopPropagation();\n    setActiveImage((prev) => (prev - 1 + allImages.length) % allImages.length);\n  };\n  const handleNextImage = (e) => {\n    e.stopPropagation();\n    setActiveImage((prev) => (prev + 1) % allImages.length);\n  };\n  \n  const handleCityChange = (e) => {\n    const newCity = e.target.value;\n    setIsCityChanging(true);\n    setSelectedCity(newCity);\n    localStorage.setItem('selectedCity', newCity);\n    // Сбрасываем выбранную доставку при смене города\n    setSelectedDelivery(null);\n    // Загружаем информацию о доставке для нового города\n    fetchDeliveryInfo(newCity);\n    \n    // Убираем анимацию через 500мс\n    setTimeout(() => {\n      setIsCityChanging(false);\n    }, 500);\n  };\n\n  const fetchDeliveryInfo = async (cityName) => {\n    try {\n      const response = await fetch(`https://electro-a8bl.onrender.com/api/pickup-points/delivery/${encodeURIComponent(cityName)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setDeliveryInfo(data);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки информации о доставке:', error);\n    }\n  };\n  \n\n\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  return (\n    <div className=\"product-page\">\n      <Header />\n      <main className=\"product-main\">\n        <div className=\"product-container\">\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n            <a href=\"/\">Главная</a>\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <a href=\"/catalog\">Каталог</a>\n            {categoryName && (\n              <>\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                <a href={`/catalog?category=${getCurrentProduct().category}`}>{categoryName}</a>\n              </>\n            )}\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <span style={{color:'#1a2236', fontWeight:500}}>{getCurrentProduct().name}</span>\n          </nav>\n          <div className=\"product-flex\">\n            {/* Фото и миниатюры */}\n            <div className=\"product-gallery\">\n              <div className=\"product-gallery-inner\">\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\n                  <img \n                    src={getCurrentProduct().image || allImages[activeImage]} \n                    alt={getCurrentProduct().name} \n                    loading=\"lazy\"\n                    width=\"400\"\n                    height=\"400\"\n                    style={{width: '100%', height: 'auto', maxWidth: '400px'}}\n                  />\n                </div>\n                {allImages.length > 1 && (\n                  <>\n                    <div style={{textAlign:'center', color:'#888', fontSize:'1.05rem', marginTop: 20, marginBottom: 8, border:'none'}}>\n                      Чтобы увеличить, нажмите на картинку\n                    </div>\n                    <div className=\"product-thumbs\">\n                      {allImages.map((img, idx) => (\n                        <img \n                          key={idx} \n                          src={img} \n                          alt={getCurrentProduct().name + idx} \n                          className={activeImage === idx ? \"active\" : \"\"} \n                          onClick={() => setActiveImage(idx)} \n                          loading=\"lazy\"\n                          width=\"80\"\n                          height=\"80\"\n                        />\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Инфо и цена справа */}\n            <div className=\"product-info-block\">\n              <>\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 6, wordBreak: 'break-word', marginTop: 28, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\n                \n                {/* Селектор вариаций */}\n                {productWithVariations && getAvailableVariations().length > 0 && (\n                  <div className=\"product-variations\" style={{marginBottom: 15}}>\n                    <div style={{fontSize: '0.9rem', color: '#666', marginBottom: 8, fontWeight: 500}}>\n                      {variationType === 'power' && 'Мощность:'}\n                      {variationType === 'voltage' && 'Напряжение:'}\n                      {variationType === 'size' && 'Размер:'}\n                      {variationType === 'color' && 'Цвет:'}\n                      {variationType === 'custom' && 'Вариант:'}\n                    </div>\n                    <div className=\"variations-list\" style={{display: 'flex', gap: 8, flexWrap: 'wrap'}}>\n                      {getAvailableVariations().map((variation) => (\n                        <button\n                          key={variation._id}\n                          onClick={() => handleVariationSelect(variation)}\n                          className={`variation-option ${selectedVariation && selectedVariation._id === variation._id ? 'selected' : ''}`}\n                          style={{\n                            padding: '8px 16px',\n                            border: selectedVariation && selectedVariation._id === variation._id ? '2px solid #1976d2' : '1px solid #ddd',\n                            borderRadius: '6px',\n                            background: selectedVariation && selectedVariation._id === variation._id ? '#e3f2fd' : '#fff',\n                            color: selectedVariation && selectedVariation._id === variation._id ? '#1976d2' : '#333',\n                            cursor: 'pointer',\n                            fontSize: '14px',\n                            fontWeight: selectedVariation && selectedVariation._id === variation._id ? '600' : '400',\n                            transition: 'all 0.2s ease'\n                          }}\n                        >\n                          {variation.variationValue}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 8, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\n                <div className=\"product-divider\"></div>\n                <div className=\"product-buy-row\">\n                  <div className=\"product-price-block\">\n                    <div className=\"product-price-label-value\">\n                      <div className=\"product-price-label\">Цена</div>\n                      <div className=\"product-price-value\">\n                        {Number(selectedVariation ? selectedVariation.price : product.price).toLocaleString('ru-RU')}\n                        <span className=\"product-currency\">₸</span>\n                      </div>\n                    </div>\n\n                    {(selectedVariation ? selectedVariation.article : product.article) && (\n                      <div style={{\n                        fontSize: '0.85rem', \n                        color: '#666', \n                        marginTop: 6, \n                        textAlign: 'left',\n                        wordBreak: 'break-word',\n                        width: '140px',\n                        minWidth: '140px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start'\n                      }}>\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\n                        <span style={{marginTop: 2}}>{selectedVariation ? selectedVariation.article : product.article}</span>\n                      </div>\n                    )}\n                  </div>\n                  <span className=\"product-price-divider\"></span>\n                  <div className=\"product-buy-btns\">\n                    <button className=\"product-btn-ask\" onClick={handleOpenModal}>Задать вопрос</button>\n                    <div className=\"product-btns-divider\"></div>\n                    <button className=\"product-btn-buy\" onClick={handleBuy}>Купить</button>\n                  </div>\n                </div>\n                <div className=\"product-divider\"></div>\n                <div style={{\n                  marginTop: 14, \n                  background: '#f5f7fa', \n                  borderRadius: 10, \n                  padding: '10px 12px 8px 12px', \n                  fontSize: '0.98rem', \n                  color: '#222', \n                  boxShadow: 'none', \n                  maxWidth: 320,\n                  transition: 'all 0.3s ease',\n                  transform: isCityChanging ? 'scale(0.98)' : 'scale(1)',\n                  opacity: isCityChanging ? 0.8 : 1\n                }}>\n                  <div style={{fontWeight: 600, color: '#1e88e5', marginBottom: 8, fontSize: '1.01rem', display: 'flex', alignItems: 'center', gap: '8px'}}>\n                    <span>Ваш город:</span>\n                    {detectingCity ? (\n                      <span style={{color: '#666', fontSize: '0.9rem'}}>📍 Определяем...</span>\n                    ) : (\n                      <select \n                        value={selectedCity} \n                        onChange={handleCityChange}\n                        className=\"city-select\"\n                      >\n                        {cities.map(city => (\n                          <option key={city} value={city}>{city}</option>\n                        ))}\n                      </select>\n                    )}\n                  </div>\n                  \n                  {/* Заменяем статичный блок на динамический компонент */}\n                  <DeliveryInfo \n                    city={selectedCity} \n                    onDeliverySelect={setSelectedDelivery}\n                    compact={true}\n                    selectedDelivery={selectedDelivery}\n                  />\n                  \n                  <div style={{background:'#f0f1f4', borderRadius:7, padding:'7px 10px', marginTop:8, color:'#222', fontSize:'0.93rem', display:'flex', alignItems:'center', gap:6}}>\n                    <span style={{fontSize:15, color:'#888'}}>ⓘ</span>\n                    <span>\n                      {selectedCity === 'Алматы' \n                        ? 'Срок доставки рассчитывается менеджером после оформления заказа'\n                        : selectedDelivery \n                          ? `Доставка в ${selectedCity} через ${selectedDelivery.name.toLowerCase()}. ${selectedDelivery.type === 'pickup' ? 'Самовывоз из наших пунктов' : selectedDelivery.type === 'indriver' ? 'В течение дня' : selectedDelivery.type === 'yandex' ? '1-2 дня' : selectedDelivery.type === 'kazpost' ? '3-5 дней' : selectedDelivery.type === 'cdek' ? '1-2 дня' : selectedDelivery.type === 'air' ? '1-3 дня' : '1-3 дня'}.`\n                          : `Доставка в ${selectedCity} осуществляется через курьерские службы. Срок доставки 1-3 дня.`\n                      }\n                    </span>\n                  </div>\n                </div>\n              </>\n            </div>\n          </div>\n          {/* Вкладки снизу */}\n          <div className=\"product-tabs-wrap\">\n                            <Tabs product={getCurrentProduct()} selectedVariation={selectedVariation} />\n                </div>\n            </div>\n      </main>\n      {/* Мини-каталог популярных товаров */}\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Популярные товары</h2>\n        </div>\n        <div className=\"mini-catalog-slider-wrapper\">\n          <div className=\"mini-catalog-slider\">\n            {/* Первый набор карточек */}\n            {miniProducts.map(product => (\n              <div\n                key={`first-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? product.price + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\n            {miniProducts.map(product => (\n              <div\n                key={`second-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? product.price + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} />\n    {/* Модальное окно для увеличенного фото */}\n    {showImageModal && (\n      <div className=\"image-modal-overlay\" onClick={handleCloseImageModal} style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'rgba(0,0,0,0.55)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>\n        <div className=\"image-modal-content\" style={{background:'#fff',padding:0,borderRadius:'8px',boxShadow:'0 8px 32px rgba(0,0,0,0.18)',position:'relative',maxWidth:'90vw',maxHeight:'90vh',display:'flex',flexDirection:'column',alignItems:'center'}} onClick={e=>e.stopPropagation()}>\n          <img src={allImages[activeImage]} alt={getCurrentProduct().name} style={{maxWidth:'80vw',maxHeight:'80vh',objectFit:'contain',background:'#fff'}} width=\"800\" height=\"600\" />\n          {allImages.length > 1 && (\n            <>\n              <button \n                onClick={handlePrevImage} \n                style={{\n                  position: 'absolute',\n                  left: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ‹\n              </button>\n              <button \n                onClick={handleNextImage} \n                style={{\n                  position: 'absolute',\n                  right: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ›\n              </button>\n              <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                <span style={{color:'#666', fontSize:'14px'}}>{activeImage + 1} из {allImages.length}</span>\n              </div>\n            </>\n          )}\n          <button onClick={handleCloseImageModal} style={{position:'absolute',top:8,right:12,fontSize:32,background:'none',border:'none',color:'#222',cursor:'pointer',lineHeight:1}}>&times;</button>\n        </div>\n      </div>\n    )}\n    </div>\n  );\n};\n\nfunction Tabs({product, selectedVariation}) {\n  const [tab,setTab]=React.useState('desc');\n  \n  // Функция для парсинга характеристик из строки\n  const parseCharacteristics = (characteristicsStr) => {\n    if (!characteristicsStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(characteristicsStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\n        const [name, value] = line.split(':').map(s => s.trim());\n        return { name, value };\n      });\n    }\n  };\n  \n  // Функция для парсинга комплектации из строки\n  const parseEquipment = (equipmentStr) => {\n    if (!equipmentStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(equipmentStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам или запятым\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\n    }\n  };\n  \n  // Если есть выбранная вариация, используем её характеристики и комплектацию\n  const characteristics = parseCharacteristics(\n    selectedVariation && selectedVariation.characteristics ? selectedVariation.characteristics : product.characteristics\n  );\n  const equipment = parseEquipment(\n    selectedVariation && selectedVariation.equipment ? selectedVariation.equipment : product.equipment\n  );\n  return (\n    <div className=\"product-tabs\">\n      <div className=\"product-tabs-header\">\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\n      </div>\n      <div className=\"product-tabs-content\">\n        {tab==='desc' && (\n          <div className=\"product-desc-kaspi-block\">\n            {product.description ? (\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='specs' && (\n          <div className=\"product-specs-kaspi-block\">\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\n            {characteristics.length > 0 ? (\n              <div className=\"product-specs-group\">\n                <div className=\"product-specs-flex-table\">\n                  {characteristics.map((spec, i) => (\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\n                      <span className=\"product-specs-flex-dots\"></span>\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\n            )}\n          </div>\n        )}\n        {tab==='equip' && (\n          <div className=\"product-desc-kaspi-block\">\n            {equipment.length > 0 ? (\n              <ul style={{margin: 0, paddingLeft: 20}}>\n                {equipment.map((item, idx) => (\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Product; "],"names":["_ref","isOpen","onClose","onSubmit","formData","setFormData","useState","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","value","target","_jsx","className","onClick","children","_jsxs","stopPropagation","async","preventDefault","validation","trim","test","isValid","Object","keys","length","validateForm","result","Date","toLocaleString","console","log","success","error","sendToTelegram","alert","htmlFor","type","id","onChange","placeholder","rows","disabled","categories","Tabs","product","selectedVariation","tab","setTab","React","characteristics","characteristicsStr","JSON","parse","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","item","parseEquipment","description","dangerouslySetInnerHTML","__html","replace","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","Product","useParams","setProduct","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","setSelectedCity","localStorage","getItem","selectedDelivery","setSelectedDelivery","setDeliveryInfo","isCityChanging","setIsCityChanging","productWithVariations","setProductWithVariations","setSelectedVariation","variationType","setVariationType","detectingCity","setDetectingCity","cities","allImages","getAllImages","images","currentProduct","getCurrentProduct","image","push","Array","isArray","images2","images3","navigate","useNavigate","API_URL","useEffect","fetch","then","res","json","data","Promise","resolve","isVariation","isMasterProduct","currentVariation","productId","masterProduct","variationTypes","variations","catch","information","savedCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","address","detectedCity","includes","setItem","enableHighAccuracy","timeout","maximumAge","textAlign","Header","href","Footer","categoryObj","find","cat","category","categoryName","getAvailableVariations","advantages","handleCloseImageModal","fetchDeliveryInfo","encodeURIComponent","cityName","ok","shortDesc","getOptimalImage","preferredSize","arguments","undefined","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","fontSize","_Fragment","fontWeight","handleImageClick","cursor","src","alt","width","height","maxWidth","marginTop","border","img","wordBreak","variation","handleVariationSelect","_id","borderRadius","background","transition","variationValue","subtitle","Number","price","article","minWidth","flexDirection","handleOpenModal","handleBuy","productToBuy","state","boxShadow","transform","opacity","newCity","setTimeout","DeliveryInfo","onDeliverySelect","compact","toLowerCase","window","location","minHeight","fontFamily","justifyContent","srcSet","objectFit","borderTop","alignSelf","textDecoration","letterSpacing","verticalAlign","Modal","handleCloseModal","top","left","zIndex","maxHeight","prev","right"],"sourceRoot":""}