{"version":3,"file":"static/js/282.ea08066c.chunk.js","mappings":"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","sources":["utils/price.js","pages/Catalog.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[\\.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { trackPageView } from '../utils/analytics';\nimport '../styles/Catalog.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Catalog = () => {\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  // Статические категории для fallback\n  const staticCategories = [\n    { id: 'all', name: 'Все товары' },\n    { id: 'drills', name: 'Дрели' },\n    { id: 'grinders', name: 'Болгарки' },\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\n    { id: 'hammers', name: 'Перфораторы' },\n    { id: 'jigsaws', name: 'Лобзики' },\n    { id: 'levels', name: 'Лазерные уровни' },\n    { id: 'generators', name: 'Генераторы' },\n    { id: 'measuring', name: 'Измерители' }\n  ];\n\n  const location = useLocation();\n  const getCategoryFromQuery = () => {\n    const params = new URLSearchParams(location.search);\n    return params.get('category') || 'all';\n  };\n  const [selectedCategory, setSelectedCategory] = useState(getCategoryFromQuery());\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(24);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n\n  useEffect(() => {\n    setSelectedCategory(getCategoryFromQuery());\n  }, [location.search]);\n\n  // Закрытие выпадающего списка при клике вне его\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.category-dropdown')) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    if (isDropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isDropdownOpen]);\n\n          const API_URL = 'https://electro-a8bl.onrender.com/api/products';\n\n  // Загрузка товаров\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(data => {\n        setProducts(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Ошибка загрузки товаров');\n        setLoading(false);\n      });\n  }, []);\n\n  // Отслеживаем просмотр страницы каталога\n  useEffect(() => {\n    trackPageView('catalog');\n  }, []);\n\n  // Извлечение категорий из товаров\n  useEffect(() => {\n    if (products.length > 0) {\n      setCategoriesLoading(true);\n      \n      // Извлекаем уникальные категории из товаров, нормализуем и сортируем их\n      const categoryMap = new Map();\n      \n      products.forEach(product => {\n        if (product.category) {\n          // Нормализуем название категории: убираем лишние пробелы и приводим к нижнему регистру\n          const normalizedCategory = product.category.trim().toLowerCase();\n          const originalCategory = product.category.trim();\n          \n          // Если такой нормализованной категории еще нет, добавляем её\n          if (!categoryMap.has(normalizedCategory)) {\n            categoryMap.set(normalizedCategory, originalCategory);\n          }\n        }\n      });\n      \n      const uniqueCategories = Array.from(categoryMap.values()).sort();\n      \n      if (uniqueCategories.length > 0) {\n        // Добавляем категорию \"Все товары\" в начало\n        const allCategories = [\n          { id: 'all', name: 'Все товары' },\n          ...uniqueCategories.map(category => ({\n            id: category,\n            name: category\n          }))\n        ];\n        setCategories(allCategories);\n      } else {\n        // Если нет категорий в товарах, используем статические\n        setCategories(staticCategories);\n      }\n      setCategoriesLoading(false);\n    }\n  }, [products]);\n\n  // Принудительное применение стилей для карточек\n  useEffect(() => {\n    const forceStyles = () => {\n      const grid = document.querySelector('.catalog-products-grid');\n      const cards = document.querySelectorAll('.product-card');\n      const images = document.querySelectorAll('.product-image');\n      const infos = document.querySelectorAll('.product-info');\n      \n      if (grid) {\n        grid.style.display = 'grid';\n        grid.style.gap = '0';\n        grid.style.margin = '0';\n        grid.style.padding = '0';\n        grid.style.borderCollapse = 'collapse';\n        grid.style.borderSpacing = '0';\n      }\n      \n      cards.forEach(card => {\n        card.style.margin = '-1px';\n        card.style.border = '1px solid #e3e6ea';\n        card.style.borderRadius = '0';\n        card.style.padding = '0';\n        card.style.background = '#fff';\n        card.style.display = 'flex';\n        card.style.flexDirection = 'column';\n        card.style.height = '100%';\n        card.style.position = 'relative';\n        card.style.overflow = 'hidden';\n        card.style.boxSizing = 'border-box';\n        card.style.minHeight = 'auto';\n      });\n      \n      images.forEach(img => {\n        img.style.height = '160px';\n        img.style.padding = '0';\n        img.style.margin = '0';\n      });\n      \n      infos.forEach(info => {\n        info.style.padding = '6px';\n        info.style.minHeight = '80px';\n      });\n    };\n\n    // Применяем стили сразу и после загрузки\n    forceStyles();\n    setTimeout(forceStyles, 50);\n    setTimeout(forceStyles, 100);\n    setTimeout(forceStyles, 200);\n    setTimeout(forceStyles, 500);\n    setTimeout(forceStyles, 1000);\n\n    // Применяем стили при изменении размера окна\n    const handleResize = () => {\n      setTimeout(forceStyles, 100);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [products]);\n\n  const filteredProducts = selectedCategory === 'all'\n    ? products\n    : products.filter(product => product.category && product.category.trim() === selectedCategory);\n\n  // Пагинация\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n\n  // Сброс на первую страницу при смене категории\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedCategory]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"catalog\">\n      <Header />\n      <main className=\"catalog-main\">\n        <div className=\"container catalog-layout\">\n          <aside className=\"catalog-sidebar desktop-sidebar\">\n            <h3 className=\"sidebar-title\">Категории</h3>\n            {categoriesLoading ? (\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                Загрузка категорий...\n              </div>\n            ) : (\n              <ul className=\"sidebar-categories\">\n                {categories.map(category => (\n                  <li key={category.id}>\n                    <button\n                      className={`sidebar-category-btn${selectedCategory === category.id ? ' active' : ''}`}\n                      onClick={() => setSelectedCategory(category.id)}\n                    >\n                      {category.name}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </aside>\n          <div className=\"catalog-content\">\n            <div className=\"category-dropdown-container mobile-dropdown\">\n              <div className={`category-dropdown ${isDropdownOpen ? 'open' : ''}`}>\n                <button \n                  className=\"category-dropdown-btn\"\n                  onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                  disabled={categoriesLoading}\n                >\n                  <span>\n                    {categoriesLoading \n                      ? 'Загрузка...' \n                      : categories.find(cat => cat.id === selectedCategory)?.name || 'Все товары'\n                    }\n                  </span>\n                  <span className=\"dropdown-arrow\">▼</span>\n                </button>\n                {isDropdownOpen && !categoriesLoading && (\n                  <div className=\"category-dropdown-menu\">\n                    {categories.map(category => (\n                      <button\n                        key={category.id}\n                        className={`category-dropdown-item${selectedCategory === category.id ? ' active' : ''}`}\n                        onClick={() => {\n                          setSelectedCategory(category.id);\n                          setIsDropdownOpen(false);\n                        }}\n                      >\n                        {category.name}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n            <h1 className=\"catalog-title\" style={{textAlign: 'left', marginLeft: 0}}>\n              {categoriesLoading \n                ? 'Каталог товаров' \n                : selectedCategory === 'all' \n                  ? 'Каталог товаров' \n                  : categories.find(cat => cat.id === selectedCategory)?.name || 'Каталог товаров'\n              }\n            </h1>\n            {loading ? (\n              <div style={{padding: 32}}>Загрузка...</div>\n            ) : error ? (\n              <div style={{color: 'red', padding: 32}}>{error}</div>\n            ) : (\n            <div className=\"catalog-products-grid\" style={{gap: 0}}>\n              {currentProducts.map(product => (\n                <Link\n                  to={`/product/${product._id}`}\n                  key={product._id}\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <div\n                    className=\"product-card kaspi-style mini-product-card\"\n                    style={{ cursor: 'pointer', minHeight: 'auto', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', border: '1px solid #e3e6ea', margin: '-1px' }}\n                  >\n                    <div className=\"product-image\" style={{height: '160px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                      <picture style={{width: '100%', height: '100%'}}>\n                        <source \n                          srcSet={getOptimalImage(product, 'webp')} \n                          type=\"image/webp\"\n                        />\n                        <img \n                          src={getOptimalImage(product, 'medium')} \n                          alt={product.name} \n                          style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                          loading=\"lazy\"\n                          width=\"260\"\n                          height=\"160\"\n                        />\n                      </picture>\n                    </div>\n                    <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 4px auto', alignSelf:'center'}}></div>\n                    <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight: '80px'}}>\n                      <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '20px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                      <div style={{width:'100%', textAlign:'left', margin:'0 0 2px 0'}}>\n                        <span style={{color:'#888', fontSize:'0.98rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                      </div>\n                      <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:2, justifyContent:'flex-start', width:'100%'}}>\n                        <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1.25rem',letterSpacing:0.5}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                        <span style={{height:'2.7em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 7px',verticalAlign:'middle'}}></span>\n                      </div>\n                  </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n            )}\n            \n            {/* Пагинация */}\n            {totalPages > 1 && (\n              <div className=\"pagination-container\" style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginTop: '40px',\n                marginBottom: '20px',\n                gap: '8px'\n              }}>\n                {/* Кнопка \"Предыдущая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === 1 ? '#f5f5f5' : '#fff',\n                    color: currentPage === 1 ? '#999' : '#333',\n                    cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  ← Назад\n                </button>\n                \n                {/* Номера страниц */}\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => {\n                  // Показываем только первые 5 страниц, последние 5 и текущую с соседними\n                  if (\n                    pageNumber === 1 ||\n                    pageNumber === totalPages ||\n                    (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\n                  ) {\n                    return (\n                      <button\n                        key={pageNumber}\n                        onClick={() => handlePageChange(pageNumber)}\n                        style={{\n                          padding: '8px 12px',\n                          border: '1px solid #e3e6ea',\n                          background: currentPage === pageNumber ? '#e86c0a' : '#fff',\n                          color: currentPage === pageNumber ? '#fff' : '#333',\n                          cursor: 'pointer',\n                          borderRadius: '4px',\n                          fontSize: '14px',\n                          fontWeight: '500',\n                          minWidth: '40px'\n                        }}\n                      >\n                        {pageNumber}\n                      </button>\n                    );\n                  } else if (\n                    pageNumber === currentPage - 2 ||\n                    pageNumber === currentPage + 2\n                  ) {\n                    return (\n                      <span\n                        key={pageNumber}\n                        style={{\n                          padding: '8px 4px',\n                          color: '#999',\n                          fontSize: '14px'\n                        }}\n                      >\n                        ...\n                      </span>\n                    );\n                  }\n                  return null;\n                })}\n                \n                {/* Кнопка \"Следующая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === totalPages ? '#f5f5f5' : '#fff',\n                    color: currentPage === totalPages ? '#999' : '#333',\n                    cursor: currentPage === totalPages ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  Вперед →\n                </button>\n              </div>\n            )}\n            \n            <section className=\"seo-description\">\n              <h2>Электроинструменты: качество и надёжность</h2>\n              <p>Мы предлагаем широкий ассортимент профессиональных электроинструментов от ведущих мировых производителей. В нашем каталоге вы найдёте дрели, шуруповёрты, болгарки, перфораторы и многое другое. Вся продукция сертифицирована и имеет гарантию от производителя.</p>\n              <p>Работаем как с розничными, так и с оптовыми клиентами. Предоставляем техническую поддержку и консультации по выбору инструмента. Доставка по Алматы и области.</p>\n            </section>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Catalog; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","Catalog","_categories$find","_categories$find2","getOptimalImage","product","preferredSize","arguments","length","undefined","imageVariants","webp","image","staticCategories","id","name","location","useLocation","getCategoryFromQuery","URLSearchParams","search","get","selectedCategory","setSelectedCategory","useState","products","setProducts","loading","setLoading","error","setError","isDropdownOpen","setIsDropdownOpen","currentPage","setCurrentPage","productsPerPage","categories","setCategories","categoriesLoading","setCategoriesLoading","useEffect","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","fetch","then","res","json","data","catch","err","trackPageView","categoryMap","Map","forEach","category","normalizedCategory","toLowerCase","originalCategory","has","set","uniqueCategories","Array","from","values","sort","allCategories","map","forceStyles","grid","querySelector","cards","querySelectorAll","images","infos","style","display","gap","margin","padding","borderCollapse","borderSpacing","card","border","borderRadius","background","flexDirection","height","position","overflow","boxSizing","minHeight","img","info","setTimeout","handleResize","window","filteredProducts","filter","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","ceil","handlePageChange","pageNumber","scrollTo","top","behavior","_jsxs","className","children","_jsx","Header","textAlign","color","concat","onClick","disabled","find","cat","marginLeft","Link","to","_id","textDecoration","cursor","fontFamily","fontWeight","alignItems","justifyContent","width","srcSet","type","src","alt","objectFit","maxWidth","borderTop","alignSelf","fontSize","lineHeight","marginBottom","letterSpacing","marginTop","price","verticalAlign","_","index","minWidth","Footer"],"sourceRoot":""}