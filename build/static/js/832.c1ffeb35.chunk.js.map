{"version":3,"file":"static/js/832.c1ffeb35.chunk.js","mappings":"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","sources":["utils/price.js","utils/cache.js","pages/Catalog.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { trackPageView } from '../utils/analytics';\nimport { fetchWithCache } from '../utils/cache';\nimport '../styles/Catalog.css';\nimport { Link, useLocation } from 'react-router-dom';\n\n// fetchWithRetry не используется — удалено для тишины линтера\n\nconst Catalog = () => {\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\n    if (product.productGroup && product.productGroup.coverImage) {\n      return product.productGroup.coverImage;\n    }\n    \n    // Затем проверяем coverPhoto или обычное фото\n    const mainImage = product.coverPhoto || product.image;\n    \n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return mainImage || '/images/products/placeholder.png';\n  };\n\n  // Функция для преобразования кириллического названия категории в латинский ID\n  const categoryToId = (categoryName) => {\n    const categoryMap = {\n      'дрели': 'drills',\n      'болгарки': 'grinders',\n      'шуруповёрты': 'screwdrivers',\n      'перфораторы': 'hammers',\n      'лобзики': 'jigsaws',\n      'лазерные уровни': 'levels',\n      'генераторы': 'generators',\n      'генераторы для дома': 'generators',\n      'дизельные генераторы': 'diesel-generators',\n      'дизельные генератор': 'diesel-generators',\n      'дизельный генератор': 'diesel-generators',\n      'аргонно-дуговая сварка': 'argon-arc-welding',\n      'бензиновый триммер': 'gasoline-trimmer',\n      'глубинный насос': 'deep-pump',\n      'отбойный молоток': 'jackhammer',\n      'плазморезы': 'plasma-cutter',\n      'редукционный клапан': 'reduction-valve',\n      'сварочный аппарат': 'welding',\n      'сварочный аппараты': 'welding',\n      'струйный насос': 'jet-pump',\n      'струйный самовсасывающий насос': 'jet-pump',\n      'точильный станок': 'bench-grinder',\n      'ударная дрель': 'impact-drill',\n      'фекальный насос': 'fecal-pump',\n      'периферийные насосы': 'peripheral-pump',\n      'периферийный насос': 'peripheral-pump',\n      'центробежные насосы': 'centrifugal-pump',\n      'центробежный насос': 'centrifugal-pump',\n      'измерители': 'measuring',\n      'дрель': 'drills',\n      'болгарка': 'grinders',\n      'шуруповёрт': 'screwdrivers',\n      'перфоратор': 'hammers',\n      'лобзик': 'jigsaws',\n      'лазерный уровень': 'levels',\n      'генератор': 'generators',\n      'измеритель': 'measuring',\n      // Новые категории\n      'гайковерт ударный': 'impact-wrench',\n      'кусторезы': 'hedge-trimmers',\n      'миксеры': 'mixers',\n      'наборный электроинструмент': 'power-tool-sets',\n      'ножовки': 'hacksaws',\n      'пила': 'saws',\n      'пила цепная': 'chainsaws',\n      'полировальные машины': 'polishing-machines',\n      'пчёлки': 'bees',\n      'сабельная пила': 'reciprocating-saws',\n      'секаторы': 'pruners',\n      'фрезер': 'routers',\n      'электрорубанок': 'electric-planers'\n    };\n    \n    // Нормализуем название: убираем лишние пробелы, приводим к нижнему регистру\n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\s+/g, ' ');\n    \n    // Сначала ищем точное совпадение\n    if (categoryMap[normalizedName]) {\n      return categoryMap[normalizedName];\n    }\n    \n    // Спец-правило: любые варианты с \"дизель\" + \"генератор\"\n    if (normalizedName.includes('дизель') && normalizedName.includes('генератор')) {\n      return 'diesel-generators';\n    }\n    // Если точного совпадения нет, ищем по частичному совпадению, \n    // предпочитая более длинные (более специфичные) ключи\n    const entriesByLength = Object.entries(categoryMap).sort((a, b) => b[0].length - a[0].length);\n    for (const [key, value] of entriesByLength) {\n      if (normalizedName.includes(key)) {\n        return value;\n      }\n    }\n    \n    // Если ничего не найдено, создаем ID из названия\n    return normalizedName.replace(/[^a-z0-9]/g, '-');\n  };\n\n  // Функция для получения названия категории по ID\n  const idToCategory = (categoryId) => {\n    const idMap = {\n      'drills': 'Дрели',\n      'grinders': 'Болгарки',\n      'screwdrivers': 'Шуруповёрты',\n      'hammers': 'Перфораторы',\n      'jigsaws': 'Лобзики',\n      'levels': 'Лазерные уровни',\n      'generators': 'Генераторы',\n      'diesel-generators': 'Дизельные генераторы',\n      'argon-arc-welding': 'Аргонно-дуговая сварка',\n      'gasoline-trimmer': 'Бензиновый триммер',\n      'deep-pump': 'Глубинный насос',\n      'jackhammer': 'Отбойный молоток',\n      'plasma-cutter': 'Плазморезы',\n      'reduction-valve': 'Редукционный клапан',\n      'welding': 'Сварочные аппараты',\n      'jet-pump': 'Струйный насос',\n      'bench-grinder': 'Точильный станок',\n      'impact-drill': 'Ударная дрель',\n      'fecal-pump': 'Фекальный насос',\n      'peripheral-pump': 'Периферийный насос',\n      'centrifugal-pump': 'Центробежный насос',\n      'measuring': 'Измерители',\n      // Новые категории\n      'impact-wrench': 'Гайковерт ударный',\n      'hedge-trimmers': 'Кусторезы',\n      'mixers': 'Миксеры',\n      'power-tool-sets': 'Наборный электроинструмент',\n      'hacksaws': 'Ножовки',\n      'saws': 'Пила',\n      'chainsaws': 'Пила цепная',\n      'polishing-machines': 'Полировальные машины',\n      'bees': 'Пчёлки',\n      'reciprocating-saws': 'Сабельная пила',\n      'pruners': 'Секаторы',\n      'routers': 'Фрезер',\n      'electric-planers': 'Электрорубанок'\n    };\n    \n    // Если есть точное совпадение в маппинге, возвращаем его\n    if (idMap[categoryId]) {\n      return idMap[categoryId];\n    }\n    \n    // Если нет точного совпадения, ищем по частичному совпадению\n    const foundCategory = categories.find(cat => cat.id === categoryId);\n    if (foundCategory) {\n      return foundCategory.name;\n    }\n    \n    // Если ничего не найдено, возвращаем ID как есть\n    return categoryId;\n  };\n\n  // Статические категории для fallback (без \"Все товары\")\n  const staticCategories = [\n    { id: 'drills', name: 'Дрели' },\n    { id: 'grinders', name: 'Болгарки' },\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\n    { id: 'hammers', name: 'Перфораторы' },\n    { id: 'jigsaws', name: 'Лобзики' },\n    { id: 'levels', name: 'Лазерные уровни' },\n    { id: 'generators', name: 'Генераторы' },\n    { id: 'diesel-generators', name: 'Дизельные генераторы' },\n    { id: 'peripheral-pump', name: 'Периферийный насос' },\n    { id: 'centrifugal-pump', name: 'Центробежный насос' },\n    { id: 'measuring', name: 'Измерители' },\n    // Новые категории\n    { id: 'impact-wrench', name: 'Гайковерт ударный' },\n    { id: 'hedge-trimmers', name: 'Кусторезы' },\n    { id: 'mixers', name: 'Миксеры' },\n    { id: 'power-tool-sets', name: 'Наборный электроинструмент' },\n    { id: 'hacksaws', name: 'Ножовки' },\n    { id: 'saws', name: 'Пила' },\n    { id: 'chainsaws', name: 'Пила цепная' },\n    { id: 'polishing-machines', name: 'Полировальные машины' },\n    { id: 'bees', name: 'Пчёлки' },\n    { id: 'reciprocating-saws', name: 'Сабельная пила' },\n    { id: 'pruners', name: 'Секаторы' },\n    { id: 'routers', name: 'Фрезер' },\n    { id: 'electric-planers', name: 'Электрорубанок' }\n  ];\n\n  const location = useLocation();\n  // На мобильных при переходе иногда сохраняется старая позиция — принудительно поднимаем наверх\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'auto' });\n  }, []);\n  const getCategoryFromQuery = () => {\n    // Извлекаем категорию из URL пути\n    const pathParts = location.pathname.split('/');\n    if (pathParts.length > 2 && pathParts[1] === 'catalog') {\n      return pathParts[2]; // Возвращаем название категории из URL\n    }\n    return null; // По умолчанию не выбрана категория - показываем все\n  };\n  const [selectedCategory, setSelectedCategory] = useState(getCategoryFromQuery());\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(24);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n\n  // Отслеживаем изменения URL для определения активной категории\n  useEffect(() => {\n    const categoryFromUrl = getCategoryFromQuery();\n    setSelectedCategory(categoryFromUrl);\n  }, [location.search, location.pathname]);\n\n  // Закрытие выпадающего списка при клике вне его\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.category-dropdown')) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    if (isDropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isDropdownOpen]);\n\n          const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  // Загрузка товаров с кэшированием\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    fetchWithCache(API_URL, {}, 10 * 60 * 1000) // Кэш на 10 минут\n      .then(data => {\n        setProducts(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Ошибка загрузки товаров');\n        setLoading(false);\n      });\n  }, []);\n\n  // Отслеживаем просмотр страницы каталога\n  useEffect(() => {\n    trackPageView('catalog');\n  }, []);\n\n  // Извлечение категорий из товаров\n  useEffect(() => {\n    if (products.length > 0) {\n      setCategoriesLoading(true);\n      \n      // Извлекаем уникальные категории из товаров, нормализуем и сортируем их\n      const categoryMap = new Map();\n      \n      products.forEach(product => {\n        if (product.category) {\n          // Нормализуем название категории: убираем лишние пробелы и приводим к нижнему регистру\n          const normalizedCategory = product.category.trim().toLowerCase().replace(/\\s+/g, ' ');\n          const originalCategory = product.category.trim();\n          \n          // Если такой нормализованной категории еще нет, добавляем её\n          if (!categoryMap.has(normalizedCategory)) {\n            categoryMap.set(normalizedCategory, originalCategory);\n          }\n        }\n      });\n      \n      const uniqueCategories = Array.from(categoryMap.values()).sort();\n      \n      if (uniqueCategories.length > 0) {\n        // Убираем \"Все товары\" - показываем только реальные категории\n        const realCategories = uniqueCategories.map(category => ({\n          id: categoryToId(category),\n          name: category\n        }));\n        setCategories(realCategories);\n      } else {\n        // Если нет категорий в товарах, используем статические\n        setCategories(staticCategories);\n      }\n      setCategoriesLoading(false);\n    }\n  }, [products]);\n\n  // Принудительное применение стилей для карточек\n  useEffect(() => {\n    const forceStyles = () => {\n      const grid = document.querySelector('.catalog-products-grid');\n      const cards = document.querySelectorAll('.product-card');\n      const images = document.querySelectorAll('.product-image');\n      const infos = document.querySelectorAll('.product-info');\n      \n      if (grid) {\n        grid.style.display = 'grid';\n        grid.style.gap = '0';\n        grid.style.margin = '0';\n        grid.style.padding = '0';\n        grid.style.borderCollapse = 'collapse';\n        grid.style.borderSpacing = '0';\n      }\n      \n      cards.forEach(card => {\n        card.style.margin = '-1px';\n        card.style.border = '1px solid #e3e6ea';\n        card.style.borderRadius = '0';\n        card.style.padding = '0';\n        card.style.background = '#fff';\n        card.style.display = 'flex';\n        card.style.flexDirection = 'column';\n        card.style.height = '100%';\n        card.style.position = 'relative';\n        card.style.overflow = 'hidden';\n        card.style.boxSizing = 'border-box';\n        card.style.minHeight = 'auto';\n      });\n      \n      images.forEach(img => {\n        img.style.height = '160px';\n        img.style.padding = '0';\n        img.style.margin = '0';\n      });\n      \n      infos.forEach(info => {\n        info.style.padding = '6px';\n        info.style.minHeight = '80px';\n      });\n    };\n\n    // Применяем стили сразу и после загрузки\n    forceStyles();\n    setTimeout(forceStyles, 50);\n    setTimeout(forceStyles, 100);\n    setTimeout(forceStyles, 200);\n    setTimeout(forceStyles, 500);\n    setTimeout(forceStyles, 1000);\n\n    // Применяем стили при изменении размера окна\n    const handleResize = () => {\n      setTimeout(forceStyles, 100);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [products]);\n\n  // При загрузке /catalog показываем все товары, при выборе категории - фильтруем\n  const filteredProducts = selectedCategory\n    ? products.filter(product => {\n        if (!product.category) return false;\n        const productCategoryId = categoryToId(product.category.trim());\n        return productCategoryId === selectedCategory;\n      })\n    : products;\n\n  // Пагинация\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n\n  // Сброс на первую страницу при смене категории\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedCategory]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Определяем целевую ссылку для карточки товара в каталоге\n  const getCardLink = (product) => {\n    // Если в документе уже есть slug и categorySlug — ведём сразу на SEO‑URL\n    if (product && product.slug && product.categorySlug) {\n      return `/catalog/${product.categorySlug}/${product.slug}`;\n    }\n    // Иначе — минимум ведём на категорию (как было), либо на товар по id\n    const catId = product && product.category ? categoryToId(String(product.category).trim()) : '';\n    if (catId) return `/catalog/${catId}`;\n    return `/product/${product._id}`;\n  };\n\n  return (\n    <div className=\"catalog\">\n      <Header />\n      <main className=\"catalog-main\">\n        <div className=\"container catalog-layout\">\n          <aside className=\"catalog-sidebar desktop-sidebar\">\n            <h3 className=\"sidebar-title\">Категории</h3>\n            {categoriesLoading ? (\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                Загрузка категорий...\n              </div>\n            ) : (\n              <ul className=\"sidebar-categories\">\n                {categories.map(category => (\n                  <li key={category.id}>\n                    <Link\n                      to={`/catalog/${category.id}`}\n                      className={`sidebar-category-btn${selectedCategory === category.id ? ' active' : ''}`}\n                      style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\n                    >\n                      {category.name}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </aside>\n          <div className=\"catalog-content\">\n            <div className=\"category-dropdown-container mobile-dropdown\">\n              <div className={`category-dropdown ${isDropdownOpen ? 'open' : ''}`}>\n                <button \n                  className=\"category-dropdown-btn\"\n                  onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                  disabled={categoriesLoading}\n                >\n                  <span>\n                    {categoriesLoading \n                      ? 'Загрузка...' \n                      : location.pathname === '/catalog'\n                        ? 'Каталог товаров'\n                        : selectedCategory \n                          ? idToCategory(selectedCategory) || 'Каталог товаров'\n                          : 'Каталог товаров'\n                    }\n                  </span>\n                  <span className=\"dropdown-arrow\">▼</span>\n                </button>\n                {isDropdownOpen && !categoriesLoading && (\n                  <div className=\"category-dropdown-menu\">\n                    {categories.map(category => (\n                      <Link\n                        key={category.id}\n                        to={`/catalog/${category.id}`}\n                        className={`category-dropdown-item${selectedCategory === category.id ? ' active' : ''}`}\n                        style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\n                        onClick={() => setIsDropdownOpen(false)}\n                      >\n                        {category.name}\n                      </Link>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n            {/* Хлебные крошки как на странице продукта */}\n            <nav className=\"breadcrumbs\" style={{paddingBottom: '12px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n              <a href=\"/\">Главная</a>\n              <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n              <a href=\"/catalog\">Каталог</a>\n              {selectedCategory && (\n                <>\n                  <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                  <span style={{color:'#1a2236', fontWeight:500}}>{idToCategory(selectedCategory)}</span>\n                </>\n              )}\n            </nav>\n            <h1 className=\"catalog-title\" style={{textAlign: 'left', marginLeft: 0}}>\n              {categoriesLoading \n                ? 'Каталог товаров' \n                : location.pathname === '/catalog'\n                  ? 'Каталог товаров'\n                  : selectedCategory \n                    ? idToCategory(selectedCategory) || 'Каталог товаров'\n                    : 'Каталог товаров'\n              }\n            </h1>\n            {loading ? (\n              <div style={{padding: 32}}>Загрузка...</div>\n            ) : error ? (\n              <div style={{color: 'red', padding: 32}}>{error}</div>\n            ) : (\n            <div className=\"catalog-products-grid\" style={{gap: 0}}>\n              {currentProducts.map(product => (\n                <Link\n                  to={getCardLink(product)}\n                  key={product._id}\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <div\n                    className=\"product-card kaspi-style mini-product-card\"\n                    style={{ cursor: 'pointer', minHeight: 'auto', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', border: '1px solid #e3e6ea', margin: '-1px' }}\n                  >\n                    <div className=\"product-image\" style={{height: '160px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                      <picture style={{width: '100%', height: '100%'}}>\n                        <source \n                          srcSet={getOptimalImage(product, 'webp')} \n                          type=\"image/webp\"\n                        />\n                        <img \n                          src={getOptimalImage(product, 'medium')} \n                          alt={product.name} \n                          style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                          loading=\"lazy\"\n                          width=\"260\"\n                          height=\"160\"\n                        />\n                      </picture>\n                    </div>\n                    <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 12px auto', alignSelf:'center'}}></div>\n                    <div className=\"product-info\" style={{padding: '6px 8px 3px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight: '80px'}}>\n                      <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '20px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                      <div style={{width:'100%', textAlign:'left', margin:'0 0 2px 0'}}>\n                        <span style={{color:'#888', fontSize:'0.98rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                      </div>\n                      <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:2, justifyContent:'flex-start', width:'100%'}}>\n                        <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1.25rem',letterSpacing:0.5}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                        <span style={{display:'inline-block', margin:'0 10px', borderLeft:'2px solid #bdbdbd', height:'1.6em'}}></span>\n                        <span style={{marginLeft:28, background:'#f5f7fa', color:'#222', border:'1px solid #e3e6ea', fontWeight:700, fontSize:'0.85rem', padding:'4px 12px', borderRadius:12, lineHeight:1, display:'inline-flex', alignItems:'center', justifyContent:'center'}}>В наличии</span>\n                      </div>\n                  </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n            )}\n            \n            {/* Пагинация */}\n            {totalPages > 1 && (\n              <div className=\"pagination-container\" style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginTop: '40px',\n                marginBottom: '20px',\n                gap: '8px'\n              }}>\n                {/* Кнопка \"Предыдущая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === 1 ? '#f5f5f5' : '#fff',\n                    color: currentPage === 1 ? '#999' : '#333',\n                    cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  ← Назад\n                </button>\n                \n                {/* Номера страниц */}\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => {\n                  // Показываем только первые 5 страниц, последние 5 и текущую с соседними\n                  if (\n                    pageNumber === 1 ||\n                    pageNumber === totalPages ||\n                    (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\n                  ) {\n                    return (\n                      <button\n                        key={pageNumber}\n                        onClick={() => handlePageChange(pageNumber)}\n                        style={{\n                          padding: '8px 12px',\n                          border: '1px solid #e3e6ea',\n                          background: currentPage === pageNumber ? '#e86c0a' : '#fff',\n                          color: currentPage === pageNumber ? '#fff' : '#333',\n                          cursor: 'pointer',\n                          borderRadius: '4px',\n                          fontSize: '14px',\n                          fontWeight: '500',\n                          minWidth: '40px'\n                        }}\n                      >\n                        {pageNumber}\n                      </button>\n                    );\n                  } else if (\n                    pageNumber === currentPage - 2 ||\n                    pageNumber === currentPage + 2\n                  ) {\n                    return (\n                      <span\n                        key={pageNumber}\n                        style={{\n                          padding: '8px 4px',\n                          color: '#999',\n                          fontSize: '14px'\n                        }}\n                      >\n                        ...\n                      </span>\n                    );\n                  }\n                  return null;\n                })}\n                \n                {/* Кнопка \"Следующая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === totalPages ? '#f5f5f5' : '#fff',\n                    color: currentPage === totalPages ? '#999' : '#333',\n                    cursor: currentPage === totalPages ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  Вперед →\n                </button>\n              </div>\n            )}\n            \n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Catalog; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","Catalog","getOptimalImage","product","preferredSize","productGroup","coverImage","mainImage","coverPhoto","image","imageVariants","webp","categoryToId","categoryName","categoryMap","normalizedName","toLowerCase","entriesByLength","Object","entries","sort","a","b","idToCategory","categoryId","idMap","foundCategory","categories","find","cat","id","name","staticCategories","location","useLocation","useEffect","window","scrollTo","top","left","behavior","getCategoryFromQuery","pathParts","pathname","split","selectedCategory","setSelectedCategory","useState","products","setProducts","loading","setLoading","setError","isDropdownOpen","setIsDropdownOpen","currentPage","setCurrentPage","productsPerPage","setCategories","categoriesLoading","setCategoriesLoading","categoryFromUrl","search","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","then","catch","err","trackPageView","forEach","category","normalizedCategory","originalCategory","has","uniqueCategories","Array","from","values","realCategories","map","forceStyles","grid","querySelector","cards","querySelectorAll","images","infos","style","display","gap","margin","padding","borderCollapse","borderSpacing","card","border","borderRadius","background","flexDirection","height","position","overflow","boxSizing","minHeight","img","info","setTimeout","handleResize","filteredProducts","filter","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","ceil","handlePageChange","pageNumber","getCardLink","slug","categorySlug","catId","_id","_jsxs","className","children","_jsx","Header","textAlign","color","Link","to","textDecoration","width","onClick","disabled","paddingBottom","alignItems","flexWrap","href","fontSize","_Fragment","fontWeight","marginLeft","cursor","fontFamily","justifyContent","srcSet","type","src","alt","objectFit","maxWidth","borderTop","alignSelf","lineHeight","marginBottom","letterSpacing","marginTop","price","borderLeft","_","index","minWidth","Footer"],"sourceRoot":""}