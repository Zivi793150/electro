{"version":3,"file":"static/js/645.60b0b6ad.chunk.js","mappings":"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","sources":["admin/ProductMerge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ProductMerge.css';\r\n\r\nconst API_URL = 'https://electro-a8bl.onrender.com/api';\r\n\r\nfunction ProductMerge({ onLogout }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [masterProducts, setMasterProducts] = useState([]);\r\n  const [showMergeForm, setShowMergeForm] = useState(false);\r\n  const [mergeFormData, setMergeFormData] = useState({\r\n    name: '',\r\n    category: '',\r\n    description: '',\r\n    shortDescription: '',\r\n    mainImage: '',\r\n    variationType: 'power'\r\n  });\r\n\r\n  // Загрузка всех товаров\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_URL}/products`);\r\n      const data = await response.json();\r\n      // Проверяем, что data является массивом\r\n      setProducts(Array.isArray(data) ? data : []);\r\n    } catch (err) {\r\n      setError('Ошибка загрузки товаров');\r\n      console.error(err);\r\n      setProducts([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Загрузка мастер-товаров\r\n  const fetchMasterProducts = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/master-products`);\r\n      const data = await response.json();\r\n      // Проверяем, что data является массивом\r\n      setMasterProducts(Array.isArray(data) ? data : []);\r\n    } catch (err) {\r\n      console.error('Ошибка загрузки мастер-товаров:', err);\r\n      setMasterProducts([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchMasterProducts();\r\n  }, []);\r\n\r\n  // Выбор товара\r\n  const handleProductSelect = (productId) => {\r\n    setSelectedProducts(prev => {\r\n      if (prev.includes(productId)) {\r\n        return prev.filter(id => id !== productId);\r\n      } else {\r\n        return [...prev, productId];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Выбор всех товаров\r\n  const handleSelectAll = () => {\r\n    if (!Array.isArray(products)) return;\r\n    \r\n    if (selectedProducts.length === products.length) {\r\n      setSelectedProducts([]);\r\n    } else {\r\n      setSelectedProducts(products.filter(p => p && p._id).map(p => p._id));\r\n    }\r\n  };\r\n\r\n  // Открытие формы объединения\r\n  const handleMergeClick = () => {\r\n    if (selectedProducts.length < 2) {\r\n      setError('Выберите минимум 2 товара для объединения');\r\n      return;\r\n    }\r\n    \r\n    const selectedProductObjects = products.filter(p => selectedProducts.includes(p._id));\r\n    \r\n    // Автоматически заполняем форму данными первого товара\r\n    const firstProduct = selectedProductObjects[0];\r\n    setMergeFormData({\r\n      name: firstProduct.name.replace(/\\d+\\s*[ВтW]/i, '').trim(), // Убираем мощность из названия\r\n      category: firstProduct.category || '',\r\n      description: firstProduct.description || '',\r\n      shortDescription: firstProduct['Short description'] || '',\r\n      mainImage: firstProduct.image || '',\r\n      variationType: 'power'\r\n    });\r\n    \r\n    setShowMergeForm(true);\r\n    setError('');\r\n  };\r\n\r\n  // Объединение товаров\r\n  const handleMergeSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      const response = await fetch(`${API_URL}/merge-products`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          productIds: selectedProducts,\r\n          masterProductData: mergeFormData,\r\n          variationType: mergeFormData.variationType\r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Ошибка объединения товаров');\r\n      }\r\n      \r\n      setSuccess(data.message);\r\n      setSelectedProducts([]);\r\n      setShowMergeForm(false);\r\n      setMergeFormData({\r\n        name: '',\r\n        category: '',\r\n        description: '',\r\n        shortDescription: '',\r\n        mainImage: '',\r\n        variationType: 'power'\r\n      });\r\n      \r\n      // Обновляем списки\r\n      await fetchProducts();\r\n      await fetchMasterProducts();\r\n      \r\n      // Очищаем сообщение об успехе через 3 секунды\r\n      setTimeout(() => setSuccess(''), 3000);\r\n      \r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Удаление мастер-товара\r\n  const handleDeleteMasterProduct = async (masterProductId) => {\r\n    if (!window.confirm('Вы уверены, что хотите удалить этот мастер-товар и все его вариации?')) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`${API_URL}/master-products/${masterProductId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Ошибка удаления');\r\n      }\r\n      \r\n      setSuccess('Мастер-товар успешно удален');\r\n      await fetchMasterProducts();\r\n      \r\n      setTimeout(() => setSuccess(''), 3000);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Получение выбранных товаров\r\n  const getSelectedProductObjects = () => {\r\n    if (!Array.isArray(products)) return [];\r\n    return products.filter(p => p && p._id && selectedProducts.includes(p._id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-merge\">\r\n      <div className=\"product-merge-header\">\r\n        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 20}}>\r\n          <div>\r\n            <h1>Объединение товаров</h1>\r\n            <p>Выберите товары, которые отличаются только параметрами (например, мощностью), и объедините их в один товар с вариациями.</p>\r\n          </div>\r\n          <div style={{display: 'flex', gap: 10}}>\r\n            <button \r\n              onClick={() => window.location.href = '/admin/products'} \r\n              style={{\r\n                background: '#1976d2', \r\n                color: '#fff', \r\n                fontWeight: 600, \r\n                fontSize: 15, \r\n                border: 'none', \r\n                borderRadius: 7, \r\n                padding: '8px 18px', \r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              📦 Товары\r\n            </button>\r\n            <button \r\n              onClick={() => window.location.href = '/admin/settings'} \r\n              style={{\r\n                background: '#1e88e5', \r\n                color: '#fff', \r\n                fontWeight: 600, \r\n                fontSize: 15, \r\n                border: 'none', \r\n                borderRadius: 7, \r\n                padding: '8px 18px', \r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              ⚙️ Настройки\r\n            </button>\r\n            <button \r\n              onClick={() => window.location.href = '/admin/pickup-points'} \r\n              style={{\r\n                background: '#28a745', \r\n                color: '#fff', \r\n                fontWeight: 600, \r\n                fontSize: 15, \r\n                border: 'none', \r\n                borderRadius: 7, \r\n                padding: '8px 18px', \r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              🏬 Пункты самовывоза\r\n            </button>\r\n            <button \r\n              onClick={onLogout} \r\n              style={{\r\n                background: '#e53935', \r\n                color: '#fff', \r\n                fontWeight: 600, \r\n                fontSize: 15, \r\n                border: 'none', \r\n                borderRadius: 7, \r\n                padding: '8px 18px', \r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              Выйти\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n          <button onClick={() => setError('')}>&times;</button>\r\n        </div>\r\n      )}\r\n\r\n      {success && (\r\n        <div className=\"success-message\">\r\n          {success}\r\n          <button onClick={() => setSuccess('')}>&times;</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"product-merge-content\">\r\n        <div className=\"product-merge-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Выбор товаров для объединения</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                onClick={handleSelectAll}\r\n                className=\"btn-secondary\"\r\n              >\r\n                                 {Array.isArray(products) && selectedProducts.length === products.length ? 'Снять выделение' : 'Выбрать все'}\r\n              </button>\r\n              <button \r\n                onClick={handleMergeClick}\r\n                disabled={selectedProducts.length < 2 || loading}\r\n                className=\"btn-primary\"\r\n              >\r\n                Объединить выбранные ({selectedProducts.length})\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"loading\">Загрузка товаров...</div>\r\n          ) : (\r\n            <div className=\"products-grid\">\r\n              {Array.isArray(products) && products.map(product => (\r\n                <div \r\n                  key={product._id || Math.random()} \r\n                  className={`product-card ${selectedProducts.includes(product._id) ? 'selected' : ''}`}\r\n                  onClick={() => product._id && handleProductSelect(product._id)}\r\n                >\r\n                                     <div className=\"product-image\">\r\n                     <img src={product.image || '/images/products/placeholder.png'} alt={product.name || 'Товар'} />\r\n                   </div>\r\n                                     <div className=\"product-info\">\r\n                     <h3>{product.name || 'Без названия'}</h3>\r\n                     <p className=\"product-price\">{product.price || '0'} ₸</p>\r\n                     <p className=\"product-article\">Артикул: {product.article || 'Нет'}</p>\r\n                    {product.characteristics && (\r\n                      <div className=\"product-characteristics\">\r\n                        <small>Характеристики:</small>\r\n                        <div className=\"characteristics-preview\">\r\n                          {typeof product.characteristics === 'string' \r\n                            ? product.characteristics.substring(0, 100) + '...'\r\n                            : JSON.stringify(product.characteristics).substring(0, 100) + '...'\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                                     <div className=\"product-checkbox\">\r\n                     <input \r\n                       type=\"checkbox\" \r\n                       checked={product._id ? selectedProducts.includes(product._id) : false}\r\n                       onChange={() => product._id && handleProductSelect(product._id)}\r\n                       onClick={(e) => e.stopPropagation()}\r\n                     />\r\n                   </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {showMergeForm && (\r\n          <div className=\"merge-form-overlay\">\r\n            <div className=\"merge-form\">\r\n              <div className=\"form-header\">\r\n                <h2>Настройки объединения</h2>\r\n                <button onClick={() => setShowMergeForm(false)}>&times;</button>\r\n              </div>\r\n              \r\n              <form onSubmit={handleMergeSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Название мастер-товара:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={mergeFormData.name}\r\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                    required\r\n                    placeholder=\"Например: Угловая шлифовальная машина\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Категория:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={mergeFormData.category}\r\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, category: e.target.value }))}\r\n                    required\r\n                    placeholder=\"Например: Болгарка\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Тип вариации:</label>\r\n                  <select\r\n                    value={mergeFormData.variationType}\r\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, variationType: e.target.value }))}\r\n                  >\r\n                    <option value=\"power\">Мощность (Вт)</option>\r\n                    <option value=\"voltage\">Напряжение (В)</option>\r\n                    <option value=\"size\">Размер</option>\r\n                    <option value=\"color\">Цвет</option>\r\n                    <option value=\"custom\">Другое</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Описание:</label>\r\n                  <textarea\r\n                    value={mergeFormData.description}\r\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                    placeholder=\"Описание товара\"\r\n                    rows=\"3\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Краткое описание:</label>\r\n                  <textarea\r\n                    value={mergeFormData.shortDescription}\r\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, shortDescription: e.target.value }))}\r\n                    placeholder=\"Краткое описание\"\r\n                    rows=\"2\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Главное изображение:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={mergeFormData.mainImage}\r\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, mainImage: e.target.value }))}\r\n                    placeholder=\"URL изображения\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"selected-products-preview\">\r\n                  <h4>Выбранные товары ({selectedProducts.length}):</h4>\r\n                  <div className=\"selected-products-list\">\r\n                                         {getSelectedProductObjects().map(product => (\r\n                       <div key={product._id || Math.random()} className=\"selected-product-item\">\r\n                         <img src={product.image || '/images/products/placeholder.png'} alt={product.name || 'Товар'} />\r\n                         <div>\r\n                           <strong>{product.name || 'Без названия'}</strong>\r\n                           <span>{product.price || '0'} ₸</span>\r\n                         </div>\r\n                       </div>\r\n                     ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <button type=\"button\" onClick={() => setShowMergeForm(false)} className=\"btn-secondary\">\r\n                    Отмена\r\n                  </button>\r\n                  <button type=\"submit\" disabled={loading} className=\"btn-primary\">\r\n                    {loading ? 'Объединение...' : 'Объединить товары'}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"product-merge-section\">\r\n          <h2>Существующие мастер-товары</h2>\r\n          {!Array.isArray(masterProducts) || masterProducts.length === 0 ? (\r\n            <p>Пока нет объединенных товаров</p>\r\n          ) : (\r\n            <div className=\"master-products-list\">\r\n              {masterProducts.map(masterProduct => (\r\n                <div key={masterProduct._id} className=\"master-product-card\">\r\n                  <div className=\"master-product-info\">\r\n                    <h3>{masterProduct.name}</h3>\r\n                    <p>Категория: {masterProduct.category}</p>\r\n                    <p>Типы вариаций: {Array.isArray(masterProduct.variationTypes) ? masterProduct.variationTypes.join(', ') : 'Не указано'}</p>\r\n                    <p>Создан: {masterProduct.createdAt ? new Date(masterProduct.createdAt).toLocaleDateString() : 'Не указано'}</p>\r\n                  </div>\r\n                  <div className=\"master-product-actions\">\r\n                    <button \r\n                      onClick={() => handleDeleteMasterProduct(masterProduct._id)}\r\n                      className=\"btn-danger\"\r\n                    >\r\n                      Удалить\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductMerge; "],"names":["API_URL","_ref","onLogout","products","setProducts","useState","selectedProducts","setSelectedProducts","loading","setLoading","error","setError","success","setSuccess","masterProducts","setMasterProducts","showMergeForm","setShowMergeForm","mergeFormData","setMergeFormData","name","category","description","shortDescription","mainImage","variationType","fetchProducts","async","response","fetch","data","json","Array","isArray","err","console","fetchMasterProducts","useEffect","handleProductSelect","productId","prev","includes","filter","id","_jsxs","className","children","_jsx","style","display","justifyContent","alignItems","marginBottom","gap","onClick","window","location","href","background","color","fontWeight","fontSize","border","borderRadius","padding","cursor","handleSelectAll","length","p","_id","map","handleMergeClick","firstProduct","replace","trim","image","disabled","product","src","alt","price","article","characteristics","substring","JSON","stringify","type","checked","onChange","e","stopPropagation","Math","random","onSubmit","preventDefault","method","headers","body","productIds","masterProductData","ok","Error","message","setTimeout","value","target","required","placeholder","rows","masterProduct","variationTypes","join","createdAt","Date","toLocaleDateString","confirm","masterProductId","handleDeleteMasterProduct"],"sourceRoot":""}