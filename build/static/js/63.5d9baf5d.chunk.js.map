{"version":3,"file":"static/js/63.5d9baf5d.chunk.js","mappings":"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","sources":["pages/Contacts.js","components/Modal.js","utils/telegram.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport '../styles/Contacts.css';\n\nconst Contacts = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = () => {\n    alert('Спасибо! Ваше сообщение отправлено. Мы свяжемся с вами в ближайшее время.');\n  };\n  const handleSocialClick = (platform) => {\n    alert(`Переход в ${platform}`);\n  };\n\n  return (\n    <div className=\"contacts\">\n      <Header />\n      <main className=\"contacts-main\">\n        <div className=\"container\">\n          <h1 className=\"contacts-title\">Контакты</h1>\n          <div className=\"contacts-content\">\n            <div className=\"contacts-grid\">\n              <div className=\"contact-card\">\n                <div className=\"contact-card-header\"><span className=\"contact-card-icon\"><img src=\"/icons/telephone.svg\" alt=\"Телефон\" width={24} height={24} loading=\"lazy\" /></span><span>Телефоны</span></div>\n                <div className=\"contact-card-content\">+7 (777) 777-77-77<br />+7 (727) 777-77-77</div>\n              </div>\n              <div className=\"contact-card\">\n                <div className=\"contact-card-header\"><span className=\"contact-card-icon\">✉</span><span>Email</span></div>\n                <div className=\"contact-card-content\">info@tankertools.kz<br />sales@tankertools.kz</div>\n              </div>\n              <div className=\"contact-card\">\n                <div className=\"contact-card-header\"><span className=\"contact-card-icon\"><img src=\"/icons/map.svg\" alt=\"Адрес\" width={24} height={24} loading=\"lazy\" /></span><span>Адрес</span></div>\n                <div className=\"contact-card-content\">г. Алматы, Аймусин улица, 1в<br />Достык М-Н, Ауэзовский район</div>\n              </div>\n              <div className=\"contact-card\">\n                <div className=\"contact-card-header\"><span className=\"contact-card-icon\"><img src=\"/icons/clock.svg\" alt=\"Часы\" width={24} height={24} loading=\"lazy\" /></span><span>Режим работы</span></div>\n                <div className=\"contact-card-content\">Пн-Пт: 9:00 - 18:00<br />Сб: 10:00 - 16:00<br />Вс: выходной</div>\n              </div>\n            </div>\n            <div className=\"contact-form\">\n              <h2>Напишите нам</h2>\n              <p>Оставьте сообщение, и мы свяжемся с вами в ближайшее время</p>\n              <button className=\"btn-contact-form\" onClick={handleOpenModal}>Отправить сообщение</button>\n              <div className=\"social-links\">\n                <h3>Мы в социальных сетях</h3>\n                <div className=\"social-grid\">\n                  <button className=\"social-link\" onClick={() => handleSocialClick('WhatsApp')}><span className=\"social-icon\"><img src=\"/icons/whatsapp-whats-app.svg\" alt=\"WhatsApp\" width={24} height={24} loading=\"lazy\" /></span><span>WhatsApp</span></button>\n                  <button className=\"social-link\" onClick={() => handleSocialClick('Telegram')}><span className=\"social-icon\"><img src=\"/icons/telegram.svg\" alt=\"Telegram\" width={24} height={24} loading=\"lazy\" /></span><span>Telegram</span></button>\n                  <button className=\"social-link\" onClick={() => handleSocialClick('Instagram')}><span className=\"social-icon\"><img src=\"/icons/instagram.svg\" alt=\"Instagram\" width={24} height={24} loading=\"lazy\" /></span><span>Instagram</span></button>\n                  <button className=\"social-link\" onClick={() => handleSocialClick('Facebook')}><span className=\"social-icon\">📘</span><span>Facebook</span></button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <section className=\"map-section\">\n            <h2>Как нас найти - Аймусин улица, 1в</h2>\n            <div className=\"map-container\">\n              <iframe\n                src=\"https://www.google.com/maps?q=43.233801,76.816602&z=17&output=embed\"\n                width=\"100%\"\n                height=\"450\"\n                style={{ border: 0 }}\n                allowFullScreen=\"\"\n                loading=\"lazy\"\n                referrerPolicy=\"no-referrer-when-downgrade\"\n                title=\"Карта офиса Танкер Тулс - Аймусин улица, 1в\"\n              ></iframe>\n            </div>\n          </section>\n          <section className=\"additional-info\">\n            <div className=\"info-grid\">\n              <div className=\"info-item\"><h3><img src=\"/icons/truck.svg\" alt=\"Доставка\" width={24} height={24} style={{display:'inline-block', marginRight:'8px', verticalAlign:'middle'}} loading=\"lazy\" /> Доставка</h3><p>Бесплатная доставка по Алматы при заказе от 50 000 ₸</p></div>\n              <div className=\"info-item\"><h3><img src=\"/icons/wrench.svg\" alt=\"Сервис\" width={24} height={24} style={{display:'inline-block', marginRight:'8px', verticalAlign:'middle'}} loading=\"lazy\" /> Сервис</h3><p>Техническое обслуживание и ремонт электроинструментов</p></div>\n              <div className=\"info-item\"><h3><img src=\"/icons/checklist.svg\" alt=\"Тендеры\" width={24} height={24} style={{display:'inline-block', marginRight:'8px', verticalAlign:'middle'}} loading=\"lazy\" /> Тендеры</h3><p>Участие в государственных и коммерческих тендерах</p></div>\n              <div className=\"info-item\"><h3><img src=\"/icons/card.svg\" alt=\"Оплата\" width={24} height={24} style={{display:'inline-block', marginRight:'8px', verticalAlign:'middle'}} loading=\"lazy\" /> Оплата</h3><p>Наличные, банковские карты, безналичный расчёт</p></div>\n            </div>\n          </section>\n        </div>\n      </main>\n      <Footer />\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} />\n    </div>\n  );\n};\n\nexport default Contacts; ","import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData, product);\r\n      \r\n      if (result.success) {\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n\r\nexport const sendToTelegram = async (formData, product = null) => {\r\n  try {\r\n    // Определяем базовый URL API (локально шлём на порт сервера)\r\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\r\n    const API_BASE = 'https://electro-a8bl.onrender.com';\r\n\r\n    // Отправляем данные на наш API endpoint\r\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: formData.name,\r\n        phone: formData.phone,\r\n        message: formData.message,\r\n        product: product\r\n      })\r\n    });\r\n    \r\n    const result = await response.json();\r\n    \r\n    if (result.success) {\r\n      return { success: true, message: 'Заявка успешно отправлена!' };\r\n    } else {\r\n      console.error('Ошибка API:', result.error);\r\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; "],"names":["Contacts","isModalOpen","setIsModalOpen","useState","handleSocialClick","platform","alert","_jsxs","className","children","_jsx","Header","src","alt","width","height","loading","onClick","handleOpenModal","style","border","allowFullScreen","referrerPolicy","title","display","marginRight","verticalAlign","Footer","Modal","isOpen","onClose","handleCloseModal","onSubmit","handleSubmitForm","_ref","product","formData","setFormData","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","value","target","stopPropagation","async","preventDefault","validation","trim","test","isValid","Object","keys","length","validateForm","result","arguments","undefined","API_BASE","response","fetch","method","headers","body","JSON","stringify","json","success","console","error","sendToTelegram","htmlFor","type","id","onChange","placeholder","rows","disabled"],"sourceRoot":""}