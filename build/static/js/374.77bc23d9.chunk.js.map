{"version":3,"file":"static/js/374.77bc23d9.chunk.js","mappings":"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","sources":["utils/price.js","utils/cache.js","pages/opt/Product.js","components/Modal.js","utils/telegram.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { formatTenge } from '../../utils/price';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport Modal from '../../components/Modal';\r\nimport { trackProductView, trackButtonClick, trackPurchaseStart } from '../../utils/analytics';\r\nimport { fetchWithCache } from '../../utils/cache';\r\nimport '../../styles/Product.css';\r\nimport '../../styles/ProductVariations.css';\r\nimport '../../components/ImageModal.css';\r\n\r\n// Надёжный fetch с повторами и таймаутом\r\nconst fetchWithRetry = async (url, options = {}, retries = 2, backoffMs = 800, timeoutMs = 12000) => {\r\n  for (let attempt = 0; attempt <= retries; attempt++) {\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\r\n    try {\r\n      const response = await fetch(url, {\r\n        ...options,\r\n        headers: { 'Accept': 'application/json', ...(options.headers || {}) },\r\n        signal: controller.signal\r\n      });\r\n      clearTimeout(timeoutId);\r\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n      return response;\r\n    } catch (error) {\r\n      clearTimeout(timeoutId);\r\n      if (attempt === retries) throw error;\r\n      await new Promise(r => setTimeout(r, backoffMs * Math.pow(2, attempt)));\r\n    }\r\n  }\r\n};\r\n\r\nconst categories = [\r\n  { id: 'bolgarki', name: 'Болгарки' },\r\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\r\n  { id: 'hammers', name: 'Перфораторы' },\r\n  { id: 'drills', name: 'Дрели' },\r\n  { id: 'jigsaws', name: 'Лобзики' },\r\n  { id: 'levels', name: 'Лазерные уровни' },\r\n  { id: 'generators', name: 'Генераторы' },\r\n  { id: 'measuring', name: 'Измерители' }\r\n];\r\n\r\nconst OptProduct = () => {\r\n  const { id, slug } = useParams();\r\n  const [product, setProduct] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [activeImage, setActiveImage] = useState(0);\r\n  const [showImageModal, setShowImageModal] = useState(false);\r\n  const [miniProducts, setMiniProducts] = useState([]);\r\n  const [siteSettings, setSiteSettings] = useState({\r\n    city: 'Алматы',\r\n    productPageText: '',\r\n    deliveryInfo: {\r\n      freeDelivery: 'Бесплатная доставка по городу',\r\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\r\n      pickupAddress: 'ул. Толе би 216Б',\r\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\r\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\r\n    }\r\n  });\r\n  \r\n  // Раздел доставки отключён по требованию — связанные состояния скрыты\r\n  const [selectedCity] = useState('Алматы');\r\n  const [selectedDelivery] = useState(null);\r\n  const [deliveryInfo] = useState(null);\r\n  const [isCityChanging] = useState(false);\r\n  \r\n  // Состояние для вариаций товара\r\n  const [productGroup, setProductGroup] = useState(null);\r\n  const [selectedVariant, setSelectedVariant] = useState(null);\r\n  const [selectedParameters, setSelectedParameters] = useState({});\r\n\r\n  const [detectingCity, setDetectingCity] = useState(false);\r\n  \r\n  // Функция для автоматического определения города\r\n  const detectUserCity = () => {};\r\n  \r\n  // Список городов Казахстана\r\n  const cities = [\r\n    'Алматы',\r\n    'Астана',\r\n    'Шымкент',\r\n    'Актобе',\r\n    'Караганда',\r\n    'Тараз',\r\n    'Павлодар',\r\n    'Семей',\r\n    'Усть-Каменогорск',\r\n    'Уральск',\r\n    'Кызылорда',\r\n    'Костанай',\r\n    'Петропавловск',\r\n    'Атырау',\r\n    'Актау',\r\n    'Темиртау',\r\n    'Туркестан',\r\n    'Кокшетау',\r\n    'Талдыкорган',\r\n    'Экибастуз',\r\n    'Рудный',\r\n    'Жанаозен',\r\n    'Жезказган',\r\n    'Балхаш',\r\n    'Кентау',\r\n    'Сатпаев',\r\n    'Капчагай',\r\n    'Риддер',\r\n    'Степногорск',\r\n    'Аральск',\r\n    'Аркалык',\r\n    'Житикара',\r\n    'Кандыагаш',\r\n    'Лисаковск',\r\n    'Шахтинск',\r\n    'Абай',\r\n    'Аягоз',\r\n    'Зайсан',\r\n    'Курчатов',\r\n    'Приозерск',\r\n    'Серебрянск',\r\n    'Текели',\r\n    'Уштобе',\r\n    'Чарск',\r\n    'Шемонаиха',\r\n    'Щучинск'\r\n  ];\r\n  \r\n  // Объединяем все изображения из разных полей\r\n  const getAllImages = () => {\r\n    const currentProduct = getCurrentProduct();\r\n    const images = [];\r\n    \r\n    // Добавляем основное изображение из поля image (если есть)\r\n    if (currentProduct?.image) {\r\n      images.push(currentProduct.image);\r\n    }\r\n    \r\n    // Добавляем изображения из поля images\r\n    if (Array.isArray(currentProduct?.images)) {\r\n      images.push(...currentProduct.images);\r\n    }\r\n    \r\n    // Добавляем изображения из поля images2\r\n    if (Array.isArray(currentProduct?.images2)) {\r\n      images.push(...currentProduct.images2);\r\n    }\r\n    \r\n    // Добавляем изображения из поля images3\r\n    if (Array.isArray(currentProduct?.images3)) {\r\n      images.push(...currentProduct.images3);\r\n    }\r\n    \r\n    // Если нет изображений, добавляем placeholder\r\n    if (images.length === 0) {\r\n      images.push('/images/products/placeholder.png');\r\n    }\r\n    \r\n    return images;\r\n  };\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    const fetchProductAndGroup = async () => {\r\n      try {\r\n        // Загружаем товар: по id или по slug\r\n        let productData;\r\n        if (id) {\r\n          productData = await fetchWithCache(`${API_URL}/${id}`, {}, 5 * 60 * 1000);\r\n        } else if (slug) {\r\n          // Загружаем все товары и ищем по slug\r\n          try {\r\n            const allProducts = await fetchWithCache(`${API_URL}`, {}, 5 * 60 * 1000);\r\n            productData = allProducts.find(p => p.slug === slug);\r\n            if (!productData) {\r\n              productData = { error: 'Товар не найден' };\r\n            }\r\n          } catch (error) {\r\n            productData = { error: 'Ошибка при загрузке товара' };\r\n          }\r\n        }\r\n        \r\n        if (productData.error) {\r\n          setError(productData.error);\r\n          setProduct(null);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        setProduct(productData);\r\n        \r\n        // Отслеживаем просмотр товара с дополнительными данными\r\n        trackProductView(\r\n          productData._id, \r\n          productData.name, \r\n          productData.price,\r\n          productData.category\r\n        );\r\n        \r\n        // Загружаем группу вариаций для этого товара\r\n        try {\r\n         const groupRes = await fetchWithRetry(`https://electro-1-vjdu.onrender.com/api/product-groups/by-product/${productData._id}`);\r\n          if (groupRes.ok) {\r\n            const groupData = await groupRes.json();\r\n            setProductGroup(groupData);\r\n            \r\n             // Инициализация выбранной вариации\r\n             if (groupData.baseProductId?._id === productData._id) {\r\n               // Открыли страницу базового товара\r\n               setSelectedVariant(null);\r\n               setSelectedParameters({});\r\n             } else {\r\n               // Открыли страницу вариации — находим её и выставляем параметры\r\n               const currentVariant = (groupData.variants || []).find(v => v.productId && (v.productId._id === id));\r\n               if (currentVariant) {\r\n                 setSelectedVariant(currentVariant);\r\n                 setSelectedParameters(currentVariant.parameters || {});\r\n               }\r\n            }\r\n          }\r\n        } catch (groupError) {\r\n          console.log('Группа вариаций не найдена для товара:', groupError);\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError('Ошибка загрузки товара');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchProductAndGroup();\r\n  }, [id, slug]);\r\n\r\n  useEffect(() => {\r\n    fetchWithCache(`${API_URL}?limit=4`, {}, 5 * 60 * 1000) // Кэш на 5 минут\r\n      .then(data => {\r\n        if (Array.isArray(data)) setMiniProducts(data);\r\n      });\r\n  }, []);\r\n\r\n  // Загружаем информацию сайта\r\n  useEffect(() => {\r\n   fetchWithRetry('https://electro-1-vjdu.onrender.com/api/information')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.information) {\r\n          setSiteSettings(data.information);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\r\n      });\r\n  }, []);\r\n  \r\n  // Сбрасываем активное изображение при смене товара\r\n  useEffect(() => {\r\n    setActiveImage(0);\r\n  }, [selectedVariant]);\r\n\r\n  if (loading) {\r\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\r\n  }\r\n  if (error || !product) {\r\n    return (\r\n      <div className=\"product\">\r\n        <Header />\r\n        <main className=\"product-main\">\r\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\r\n            <h1>Товар не найден</h1>\r\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/opt/catalog\">каталог</a>.</p>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Найти категорию для хлебных крошек\r\n  const categoryObj = categories.find(cat => cat.id === product.category);\r\n  const categoryName = categoryObj ? categoryObj.name : '';\r\n\r\n  // Преимущества — если есть в product, иначе дефолтные\r\n  const productAdvantages = product.advantages || [\r\n    'Высокий крутящий момент и мощность',\r\n    'Долговечный литий-ионный аккумулятор',\r\n    'Компактный и лёгкий корпус для работы одной рукой'\r\n  ];\r\n\r\n  const handleOpenModal = () => setIsModalOpen(true);\r\n  const handleCloseModal = () => setIsModalOpen(false);\r\n  const handleSubmitForm = (formData) => {\r\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\r\n  };\r\n\r\n  const handleBuy = () => {\r\n    const currentProduct = getCurrentProduct();\r\n    const currentPrice = getCurrentPrice();\r\n    \r\n    // Отслеживаем начало покупки\r\n    trackPurchaseStart(\r\n      currentProduct._id, \r\n      currentProduct.name, \r\n      currentPrice, \r\n      'opt_product_page'\r\n    );\r\n    \r\n    navigate('/opt/checkout', { \r\n      state: { \r\n        product: currentProduct,\r\n        selectedVariant,\r\n        selectedParameters,\r\n        originalPrice: product.price,\r\n        currentPrice\r\n      } \r\n    });\r\n  };\r\n\r\n  // Функции для работы с вариациями\r\n  const normalize = (val) => {\r\n    if (val === undefined || val === null) return '';\r\n    return String(val).trim();\r\n  };\r\n\r\n  const handleParameterChange = (paramName, value) => {\r\n    const newParameters = { ...selectedParameters, [paramName]: value };\r\n    setSelectedParameters(newParameters);\r\n    \r\n    // Находим подходящую вариацию\r\n    if (productGroup) {\r\n      // Удаляем параметр из поиска, если значение пустое или false\r\n      const filteredParameters = {};\r\n      Object.entries(newParameters).forEach(([key, val]) => {\r\n        if (val && val !== 'false') {\r\n          filteredParameters[key] = val;\r\n        }\r\n      });\r\n      \r\n      // Если нет выбранных параметров, сбрасываем на базовый товар\r\n      if (Object.keys(filteredParameters).length === 0) {\r\n        setSelectedVariant(null);\r\n        return;\r\n      }\r\n      \r\n      // Ищем вариацию с точным совпадением всех параметров\r\n      let matchingVariant = productGroup.variants.find(variant => {\r\n        if (!variant.isActive) return false;\r\n        \r\n        // Проверяем, что все выбранные параметры совпадают\r\n        return Object.entries(filteredParameters).every(([key, val]) => {\r\n          return normalize(variant.parameters[key]) === normalize(val);\r\n        });\r\n      });\r\n      \r\n      if (matchingVariant) {\r\n        setSelectedVariant(matchingVariant);\r\n      } else {\r\n        // Нет точной комбинации — не подставляем другой товар\r\n        setSelectedVariant(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Получаем текущий товар для отображения (с учетом выбранной вариации)\r\n  const getCurrentProduct = () => {\r\n    if (selectedVariant && selectedVariant.productId) {\r\n      // Убеждаемся, что у нас есть полная информация о товаре\r\n      return selectedVariant.productId;\r\n    }\r\n    return product;\r\n  };\r\n\r\n  // Получаем текущую цену\r\n  const getCurrentPrice = () => {\r\n    if (selectedVariant && selectedVariant.productId) {\r\n      return selectedVariant.productId.price;\r\n    }\r\n    return product?.price;\r\n  };\r\n\r\n  // Проверяем, есть ли вариации с определенным параметром\r\n  const hasVariationsWithParameter = (paramName) => {\r\n    if (!productGroup) return false;\r\n    return productGroup.variants.some(variant => \r\n      variant.isActive && variant.parameters[paramName]\r\n    );\r\n  };\r\n\r\n  // Получаем доступные значения для параметра\r\n  const getAvailableValuesForParameter = (paramName) => {\r\n    if (!productGroup) return [];\r\n    // Учитываем другие выбранные параметры, чтобы не предлагать невозможные комбинации\r\n    const otherParams = { ...selectedParameters };\r\n    delete otherParams[paramName];\r\n    const values = new Set();\r\n    productGroup.variants.forEach(variant => {\r\n      if (!variant.isActive) return;\r\n      // Совпадает ли вариант по всем другим выбранным параметрам?\r\n      const matchesOthers = Object.entries(otherParams).every(([k, v]) => {\r\n        if (!v || v === 'false') return true;\r\n        return normalize(variant.parameters[k]) === normalize(v);\r\n      });\r\n      if (!matchesOthers) return;\r\n      const val = variant.parameters[paramName];\r\n      if (val) values.add(val);\r\n    });\r\n    return Array.from(values);\r\n  };\r\n\r\n  // Все возможные значения параметра (без учёта выбранных других параметров)\r\n  const getAllValuesForParameter = (param) => {\r\n    if (Array.isArray(param.values) && param.values.length > 0) return param.values;\r\n    if (!productGroup) return [];\r\n    const values = new Set();\r\n    productGroup.variants.forEach(variant => {\r\n      const val = variant.parameters[param.name];\r\n      if (val) values.add(val);\r\n    });\r\n    return Array.from(values);\r\n  };\r\n\r\n  // Модалка фото\r\n  const handleImageClick = () => setShowImageModal(true);\r\n  const handleCloseImageModal = () => setShowImageModal(false);\r\n   const handlePrevImage = (e) => {\r\n     e.stopPropagation();\r\n     const images = getAllImages();\r\n     setActiveImage((prev) => {\r\n       const newIndex = (prev - 1 + images.length) % images.length;\r\n       return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\r\n     });\r\n   };\r\n  const handleNextImage = (e) => {\r\n    e.stopPropagation();\r\n    const images = getAllImages();\r\n    setActiveImage((prev) => {\r\n      const newIndex = (prev + 1) % images.length;\r\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\r\n    });\r\n  };\r\n  \r\n  const handleCityChange = () => {};\r\n\r\n  const fetchDeliveryInfo = async () => {};\r\n\r\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\r\n\r\n  // Функция для получения оптимального размера изображения\r\n  const getOptimalImage = (product, preferredSize = 'medium') => {\r\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\r\n    if (product.productGroup && product.productGroup.coverImage) {\r\n      return product.productGroup.coverImage;\r\n    }\r\n    \r\n    // Затем проверяем обычные изображения товара\r\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\r\n      return product.imageVariants[preferredSize];\r\n    }\r\n    if (product.imageVariants && product.imageVariants.webp) {\r\n      return product.imageVariants[preferredSize];\r\n    }\r\n    return product.image || '/images/products/placeholder.png';\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-page\">\r\n      <Header />\r\n      <main className=\"product-main\">\r\n        <div className=\"product-container\">\r\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\r\n            <a href=\"/opt\">Оптовикам</a>\r\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\r\n            <a href=\"/opt/catalog\">Каталог</a>\r\n            {categoryName && (\r\n              <>\r\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\r\n                <a href={`/opt/catalog?category=${product.category}`}>{categoryName}</a>\r\n              </>\r\n            )}\r\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\r\n            <span style={{color:'#1a2236', fontWeight:500}}>{product.name}</span>\r\n          </nav>\r\n          <div className=\"product-flex\">\r\n            {/* Фото и миниатюры */}\r\n            <div className=\"product-gallery\">\r\n              <div className=\"product-gallery-inner\">\r\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\r\n                  <img \r\n                    src={getAllImages()[activeImage]} \r\n                    alt={product.name} \r\n                    loading=\"lazy\"\r\n                    style={{maxWidth: '100%', maxHeight: '100%', objectFit: 'contain'}}\r\n                  />\r\n                </div>\r\n                {getAllImages().length > 1 && (\r\n                  <>\r\n                    <div className=\"product-thumbs\">\r\n                      {getAllImages().map((img, idx) => (\r\n                        <img \r\n                          key={idx} \r\n                          src={img} \r\n                          alt={product.name + idx} \r\n                          className={activeImage === idx ? \"active\" : \"\"} \r\n                          onClick={() => setActiveImage(idx)} \r\n                          loading=\"lazy\"\r\n                          width=\"80\"\r\n                          height=\"80\"\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Инфо и цена справа */}\r\n            <div className=\"product-info-block\">\r\n              <>\r\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 4, wordBreak: 'break-word', marginTop: 0, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\r\n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 6, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\r\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\r\n                <div className=\"product-divider\"></div>\r\n                {/* Компонент выбора вариаций */}\r\n                {productGroup && productGroup.parameters.length > 0 && (\r\n                  <div className=\"product-variations\" style={{\r\n                    marginTop: '4px',\r\n                    marginBottom: '4px'\r\n                  }}>\r\n                    {productGroup.parameters\r\n                      .filter(param => {\r\n                        const paramNameLower = (param.name || '').toLowerCase();\r\n                        const isModelParam = paramNameLower.includes('модель');\r\n\r\n                        // Требуем, чтобы для «модель» были выбраны и мощность, и регулятор\r\n                        if (isModelParam) {\r\n                          const powerParam = (productGroup.parameters.find(p => (p.name || '').toLowerCase().includes('мощ')) || {}).name;\r\n                          const regulatorParam = (productGroup.parameters.find(p => (p.name || '').toLowerCase().includes('регуля')) || {}).name;\r\n                          const powerSelected = powerParam ? !!selectedParameters[powerParam] : false;\r\n                          const regulatorSelected = regulatorParam ? !!selectedParameters[regulatorParam] : false;\r\n                          if (!powerSelected || !regulatorSelected) return false;\r\n                        }\r\n\r\n                        const visibleByDefault = param.visibleByDefault !== false;\r\n                        if (visibleByDefault) return true;\r\n\r\n                        const allowed = new Set((Array.isArray(param.visibleForProductIds) ? param.visibleForProductIds : []).map(String));\r\n                        if (allowed.size === 0) return false;\r\n\r\n                        const currentId = getCurrentProduct()?._id ? String(getCurrentProduct()._id) : '';\r\n                        if (currentId && allowed.has(currentId)) return true;\r\n\r\n                        // If a variant from the allowed list is still possible given the selected parameters (excluding this param), show it\r\n                        const otherParams = { ...selectedParameters };\r\n                        delete otherParams[param.name];\r\n                        // Если другие параметры ещё не выбраны, изначально скрываем\r\n                        const hasAnyOther = Object.values(otherParams).some(v => v && v !== 'false' && String(v).trim() !== '');\r\n                        if (!hasAnyOther) return false;\r\n                        const matchesOtherParams = (variant) => {\r\n                          return Object.entries(otherParams).every(([k, v]) => {\r\n                            if (!v || v === 'false') return true;\r\n                            return normalize(variant.parameters[k]) === normalize(v);\r\n                          });\r\n                        };\r\n                        const hasCandidate = (productGroup.variants || []).some(v => {\r\n                          if (!v.isActive || !v.productId) return false;\r\n                          const vid = typeof v.productId === 'string' ? v.productId : (v.productId._id || v.productId);\r\n                          if (!vid) return false;\r\n                          if (!allowed.has(String(vid))) return false;\r\n                          return matchesOtherParams(v);\r\n                        });\r\n                        return hasCandidate;\r\n                      })\r\n                      .map((param, index) => {\r\n                      // Для чекбоксов проверяем, есть ли вариации с этим параметром\r\n                      if (param.type === 'checkbox' && !hasVariationsWithParameter(param.name)) {\r\n                        return null; // Не показываем чекбокс, если нет вариаций с этим параметром\r\n                      }\r\n                      \r\n                      // Для select и radio показываем все возможные значения, но недоступные отключаем\r\n                      const allValues = param.type === 'select' || param.type === 'radio'\r\n                        ? getAllValuesForParameter(param)\r\n                        : param.values;\r\n                      const availableValues = param.type === 'select' || param.type === 'radio' \r\n                        ? getAvailableValuesForParameter(param.name)\r\n                        : param.values;\r\n                      \r\n                      return (\r\n                        <div key={index} style={{ marginBottom: '2px' }}>\r\n                          <label style={{ \r\n                            display: 'block', \r\n                            marginBottom: '4px', \r\n                            fontWeight: '500',\r\n                            color: '#333'\r\n                          }}>\r\n                            {param.name}\r\n                            {param.required && <span style={{ color: '#e74c3c' }}> *</span>}\r\n                          </label>\r\n                          \r\n                          {param.type === 'select' && (\r\n                            <select\r\n                              value={selectedParameters[param.name] || ''}\r\n                              onChange={(e) => handleParameterChange(param.name, e.target.value)}\r\n                              required={param.required}\r\n                              style={{\r\n                                width: '100%',\r\n                                padding: '8px 12px',\r\n                                border: 'none',\r\n                                borderRadius: '4px',\r\n                                fontSize: '14px',\r\n                                background: 'transparent'\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Выберите {param.name.toLowerCase()}</option>\r\n                              {allValues.map((value, valueIndex) => (\r\n                                <option key={valueIndex} value={value} disabled={!availableValues.includes(value)}>\r\n                                  {value}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          )}\r\n                          \r\n                          {param.type === 'radio' && (\r\n                            <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\r\n                              {allValues.map((value, valueIndex) => (\r\n                                <label key={valueIndex} style={{ \r\n                                  display: 'flex', \r\n                                  alignItems: 'center', \r\n                                  cursor: 'pointer',\r\n                                  fontSize: '14px'\r\n                                }}>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    name={param.name}\r\n                                    value={value}\r\n                                    checked={selectedParameters[param.name] === value}\r\n                                    onChange={(e) => handleParameterChange(param.name, e.target.value)}\r\n                                    required={param.required}\r\n                                    style={{ marginRight: '6px' }}\r\n                                    disabled={!availableValues.includes(value)}\r\n                                  />\r\n                                  {value}\r\n                                </label>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                          \r\n                          {param.type === 'checkbox' && (\r\n                            <label style={{ \r\n                              display: 'flex', \r\n                              alignItems: 'center', \r\n                              cursor: 'pointer',\r\n                              fontSize: '14px'\r\n                            }}>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={selectedParameters[param.name] === 'true'}\r\n                                onChange={(e) => handleParameterChange(param.name, e.target.checked ? 'true' : 'false')}\r\n                                style={{ marginRight: '6px' }}\r\n                              />\r\n                              {param.name}\r\n                            </label>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n                {productGroup && productGroup.parameters.length > 0 && (\r\n                  <div className=\"product-divider\"></div>\r\n                )}\r\n\r\n                <div className=\"product-buy-row\">\r\n                  <div className=\"product-price-block\">\r\n                    <div className=\"product-price-label-value\">\r\n                      <div className=\"product-price-label\">Оптовая цена</div>\r\n                      <div className=\"product-price-value\">\r\n                        {formatTenge(getCurrentPrice())}\r\n                        <span className=\"product-currency\">₸</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {getCurrentProduct().article && (\r\n                      <div style={{\r\n                        fontSize: '0.85rem', \r\n                        color: '#666', \r\n                        marginTop: 6, \r\n                        textAlign: 'left',\r\n                        wordBreak: 'break-word',\r\n                        width: '140px',\r\n                        minWidth: '140px',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'flex-start'\r\n                      }}>\r\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\r\n                        <span style={{marginTop: 2}}>{getCurrentProduct().article}</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <span className=\"product-price-divider\"></span>\r\n                  <div className=\"product-buy-btns\">\r\n                    <button \r\n                      className=\"product-btn-ask\" \r\n                      onClick={() => {\r\n                        trackButtonClick('Задать вопрос', 'opt_product_page', id);\r\n                        handleOpenModal();\r\n                      }}\r\n                      data-analytics-context=\"opt_product_page\"\r\n                    >\r\n                      Запросить прайс\r\n                    </button>\r\n                    <div className=\"product-btns-divider\"></div>\r\n                    <button \r\n                      className=\"product-btn-buy\" \r\n                      onClick={handleBuy}\r\n                      data-analytics-context=\"opt_product_page\"\r\n                    >\r\n                      Заказать\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"product-divider\"></div>\r\n                 {siteSettings.productPageText && (\r\n                   <div className=\"product-page-text\" style={{\r\n                     fontSize: '1rem',\r\n                     color: '#222',\r\n                     marginBottom: 6,\r\n                     fontWeight: 500,\r\n                     marginTop: 12,\r\n                     lineHeight: 1.3,\r\n                     wordWrap: 'break-word',\r\n                     wordBreak: 'break-word',\r\n                     overflowWrap: 'break-word',\r\n                     whiteSpace: 'pre-wrap',\r\n                     maxWidth: '100%',\r\n                     width: '100%'\r\n                   }}>\r\n                     {siteSettings.productPageText}\r\n                   </div>\r\n                 )}\r\n                {/* Блок доставки скрыт по требованию */}\r\n              </>\r\n            </div>\r\n          </div>\r\n          {/* Вкладки снизу */}\r\n          <div className=\"product-tabs-wrap\">\r\n            <Tabs product={getCurrentProduct()} />\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* Мини-каталог популярных товаров */}\r\n      <section className=\"mini-catalog-section\">\r\n        <div className=\"mini-catalog-header\">\r\n          <h2>Популярные товары</h2>\r\n        </div>\r\n        <div className=\"mini-catalog-slider-wrapper\">\r\n          <div className=\"mini-catalog-slider\">\r\n            {/* Первый набор карточек */}\r\n            {miniProducts.map(product => (\r\n              <div\r\n                key={`first-${product._id}`}\r\n                className=\"product-card catalog-mini-product-card\"\r\n                onClick={() => window.location.href = `/opt/product/${product._id}`}\r\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\r\n              >\r\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                  <picture style={{width: '100%', height: '100%'}}>\r\n                    <source \r\n                      srcSet={getOptimalImage(product, 'thumb')} \r\n                      type=\"image/webp\"\r\n                    />\r\n                    <img \r\n                      src={getOptimalImage(product, 'thumb')} \r\n                      alt={product.name} \r\n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \r\n                      loading=\"lazy\"\r\n                      width=\"200\"\r\n                      height=\"120\"\r\n                    />\r\n                  </picture>\r\n                </div>\r\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto', alignSelf:'center'}}></div>\r\n                <div className=\"product-info\" style={{padding: '0 6px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0}}>\r\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: '0 0 2px 0', lineHeight: 1.15, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\r\n                  </div>\r\n                  </div>\r\n            ))}\r\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\r\n            {miniProducts.map(product => (\r\n              <div\r\n                key={`second-${product._id}`}\r\n                className=\"product-card catalog-mini-product-card\"\r\n                onClick={() => window.location.href = `/opt/product/${product._id}`}\r\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\r\n              >\r\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                  <picture style={{width: '100%', height: '100%'}}>\r\n                    <source \r\n                      srcSet={getOptimalImage(product, 'thumb')} \r\n                      type=\"image/webp\"\r\n                    />\r\n                    <img \r\n                      src={getOptimalImage(product, 'thumb')} \r\n                      alt={product.name} \r\n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \r\n                      loading=\"lazy\"\r\n                      width=\"200\"\r\n                      height=\"120\"\r\n                    />\r\n                  </picture>\r\n                </div>\r\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto', alignSelf:'center'}}></div>\r\n                <div className=\"product-info\" style={{padding: '0 6px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0}}>\r\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: '0 0 2px 0', lineHeight: 1.15, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} product={getCurrentProduct().name} />\r\n      {/* Модальное окно для увеличенного фото */}\r\n      {showImageModal && (\r\n        <div className=\"image-modal-overlay\" onClick={handleCloseImageModal}>\r\n          <div className=\"image-modal-content\" onClick={e=>e.stopPropagation()}>\r\n            <img \r\n              src={getAllImages()[activeImage]} \r\n              alt={getCurrentProduct().name} \r\n              className=\"image-modal-img\"\r\n              style={{objectFit:'contain'}}\r\n            />\r\n            {getAllImages().length > 1 && (\r\n              <>\r\n                <button \r\n                  onClick={handlePrevImage} \r\n                  className=\"image-modal-arrow left\"\r\n                >\r\n                  ‹\r\n                </button>\r\n                <button \r\n                  onClick={handleNextImage} \r\n                  className=\"image-modal-arrow right\"\r\n                >\r\n                  ›\r\n                </button>\r\n                <div style={{position:'absolute',bottom:'20px',left:'50%',transform:'translateX(-50%)',color:'#666',fontSize:'14px',background:'rgba(255,255,255,0.9)',padding:'4px 12px',borderRadius:'16px'}}>\r\n                  {activeImage + 1} из {getAllImages().length}\r\n                </div>\r\n              </>\r\n            )}\r\n            <button onClick={handleCloseImageModal} className=\"image-modal-close\">&times;</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Tabs({product}) {\r\n  const [tab,setTab]=React.useState('desc');\r\n  \r\n  // Функция для парсинга характеристик из строки\r\n  const parseCharacteristics = (characteristicsStr) => {\r\n    if (!characteristicsStr) return [];\r\n    \r\n    try {\r\n      // Пытаемся распарсить как JSON\r\n      return JSON.parse(characteristicsStr);\r\n    } catch {\r\n      // Если не JSON, разбиваем по строкам\r\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\r\n        const [name, value] = line.split(':').map(s => s.trim());\r\n        return { name, value };\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Функция для парсинга комплектации из строки\r\n  const parseEquipment = (equipmentStr) => {\r\n    if (!equipmentStr) return [];\r\n    \r\n    try {\r\n      // Пытаемся распарсить как JSON\r\n      return JSON.parse(equipmentStr);\r\n    } catch {\r\n      // Если не JSON, разбиваем по строкам или запятым\r\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\r\n    }\r\n  };\r\n  \r\n  const characteristics = parseCharacteristics(product.characteristics);\r\n  const equipment = parseEquipment(product.equipment);\r\n  return (\r\n    <div className=\"product-tabs\">\r\n      <div className=\"product-tabs-header\">\r\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\r\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\r\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\r\n        <button className={tab==='warranty'?'active':''} onClick={()=>setTab('warranty')}>Гарантия</button>\r\n      </div>\r\n      <div className=\"product-tabs-content\">\r\n        {tab==='desc' && (\r\n          <div className=\"product-desc-kaspi-block\">\r\n            {product.description ? (\r\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\r\n            ) : (\r\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {tab==='specs' && (\r\n          <div className=\"product-specs-kaspi-block\">\r\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\r\n            {characteristics.length > 0 ? (\r\n              <div className=\"product-specs-group\">\r\n                <div className=\"product-specs-flex-table\">\r\n                  {characteristics.map((spec, i) => (\r\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\r\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\r\n                      <span className=\"product-specs-flex-dots\"></span>\r\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {tab==='equip' && (\r\n          <div className=\"product-desc-kaspi-block\">\r\n            {equipment.length > 0 ? (\r\n              <ul style={{margin: 0, paddingLeft: 20}}>\r\n                {equipment.map((item, idx) => (\r\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {tab==='warranty' && (\r\n          <div className=\"product-desc-kaspi-block\">\r\n            <div className=\"warranty-content\">\r\n              <p style={{margin: '0 0 20px 0', lineHeight: '1.6', color: '#4b5563', fontSize: '1.05rem'}}>\r\n                Мы уверены в качестве каждого инструмента, который продаём. Поэтому предоставляем\r\n                официальную гарантию на 12 месяцев со дня покупки без скрытых условий и мелкого шрифта.\r\n                Если ваш электроинструмент перестал работать не по вашей вине, вы защищены: мы вернём деньги,\r\n                отремонтируем бесплатно или заменим на новый.\r\n              </p>\r\n              \r\n              <div className=\"warranty-divider\"></div>\r\n              \r\n              <div style={{marginBottom: '20px'}}>\r\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Что покрывает гарантия?</h4>\r\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  Гарантия распространяется на все случаи, когда неисправность возникла по вине производителя —\r\n                  из-за заводского брака или скрытых дефектов.\r\n                </p>\r\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  Она действует на протяжении всего года после покупки, включая 11-й и последний месяц. До\r\n                  последнего дня срока вы можете рассчитывать на нашу поддержку и полное выполнение\r\n                  обязательств.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"warranty-divider\"></div>\r\n\r\n              <div style={{marginBottom: '20px'}}>\r\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Условия гарантийного обслуживания</h4>\r\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  Чтобы воспользоваться гарантией, необходимо:\r\n                </p>\r\n                <ol style={{margin: '0 0 8px 0', paddingLeft: '20px', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  <li style={{marginBottom: '6px'}}>Сохранить товарный вид, комплектность и упаковку изделия.</li>\r\n                  <li style={{marginBottom: '6px'}}>Убедиться в отсутствии следов неправильной эксплуатации, падений или вскрытия корпуса.</li>\r\n                  <li style={{marginBottom: '6px'}}>Подтвердить, что неисправность возникла по причине заводского дефекта.</li>\r\n                  <li style={{marginBottom: '6px'}}>Иметь документ, подтверждающий покупку (чек или накладную).</li>\r\n                  <li style={{marginBottom: '6px'}}>Обратиться в течение 12 месяцев с момента покупки.</li>\r\n                </ol>\r\n              </div>\r\n\r\n              <div className=\"warranty-divider\"></div>\r\n\r\n              <div style={{marginBottom: '20px'}}>\r\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Порядок обращения по гарантии</h4>\r\n                <ol style={{margin: '0 0 8px 0', paddingLeft: '20px', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  <li style={{marginBottom: '6px'}}>Сообщите о неисправности любым удобным способом.</li>\r\n                  <li style={{marginBottom: '6px'}}>Мы проведём диагностику — по фото, видео или при осмотре изделия.</li>\r\n                  <li style={{marginBottom: '6px'}}>Если случай подтверждён как гарантийный, предоставляем одно из решений:</li>\r\n                </ol>\r\n                <ul style={{margin: '0 0 8px 0', paddingLeft: '40px', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  <li style={{marginBottom: '4px'}}>возврат денежных средств в полном объёме;</li>\r\n                  <li style={{marginBottom: '4px'}}>бесплатный ремонт в сервисном отделе;</li>\r\n                  <li style={{marginBottom: '4px'}}>замену товара на новый аналогичной модели.</li>\r\n                </ul>\r\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  Все процессы прозрачны и без лишней бюрократии — мы ценим ваше время и доверие.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"warranty-divider\"></div>\r\n\r\n              <div style={{marginBottom: '0'}}>\r\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Когда гарантия не действует</h4>\r\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  Гарантия не распространяется на:\r\n                </p>\r\n                <ul style={{margin: '0 0 0 0', paddingLeft: '20px', lineHeight: '1.6', color: '#4b5563'}}>\r\n                  <li style={{marginBottom: '6px'}}>механические повреждения, удары, падения, перегрузку или попадание влаги;</li>\r\n                  <li style={{marginBottom: '6px'}}>неисправности, возникшие из-за неправильного подключения или нарушения правил эксплуатации;</li>\r\n                  <li style={{marginBottom: '6px'}}>случаи самостоятельного вскрытия или ремонта;</li>\r\n                  <li style={{marginBottom: '6px'}}>естественный износ деталей и расходных материалов (щётки, кабели, патроны, аккумуляторы и т. д.).</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptProduct;\r\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { validateForm, sendToTelegram } from '../utils/telegram';\nimport { trackFormSubmit } from '../utils/analytics';\nimport '../styles/Modal.css';\n\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Очищаем ошибку при вводе\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: ''\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Валидация формы\n    const validation = validateForm(formData);\n    if (!validation.isValid) {\n      setErrors(validation.errors);\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Отправка в Telegram\n      const result = await sendToTelegram(formData, product);\n      \n      if (result.success) {\n        // Отслеживаем успешную отправку формы\n        trackFormSubmit('contact_form', product?.id || null);\n        onSubmit(formData);\n        setFormData({ name: '', phone: '', message: '' });\n        setErrors({});\n        onClose();\n        navigate('/thanks');\n      } else {\n        alert('Ошибка отправки заявки. Попробуйте позже.');\n      }\n    } catch (error) {\n      console.error('Ошибка отправки:', error);\n      alert('Ошибка отправки заявки. Попробуйте позже.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Оставить заявку</h3>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"modal-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Имя *</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className={errors.name ? 'error' : ''}\n            />\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Телефон *</label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              value={formData.phone}\n              onChange={handleChange}\n              className={errors.phone ? 'error' : ''}\n              placeholder=\"+7 (777) 777-77-77\"\n            />\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Сообщение</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              rows=\"4\"\n              placeholder=\"Опишите ваш запрос...\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn-submit\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal; ","// Утилита для отправки форм в Telegram\n\nexport const sendToTelegram = async (formData, product = null) => {\n  try {\n    // Определяем базовый URL API (локально шлём на порт сервера)\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\n    const API_BASE = 'https://electro-1-vjdu.onrender.com';\n\n    // Отправляем данные на наш API endpoint\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        phone: formData.phone,\n        message: formData.message,\n        product: product\n      })\n    });\n    \n    const result = await response.json();\n    \n    if (result.success) {\n      return { success: true, message: 'Заявка успешно отправлена!' };\n    } else {\n      console.error('Ошибка API:', result.error);\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\n    }\n    \n  } catch (error) {\n    console.error('Ошибка отправки в Telegram:', error);\n    return { success: false, message: 'Ошибка отправки заявки' };\n  }\n};\n\n// Функция для валидации формы\nexport const validateForm = (formData) => {\n  const errors = {};\n  \n  if (!formData.name.trim()) {\n    errors.name = 'Имя обязательно для заполнения';\n  }\n  \n  if (!formData.phone.trim()) {\n    errors.phone = 'Телефон обязателен для заполнения';\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\n    errors.phone = 'Введите корректный номер телефона';\n  }\n  \n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n}; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","fetchWithRetry","retries","backoffMs","timeoutMs","attempt","controller","AbortController","timeoutId","setTimeout","abort","_objectSpread","headers","signal","clearTimeout","Promise","r","pow","categories","id","name","Tabs","_ref5","product","tab","setTab","React","characteristics","characteristicsStr","parse","_unused","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","_unused2","parseEquipment","_jsxs","className","children","_jsx","onClick","description","dangerouslySetInnerHTML","__html","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","fontSize","fontWeight","OptProduct","slug","useParams","setProduct","useState","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","productPageText","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","selectedDelivery","isCityChanging","productGroup","setProductGroup","selectedVariant","setSelectedVariant","selectedParameters","setSelectedParameters","detectingCity","setDetectingCity","getAllImages","currentProduct","getCurrentProduct","images","image","push","Array","isArray","images2","images3","navigate","useNavigate","API_URL","useEffect","productData","find","p","trackProductView","_id","price","category","groupRes","_groupData$baseProduc","groupData","baseProductId","currentVariant","variants","v","productId","parameters","groupError","fetchProductAndGroup","then","res","information","catch","textAlign","Header","href","Footer","categoryObj","cat","categoryName","normalize","advantages","val","handleParameterChange","paramName","newParameters","filteredParameters","Object","entries","forEach","_ref","keys","matchingVariant","variant","isActive","every","_ref2","getCurrentPrice","handleCloseImageModal","shortDesc","getOptimalImage","preferredSize","coverImage","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","_Fragment","handleImageClick","cursor","src","alt","maxWidth","maxHeight","objectFit","img","width","height","wordBreak","marginTop","subtitle","param","_getCurrentProduct","toLowerCase","powerParam","regulatorParam","powerSelected","regulatorSelected","visibleByDefault","allowed","Set","visibleForProductIds","currentId","has","otherParams","values","some","vid","_ref4","k","index","type","allValues","add","from","getAllValuesForParameter","availableValues","_ref3","getAvailableValuesForParameter","required","onChange","e","target","border","borderRadius","background","valueIndex","disabled","checked","marginRight","article","minWidth","flexDirection","trackButtonClick","handleBuy","currentPrice","trackPurchaseStart","state","originalPrice","wordWrap","overflowWrap","whiteSpace","window","location","minHeight","position","fontFamily","justifyContent","srcSet","borderTop","alignSelf","textDecoration","Modal","isOpen","onClose","handleCloseModal","onSubmit","formData","stopPropagation","prev","newIndex","bottom","left","transform","setFormData","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","preventDefault","validation","isValid","validateForm","result","API_BASE","method","body","success","sendToTelegram","trackFormSubmit","alert","htmlFor","placeholder","rows"],"sourceRoot":""}