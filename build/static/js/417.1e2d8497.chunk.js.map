{"version":3,"file":"static/js/417.1e2d8497.chunk.js","mappings":"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","sources":["utils/cache.js","components/AboutCompanySection.js","pages/Home.js","components/Modal.js","utils/telegram.js"],"sourcesContent":["// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React from 'react';\r\nimport '../styles/AboutCompanySection.css';\r\n\r\nconst AboutCompanySection = () => (\r\n  <section className=\"about-company-section\">\r\n    <div className=\"about-company-container\">\r\n      <div className=\"about-company-content\">\r\n        <div className=\"about-company-header\">\r\n          <div className=\"header-line\"></div>\r\n          <h1 className=\"about-company-title\">Eltok.kz</h1>\r\n          <div className=\"header-line\"></div>\r\n        </div>\r\n        <div className=\"about-company-subtitle\">\r\n          Когда товар качественный,<br/>\r\n          не нужно объяснять цену\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default AboutCompanySection; ","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport AboutCompanySection from '../components/AboutCompanySection';\nimport { fetchWithCache } from '../utils/cache';\nimport '../styles/Home.css';\n\n// Удалён неиспользуемый fetchWithRetry\n\nconst Home = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [slideIndex, setSlideIndex] = useState(0);\n  const navigate = useNavigate();\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\n    if (product.productGroup && product.productGroup.coverImage) {\n      return product.productGroup.coverImage;\n    }\n    \n    // Затем проверяем обычные изображения товара\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  useEffect(() => {\n    fetchWithCache(API_URL, {}, 5 * 60 * 1000) // кэш на 5 минут, загружаем все товары\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Автопрокрутка каждые 10 секунд\n  useEffect(() => {\n    if (!miniProducts || miniProducts.length <= 8) return;\n    const totalSlides = Math.ceil(miniProducts.length / 8);\n    const id = setInterval(() => {\n      setSlideIndex(prev => (prev + 1) % totalSlides);\n    }, 10000);\n    return () => clearInterval(id);\n  }, [miniProducts]);\n\n  const totalSlides = Math.ceil(miniProducts.length / 8);\n  const nextSlide = () => setSlideIndex(prev => (prev + 1) % totalSlides);\n  const prevSlide = () => setSlideIndex(prev => (prev - 1 + totalSlides) % totalSlides);\n\n  const visibleProducts = miniProducts.slice(slideIndex * 8, slideIndex * 8 + 8);\n\n\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  // Функция для преобразования кириллического названия категории в латинский ID\n  const categoryToId = (categoryName) => {\n    const categoryMap = {\n      'дрели': 'drills',\n      'болгарки': 'bolgarki',\n      'шуруповёрты': 'screwdrivers',\n      'перфораторы': 'hammers',\n      'лобзики': 'jigsaws',\n      'лазерные уровни': 'levels',\n      'генераторы': 'generators',\n      'генераторы для дома': 'generators',\n      'дизельные генераторы': 'diesel-generators',\n      'дизельные генератор': 'diesel-generators',\n      'дизельный генератор': 'diesel-generators',\n      'аргонно-дуговая сварка': 'argon-arc-welding',\n      'бензиновый триммер': 'gasoline-trimmer',\n      'глубинный насос': 'deep-pump',\n      'отбойный молоток': 'jackhammer',\n      'плазморезы': 'plasma-cutter',\n      'редукционный клапан': 'reduction-valve',\n      'сварочный аппарат': 'welding',\n      'сварочный аппараты': 'welding',\n      'струйный насос': 'jet-pump',\n      'струйный самовсасывающий насос': 'jet-pump',\n      'точильный станок': 'bench-grinder',\n      'ударная дрель': 'impact-drill',\n      'фекальный насос': 'fecal-pump',\n      'периферийный насос': 'peripheral-pump',\n      'центробежный насос': 'centrifugal-pump',\n      'насосы': 'nasosy',\n      'насос': 'nasosy',\n      'измерители': 'measuring',\n      'дрель': 'drills',\n      'дрель-шуруповёрты': 'drills',\n      'дрели-шуруповёрты': 'drills',\n      'болгарка': 'bolgarki',\n      'шуруповёрт': 'screwdrivers',\n      'перфоратор': 'hammers',\n      'лобзик': 'jigsaws',\n      'лазерный уровень': 'levels',\n      'генератор': 'generators',\n      'измеритель': 'measuring',\n      // Новые категории\n      'гайковерт ударный': 'impact-wrench',\n      'кусторезы': 'hedge-trimmers',\n      'миксеры': 'mixers',\n      'наборный электроинструмент': 'power-tool-sets',\n      'ножовки': 'hacksaws',\n      'пила': 'saws',\n      'пила цепная': 'chainsaws',\n      'полировальные машины': 'polishing-machines',\n      'пчёлки': 'bees',\n      'сабельная пила': 'reciprocating-saws',\n      'секаторы': 'pruners',\n      'фрезер': 'routers',\n      'электрорубанок': 'electric-planers'\n    };\n    \n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\s+/g, ' ');\n    \n    // Сначала ищем точное совпадение\n    if (categoryMap[normalizedName]) {\n      return categoryMap[normalizedName];\n    }\n    \n    // Спец-правило: любые варианты с \"дизель\" + \"генератор\"\n    if (normalizedName.includes('дизель') && normalizedName.includes('генератор')) {\n      return 'diesel-generators';\n    }\n    \n    // Если точного совпадения нет, ищем по частичному совпадению, \n    // предпочитая более длинные (более специфичные) ключи\n    const entriesByLength = Object.entries(categoryMap).sort((a, b) => b[0].length - a[0].length);\n    for (const [key, value] of entriesByLength) {\n      if (normalizedName.includes(key)) {\n        return value;\n      }\n    }\n    \n    return normalizedName.replace(/[^a-z0-9]/g, '-');\n  };\n\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = () => {};\n  \n  // Функция для перехода в каталог с фильтром по категории товара\n  const handleProductClick = (product) => {\n    if (product.categorySlug) {\n      // Используем готовый categorySlug из MongoDB\n      console.log(`Home: product.categorySlug=\"${product.categorySlug}\"`);\n      navigate(`/catalog/${product.categorySlug}`);\n    } else if (product.category) {\n      // Fallback: используем старую логику\n      const categoryId = categoryToId(product.category.trim());\n      console.log(`Home: product.category=\"${product.category}\", categoryId=\"${categoryId}\"`);\n      navigate(`/catalog/${categoryId}`);\n    } else {\n      // Если категории нет, переходим в общий каталог\n      navigate('/catalog');\n    }\n  };\n\n  const advantages = [\n    'Только оригинальная продукция',\n    'Гарантия 12 месяцев на весь ассортимент',\n    'Консультация, сервис и постгарантийное обслуживание',\n    'Быстрая доставка по всему Казахстану',\n    'Работа с розничными и оптовыми клиентами'\n  ];\n\n  return (\n    <div className=\"home\">\n      <Header />\n      <section className=\"main-maket-section\">\n        <div className=\"main-maket-container\">\n          <div className=\"main-maket-left\">\n            <picture>\n              <source \n                srcSet=\"/images/hero/hero-main.webp\" \n                type=\"image/webp\"\n              />\n              <img \n                src=\"/images/hero/hero-main.jpg\" \n                alt=\"Электроинструменты для профессионалов\" \n                className=\"main-maket-image\" \n                fetchPriority=\"high\"\n                width=\"380\"\n                height=\"380\"\n                style={{width: '100%', height: 'auto', maxWidth: '380px'}}\n              />\n            </picture>\n          </div>\n          <div className=\"main-maket-right\">\n            <h1 className=\"main-maket-title\">Электроинструменты и оборудование</h1>\n            <div className=\"main-maket-subtitle\">Официальный поставщик электроинструментов и оборудования в Казахстане</div>\n            <div className=\"main-maket-text\">Мы предлагаем полный спектр продукции, востребованной в строительстве, ремонте, производстве, а также для дома и фермерских хозяйств. Наш каталог охватывает всё: от электроинструментов и оборудования до кабельной и электротехнической продукции.</div>\n            <ul className=\"main-maket-advantages\">\n              {advantages.map((adv, idx) => (\n                <li key={idx} className=\"main-maket-adv-item\">\n                  <span className=\"main-maket-arrow\">\n                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 9H15\" stroke=\"#FF6B00\" strokeWidth=\"2\" strokeLinecap=\"round\"/><path d=\"M11 5L15 9L11 13\" stroke=\"#FF6B00\" strokeWidth=\"2\" strokeLinecap=\"round\"/></svg>\n                  </span>\n                  <span>{adv}</span>\n                </li>\n              ))}\n            </ul>\n            <button className=\"main-maket-btn\" onClick={handleOpenModal}>Оставить заявку</button>\n          </div>\n        </div>\n      </section>\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Каталог товаров</h2>\n          <a href=\"/catalog\" className=\"mini-catalog-link\">Смотреть все</a>\n        </div>\n        <div style={{maxWidth: 1200, margin: '0 auto', width: '100%', position: 'relative'}}>\n           {/* Навигация по слайдам */}\n           {totalSlides > 1 && (\n            <>\n              <button aria-label=\"prev\" onClick={prevSlide} style={{position:'absolute',left:-40,top:'45%',transform:'translateY(-50%)',background:'#fff',border:'1px solid #e3e6ea',borderRadius:6,padding:'6px 10px',cursor:'pointer',zIndex:2}}>{'‹'}</button>\n              <button aria-label=\"next\" onClick={nextSlide} style={{position:'absolute',right:-40,top:'45%',transform:'translateY(-50%)',background:'#fff',border:'1px solid #e3e6ea',borderRadius:6,padding:'6px 10px',cursor:'pointer',zIndex:2}}>{'›'}</button>\n            </>\n          )}\n          <div className=\"home-products-grid\" style={{gap: 0, height: 'auto', minHeight: 'auto', maxHeight: 'none', alignItems: 'flex-start'}}>\n            {visibleProducts.map((product) => (\n              <div\n                key={product._id}\n                onClick={() => handleProductClick(product)}\n                style={{ textDecoration: 'none', color: 'inherit', cursor: 'pointer', height: 'auto', minHeight: 'auto', maxHeight: 'none', display: 'flex', flexDirection: 'column' }}\n              >\n                <div\n                  className=\"product-card kaspi-style mini-product-card\"\n                  style={{ cursor: 'pointer', height: 'auto', minHeight: 'auto', maxHeight: 'none', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', display: 'flex', flexDirection: 'column', flex: 'none', flexGrow: 0, flexShrink: 0 }}\n                >\n                  <div className=\"product-image\" style={{height: '170px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                    <picture style={{width: '100%', height: '100%'}}>\n                      <source \n                        srcSet={getOptimalImage(product, 'medium')} \n                        type=\"image/webp\"\n                      />\n                      <img \n                        src={getOptimalImage(product)} \n                        alt={product.name} \n                        style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                        loading=\"lazy\"\n                        width=\"260\"\n                        height=\"170\"\n                      />\n                    </picture>\n                  </div>\n                  <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 4px auto', alignSelf:'center'}}></div>\n                  <div className=\"product-info\" style={{padding: '2px 8px 18px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, flex: 'none', height: '60px', minHeight: '60px', maxHeight: '60px', margin: 0, border: 'none', background: '#fff'}}>\n                    <span style={{fontSize: '1.05rem', fontWeight: 500, color: '#1a2236', margin: '8px 0 0 0', padding: 0, lineHeight: 1.18, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%', minHeight: 'auto', maxHeight: 'none'}}>{product.name}</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <AboutCompanySection />\n      <Footer />\n      <Modal \n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        onSubmit={handleSubmitForm}\n      />\n    </div>\n  );\n};\n\nexport default Home; ","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { validateForm, sendToTelegram } from '../utils/telegram';\nimport { trackFormSubmit } from '../utils/analytics';\nimport '../styles/Modal.css';\n\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Очищаем ошибку при вводе\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: ''\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Валидация формы\n    const validation = validateForm(formData);\n    if (!validation.isValid) {\n      setErrors(validation.errors);\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Отправка в Telegram\n      const result = await sendToTelegram(formData, product);\n      \n      if (result.success) {\n        // Отслеживаем успешную отправку формы\n        trackFormSubmit('contact_form', product?.id || null);\n        onSubmit(formData);\n        setFormData({ name: '', phone: '', message: '' });\n        setErrors({});\n        onClose();\n        navigate('/thanks');\n      } else {\n        alert('Ошибка отправки заявки. Попробуйте позже.');\n      }\n    } catch (error) {\n      console.error('Ошибка отправки:', error);\n      alert('Ошибка отправки заявки. Попробуйте позже.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Оставить заявку</h3>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"modal-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Имя *</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className={errors.name ? 'error' : ''}\n            />\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Телефон *</label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              value={formData.phone}\n              onChange={handleChange}\n              className={errors.phone ? 'error' : ''}\n              placeholder=\"+7 (777) 777-77-77\"\n            />\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Сообщение</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              rows=\"4\"\n              placeholder=\"Опишите ваш запрос...\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn-submit\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal; ","// Утилита для отправки форм в Telegram\n\nexport const sendToTelegram = async (formData, product = null) => {\n  try {\n    // Определяем базовый URL API (локально шлём на порт сервера)\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\n    const API_BASE = 'https://electro-1-vjdu.onrender.com';\n\n    // Отправляем данные на наш API endpoint\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        phone: formData.phone,\n        message: formData.message,\n        product: product\n      })\n    });\n    \n    const result = await response.json();\n    \n    if (result.success) {\n      return { success: true, message: 'Заявка успешно отправлена!' };\n    } else {\n      console.error('Ошибка API:', result.error);\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\n    }\n    \n  } catch (error) {\n    console.error('Ошибка отправки в Telegram:', error);\n    return { success: false, message: 'Ошибка отправки заявки' };\n  }\n};\n\n// Функция для валидации формы\nexport const validateForm = (formData) => {\n  const errors = {};\n  \n  if (!formData.name.trim()) {\n    errors.name = 'Имя обязательно для заполнения';\n  }\n  \n  if (!formData.phone.trim()) {\n    errors.phone = 'Телефон обязателен для заполнения';\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\n    errors.phone = 'Введите корректный номер телефона';\n  }\n  \n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n}; "],"names":["apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","AboutCompanySection","_jsx","className","children","_jsxs","Home","isModalOpen","setIsModalOpen","useState","miniProducts","setMiniProducts","slideIndex","setSlideIndex","navigate","useNavigate","getOptimalImage","product","preferredSize","productGroup","coverImage","imageVariants","webp","image","useEffect","then","Array","isArray","totalSlides","Math","ceil","id","setInterval","prev","clearInterval","visibleProducts","slice","handleProductClick","categorySlug","category","categoryId","categoryName","categoryMap","normalizedName","toLowerCase","trim","replace","includes","entriesByLength","Object","entries","sort","a","b","value","categoryToId","Header","srcSet","type","src","alt","fetchPriority","width","height","style","maxWidth","map","adv","idx","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","onClick","handleOpenModal","href","margin","position","_Fragment","prevSlide","left","top","transform","background","border","borderRadius","padding","cursor","zIndex","nextSlide","right","gap","minHeight","maxHeight","alignItems","textDecoration","color","display","flexDirection","fontFamily","fontWeight","flex","flexGrow","flexShrink","justifyContent","name","objectFit","loading","borderTop","alignSelf","fontSize","lineHeight","textAlign","_id","Footer","Modal","isOpen","onClose","handleCloseModal","onSubmit","handleSubmitForm","_ref","formData","setFormData","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","target","_objectSpread","stopPropagation","preventDefault","validation","test","isValid","keys","validateForm","result","API_BASE","method","headers","body","success","sendToTelegram","trackFormSubmit","alert","htmlFor","onChange","placeholder","rows","disabled"],"sourceRoot":""}