{"version":3,"file":"static/js/417.03581cc9.chunk.js","mappings":"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","sources":["components/AboutCompanySection.js","pages/Home.js","components/Modal.js","utils/telegram.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/AboutCompanySection.css';\r\n\r\nconst AboutCompanySection = () => (\r\n  <section className=\"about-company-section\">\r\n    <div className=\"about-company-container\">\r\n      <div className=\"about-company-content\">\r\n        <div className=\"about-company-header\">\r\n          <div className=\"header-line\"></div>\r\n          <h1 className=\"about-company-title\">Tanker</h1>\r\n          <div className=\"header-line\"></div>\r\n        </div>\r\n        <div className=\"about-company-subtitle\">\r\n          инструмент, которому<br/>\r\n          доверяют мастера и<br/>\r\n          компании.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default AboutCompanySection; ","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport AboutCompanySection from '../components/AboutCompanySection';\nimport '../styles/Home.css';\n\n// Надёжный fetch с повторами и таймаутом\nconst fetchWithRetry = async (url, options = {}, retries = 2, backoffMs = 800, timeoutMs = 12000) => {\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: { 'Accept': 'application/json', ...(options.headers || {}) },\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (attempt === retries) throw error;\n      await new Promise(r => setTimeout(r, backoffMs * Math.pow(2, attempt)));\n    }\n  }\n};\n\nconst Home = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const navigate = useNavigate();\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  useEffect(() => {\n    fetchWithRetry(`${API_URL}?limit=8`)\n      .then(res => res.json())\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = () => {\n    alert('Спасибо! Ваша заявка отправлена. Мы свяжемся с вами в ближайшее время.');\n  };\n  \n  // Функция для перехода в каталог с фильтром по категории\n  const handleProductClick = (product) => {\n    if (product.category) {\n      // Переходим в каталог с фильтром по категории товара\n      navigate(`/catalog?category=${encodeURIComponent(product.category.trim())}`);\n    } else {\n      // Если категории нет, переходим в общий каталог\n      navigate('/catalog');\n    }\n  };\n\n  const advantages = [\n    'Работаем с розничными и оптовыми клиентами (B2B)',\n    'Полный пакет документов для тендеров и госзакупок',\n    'Гарантийное и постгарантийное обслуживание',\n    'Быстрая доставка по всему Казахстану'\n  ];\n\n  return (\n    <div className=\"home\">\n      <Header />\n      <section className=\"main-maket-section\">\n        <div className=\"main-maket-container\">\n          <div className=\"main-maket-left\">\n            <picture>\n              <source \n                srcSet=\"/images/hero/hero-main.webp\" \n                type=\"image/webp\"\n              />\n              <img \n                src=\"/images/hero/hero-main.jpg\" \n                alt=\"Электроинструменты для профессионалов\" \n                className=\"main-maket-image\" \n                fetchPriority=\"high\"\n                width=\"380\"\n                height=\"380\"\n                style={{width: '100%', height: 'auto', maxWidth: '380px'}}\n              />\n            </picture>\n          </div>\n          <div className=\"main-maket-right\">\n            <h1 className=\"main-maket-title\">Электроинструменты Tanker</h1>\n            <div className=\"main-maket-subtitle\">Продажа и доставка оригинального электроинструмента Tanker по выгодным ценам.</div>\n            <div className=\"main-maket-text\">Официальная продукция с гарантией 12 месяцев, консультации, поддержка, гибкие условия для оптовиков и компаний. Предлагаем полный спектр электроинструмента и аксессуаров, востребованных в строительстве, ремонте и производстве. Поставляем электроинструмент для частных клиентов, строительных организаций, снабженцев и тендерных закупок.</div>\n            <ul className=\"main-maket-advantages\">\n              {advantages.map((adv, idx) => (\n                <li key={idx} className=\"main-maket-adv-item\">\n                  <span className=\"main-maket-arrow\">\n                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 9H15\" stroke=\"#FF6B00\" strokeWidth=\"2\" strokeLinecap=\"round\"/><path d=\"M11 5L15 9L11 13\" stroke=\"#FF6B00\" strokeWidth=\"2\" strokeLinecap=\"round\"/></svg>\n                  </span>\n                  <span>{adv}</span>\n                </li>\n              ))}\n            </ul>\n            <button className=\"main-maket-btn\" onClick={handleOpenModal}>Оставить заявку</button>\n          </div>\n        </div>\n      </section>\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Каталог товаров</h2>\n          <a href=\"/catalog\" className=\"mini-catalog-link\">Смотреть все</a>\n        </div>\n        <div style={{maxWidth: 1200, margin: '0 auto', width: '100%'}}>\n          <div className=\"home-products-grid\" style={{gap: 0}}>\n            {miniProducts.map((product) => (\n              <div\n                key={product._id}\n                onClick={() => handleProductClick(product)}\n                style={{ textDecoration: 'none', color: 'inherit', cursor: 'pointer' }}\n              >\n                <div\n                  className=\"product-card kaspi-style mini-product-card\"\n                  style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff' }}\n                >\n                  <div className=\"product-image\" style={{height: '170px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                    <picture style={{width: '100%', height: '100%'}}>\n                      <source \n                        srcSet={getOptimalImage(product, 'medium')} \n                        type=\"image/webp\"\n                      />\n                      <img \n                        src={getOptimalImage(product)} \n                        alt={product.name} \n                        style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                        loading=\"lazy\"\n                        width=\"260\"\n                        height=\"170\"\n                      />\n                    </picture>\n                  </div>\n                  <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 4px auto', alignSelf:'center'}}></div>\n                  <div className=\"product-info\" style={{padding: '10px 12px 14px 12px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:100}}>\n                    <span style={{fontSize: '1.05rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '40px', lineHeight: 1.18, marginBottom: 8, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <AboutCompanySection />\n      <Footer />\n      <Modal \n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        onSubmit={handleSubmitForm}\n      />\n    </div>\n  );\n};\n\nexport default Home; ","import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport { trackFormSubmit } from '../utils/analytics';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData, product);\r\n      \r\n      if (result.success) {\r\n        // Отслеживаем успешную отправку формы\r\n        trackFormSubmit('contact_form', product?.id || null);\r\n        alert('Спасибо за вашу заявку! Менеджер обязательно ответит в течение 2 минут');\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n\r\nexport const sendToTelegram = async (formData, product = null) => {\r\n  try {\r\n    // Определяем базовый URL API (локально шлём на порт сервера)\r\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\r\n    const API_BASE = 'https://electro-1-vjdu.onrender.com';\r\n\r\n    // Отправляем данные на наш API endpoint\r\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: formData.name,\r\n        phone: formData.phone,\r\n        message: formData.message,\r\n        product: product\r\n      })\r\n    });\r\n    \r\n    const result = await response.json();\r\n    \r\n    if (result.success) {\r\n      return { success: true, message: 'Заявка успешно отправлена!' };\r\n    } else {\r\n      console.error('Ошибка API:', result.error);\r\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; "],"names":["AboutCompanySection","_jsx","className","children","_jsxs","Home","isModalOpen","setIsModalOpen","useState","miniProducts","setMiniProducts","navigate","useNavigate","getOptimalImage","product","preferredSize","arguments","length","undefined","imageVariants","webp","image","useEffect","async","url","options","retries","backoffMs","timeoutMs","attempt","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","_objectSpread","headers","signal","clearTimeout","ok","Error","concat","status","error","Promise","r","Math","pow","fetchWithRetry","then","res","json","data","Array","isArray","Header","srcSet","type","src","alt","fetchPriority","width","height","style","maxWidth","map","adv","idx","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","onClick","handleOpenModal","href","margin","gap","category","encodeURIComponent","trim","handleProductClick","textDecoration","color","cursor","minHeight","position","fontFamily","fontWeight","background","padding","display","alignItems","justifyContent","name","objectFit","loading","borderTop","alignSelf","flexDirection","fontSize","lineHeight","marginBottom","textAlign","_id","Footer","Modal","isOpen","onClose","handleCloseModal","onSubmit","handleSubmitForm","alert","_ref","formData","setFormData","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","value","target","stopPropagation","preventDefault","validation","test","isValid","Object","keys","validateForm","result","API_BASE","method","body","JSON","stringify","success","console","sendToTelegram","trackFormSubmit","id","htmlFor","onChange","placeholder","rows","disabled"],"sourceRoot":""}