{"version":3,"file":"static/js/820.8d10efce.chunk.js","mappings":"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","sources":["utils/price.js","components/Modal.js","utils/telegram.js","pages/Product.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[\\.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport { trackFormSubmit } from '../utils/analytics';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData, product);\r\n      \r\n      if (result.success) {\r\n        // Отслеживаем успешную отправку формы\r\n        trackFormSubmit('contact_form', product?.id || null);\r\n        alert('Спасибо за вашу заявку! Менеджер обязательно ответит в течение 2 минут');\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n\r\nexport const sendToTelegram = async (formData, product = null) => {\r\n  try {\r\n    // Определяем базовый URL API (локально шлём на порт сервера)\r\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\r\n    const API_BASE = 'https://electro-1-vjdu.onrender.com';\r\n\r\n    // Отправляем данные на наш API endpoint\r\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: formData.name,\r\n        phone: formData.phone,\r\n        message: formData.message,\r\n        product: product\r\n      })\r\n    });\r\n    \r\n    const result = await response.json();\r\n    \r\n    if (result.success) {\r\n      return { success: true, message: 'Заявка успешно отправлена!' };\r\n    } else {\r\n      console.error('Ошибка API:', result.error);\r\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport DeliveryInfo from '../components/DeliveryInfo';\nimport { trackProductView, trackButtonClick } from '../utils/analytics';\nimport '../styles/Product.css';\nimport '../styles/ProductVariations.css';\n\n// Надёжный fetch с повторами и таймаутом\nconst fetchWithRetry = async (url, options = {}, retries = 2, backoffMs = 800, timeoutMs = 12000) => {\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: { 'Accept': 'application/json', ...(options.headers || {}) },\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (attempt === retries) throw error;\n      await new Promise(r => setTimeout(r, backoffMs * Math.pow(2, attempt)));\n    }\n  }\n};\n\nconst categories = [\n  { id: 'grinders', name: 'Болгарки' },\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\n  { id: 'hammers', name: 'Перфораторы' },\n  { id: 'drills', name: 'Дрели' },\n  { id: 'jigsaws', name: 'Лобзики' },\n  { id: 'levels', name: 'Лазерные уровни' },\n  { id: 'generators', name: 'Генераторы' },\n  { id: 'measuring', name: 'Измерители' }\n];\n\nconst Product = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [siteSettings, setSiteSettings] = useState({\n    city: 'Алматы',\n    deliveryInfo: {\n      freeDelivery: 'Бесплатная доставка по городу',\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\n      pickupAddress: 'ул. Толе би 216Б',\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\n    }\n  });\n  \n  const [selectedCity, setSelectedCity] = useState(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    return savedCity || 'Алматы';\n  });\n  \n  const [selectedDelivery, setSelectedDelivery] = useState(null);\n  const [deliveryInfo, setDeliveryInfo] = useState(null);\n  const [isCityChanging, setIsCityChanging] = useState(false);\n  \n  // Состояние для вариаций товара\n  const [productGroup, setProductGroup] = useState(null);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n  const [selectedParameters, setSelectedParameters] = useState({});\n  \n\n  \n  const [detectingCity, setDetectingCity] = useState(false);\n  \n  // Функция для автоматического определения города\n  const detectUserCity = () => {\n    if (navigator.geolocation) {\n      setDetectingCity(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Используем обратное геокодирование для определения города\n          fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&addressdetails=1`)\n            .then(response => response.json())\n            .then(data => {\n              if (data.address && data.address.city) {\n                const detectedCity = data.address.city;\n                // Проверяем, есть ли этот город в нашем списке\n                if (cities.includes(detectedCity)) {\n                  setSelectedCity(detectedCity);\n                  localStorage.setItem('selectedCity', detectedCity);\n                }\n              }\n              setDetectingCity(false);\n            })\n            .catch(error => {\n              console.log('Ошибка определения города:', error);\n              setDetectingCity(false);\n            });\n        },\n        (error) => {\n          console.log('Ошибка получения геолокации:', error);\n          // Быстрый фолбэк на Алматы, чтобы не тормозить в регионах с ограничениями\n          if (!localStorage.getItem('selectedCity')) {\n            setSelectedCity('Алматы');\n            localStorage.setItem('selectedCity', 'Алматы');\n          }\n          setDetectingCity(false);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 3000,\n          maximumAge: 600000 // 10 минут\n        }\n      );\n    }\n  };\n  \n  // Список городов Казахстана\n  const cities = [\n    'Алматы',\n    'Астана',\n    'Шымкент',\n    'Актобе',\n    'Караганда',\n    'Тараз',\n    'Павлодар',\n    'Семей',\n    'Усть-Каменогорск',\n    'Уральск',\n    'Кызылорда',\n    'Костанай',\n    'Петропавловск',\n    'Атырау',\n    'Актау',\n    'Темиртау',\n    'Туркестан',\n    'Кокшетау',\n    'Талдыкорган',\n    'Экибастуз',\n    'Рудный',\n    'Жанаозен',\n    'Жезказган',\n    'Балхаш',\n    'Кентау',\n    'Сатпаев',\n    'Капчагай',\n    'Риддер',\n    'Степногорск',\n    'Аральск',\n    'Аркалык',\n    'Житикара',\n    'Кандыагаш',\n    'Лисаковск',\n    'Шахтинск',\n    'Абай',\n    'Аягоз',\n    'Зайсан',\n    'Курчатов',\n    'Приозерск',\n    'Серебрянск',\n    'Текели',\n    'Уштобе',\n    'Чарск',\n    'Шемонаиха',\n    'Щучинск'\n  ];\n  \n  // Объединяем все изображения из разных полей\n  const getAllImages = () => {\n    const currentProduct = getCurrentProduct();\n    const images = [];\n    \n    // Добавляем основное изображение из поля image (если есть)\n    if (currentProduct?.image) {\n      images.push(currentProduct.image);\n    }\n    \n    // Добавляем изображения из поля images\n    if (Array.isArray(currentProduct?.images)) {\n      images.push(...currentProduct.images);\n    }\n    \n    // Добавляем изображения из поля images2\n    if (Array.isArray(currentProduct?.images2)) {\n      images.push(...currentProduct.images2);\n    }\n    \n    // Добавляем изображения из поля images3\n    if (Array.isArray(currentProduct?.images3)) {\n      images.push(...currentProduct.images3);\n    }\n    \n    // Если нет изображений, добавляем placeholder\n    if (images.length === 0) {\n      images.push('/images/products/placeholder.png');\n    }\n    \n    return images;\n  };\n  \n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    const fetchProductAndGroup = async () => {\n      try {\n        // Загружаем товар\n        const productRes = await fetchWithRetry(`${API_URL}/${id}`);\n        const productData = await productRes.json();\n        \n        if (productData.error) {\n          setError(productData.error);\n          setProduct(null);\n          setLoading(false);\n          return;\n        }\n        \n        setProduct(productData);\n        \n        // Отслеживаем просмотр товара\n        trackProductView(id, productData.name);\n        \n        // Загружаем группу вариаций для этого товара\n        try {\n         const groupRes = await fetchWithRetry(`https://electro-1-vjdu.onrender.com/api/product-groups/by-product/${id}`);\n          if (groupRes.ok) {\n            const groupData = await groupRes.json();\n            setProductGroup(groupData);\n            \n             // Инициализация выбранной вариации\n            if (groupData.baseProductId?._id === id) {\n               // Открыли страницу базового товара\n               setSelectedVariant(null);\n               setSelectedParameters({});\n             } else {\n               // Открыли страницу вариации — находим её и выставляем параметры\n               const currentVariant = (groupData.variants || []).find(v => v.productId && (v.productId._id === id));\n               if (currentVariant) {\n                 setSelectedVariant(currentVariant);\n                 setSelectedParameters(currentVariant.parameters || {});\n               }\n            }\n          }\n        } catch (groupError) {\n          console.log('Группа вариаций не найдена для товара:', groupError);\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        setError('Ошибка загрузки товара');\n        setLoading(false);\n      }\n    };\n    \n    fetchProductAndGroup();\n  }, [id]);\n\n  useEffect(() => {\n    fetchWithRetry(`${API_URL}?limit=4`)\n      .then(res => res.json())\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Загружаем информацию сайта\n  useEffect(() => {\n   fetchWithRetry('https://electro-1-vjdu.onrender.com/api/information')\n      .then(res => res.json())\n      .then(data => {\n        if (data.information) {\n          setSiteSettings(data.information);\n        }\n      })\n      .catch(error => {\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\n      });\n  }, []);\n  \n  // Инициализируем выбранный город из localStorage и автоматически определяем город\n  useEffect(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    \n    // Если есть сохраненный город, используем его\n    if (savedCity) {\n      setSelectedCity(savedCity);\n    } else {\n      // Если нет сохраненного города, пытаемся определить автоматически\n      detectUserCity();\n    }\n  }, []);\n\n  // Сбрасываем активное изображение при смене товара\n  useEffect(() => {\n    setActiveImage(0);\n  }, [selectedVariant]);\n\n  if (loading) {\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\n  }\n  if (error || !product) {\n    return (\n      <div className=\"product\">\n        <Header />\n        <main className=\"product-main\">\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\n            <h1>Товар не найден</h1>\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/catalog\">каталог</a>.</p>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Найти категорию для хлебных крошек\n  const categoryObj = categories.find(cat => cat.id === product.category);\n  const categoryName = categoryObj ? categoryObj.name : '';\n\n  // Преимущества — если есть в product, иначе дефолтные\n  const productAdvantages = product.advantages || [\n    'Высокий крутящий момент и мощность',\n    'Долговечный литий-ионный аккумулятор',\n    'Компактный и лёгкий корпус для работы одной рукой'\n  ];\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = (formData) => {\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\n    alert('Спасибо! Ваша заявка отправлена. Мы свяжемся с вами в ближайшее время.');\n  };\n\n  const handleBuy = () => {\n    const currentProduct = getCurrentProduct();\n    const currentPrice = getCurrentPrice();\n    \n    navigate('/checkout', { \n      state: { \n        product: currentProduct,\n        selectedVariant,\n        selectedParameters,\n        originalPrice: product.price,\n        currentPrice\n      } \n    });\n  };\n\n  // Функции для работы с вариациями\n  const normalize = (val) => {\n    if (val === undefined || val === null) return '';\n    return String(val).trim();\n  };\n\n  const handleParameterChange = (paramName, value) => {\n    const newParameters = { ...selectedParameters, [paramName]: value };\n    setSelectedParameters(newParameters);\n    \n    // Находим подходящую вариацию\n    if (productGroup) {\n      // Удаляем параметр из поиска, если значение пустое или false\n      const filteredParameters = {};\n      Object.entries(newParameters).forEach(([key, val]) => {\n        if (val && val !== 'false') {\n          filteredParameters[key] = val;\n        }\n      });\n      \n      // Если нет выбранных параметров, сбрасываем на базовый товар\n      if (Object.keys(filteredParameters).length === 0) {\n        setSelectedVariant(null);\n        return;\n      }\n      \n      // Ищем вариацию с точным совпадением всех параметров\n      let matchingVariant = productGroup.variants.find(variant => {\n        if (!variant.isActive) return false;\n        \n        // Проверяем, что все выбранные параметры совпадают\n        return Object.entries(filteredParameters).every(([key, val]) => {\n          return normalize(variant.parameters[key]) === normalize(val);\n        });\n      });\n      \n      if (matchingVariant) {\n        setSelectedVariant(matchingVariant);\n      } else {\n        // Нет точной комбинации — не подставляем другой товар\n        setSelectedVariant(null);\n      }\n    }\n  };\n\n  // Получаем текущий товар для отображения (с учетом выбранной вариации)\n  const getCurrentProduct = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      // Убеждаемся, что у нас есть полная информация о товаре\n      return selectedVariant.productId;\n    }\n    return product;\n  };\n\n  // Получаем текущую цену\n  const getCurrentPrice = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      return selectedVariant.productId.price;\n    }\n    return product?.price;\n  };\n\n  // Проверяем, есть ли вариации с определенным параметром\n  const hasVariationsWithParameter = (paramName) => {\n    if (!productGroup) return false;\n    return productGroup.variants.some(variant => \n      variant.isActive && variant.parameters[paramName]\n    );\n  };\n\n  // Получаем доступные значения для параметра\n  const getAvailableValuesForParameter = (paramName) => {\n    if (!productGroup) return [];\n    // Учитываем другие выбранные параметры, чтобы не предлагать невозможные комбинации\n    const otherParams = { ...selectedParameters };\n    delete otherParams[paramName];\n    const values = new Set();\n    productGroup.variants.forEach(variant => {\n      if (!variant.isActive) return;\n      // Совпадает ли вариант по всем другим выбранным параметрам?\n      const matchesOthers = Object.entries(otherParams).every(([k, v]) => {\n        if (!v || v === 'false') return true;\n        return normalize(variant.parameters[k]) === normalize(v);\n      });\n      if (!matchesOthers) return;\n      const val = variant.parameters[paramName];\n      if (val) values.add(val);\n    });\n    return Array.from(values);\n  };\n\n  // Все возможные значения параметра (без учёта выбранных других параметров)\n  const getAllValuesForParameter = (param) => {\n    if (Array.isArray(param.values) && param.values.length > 0) return param.values;\n    if (!productGroup) return [];\n    const values = new Set();\n    productGroup.variants.forEach(variant => {\n      const val = variant.parameters[param.name];\n      if (val) values.add(val);\n    });\n    return Array.from(values);\n  };\n\n  // Модалка фото\n  const handleImageClick = () => setShowImageModal(true);\n  const handleCloseImageModal = () => setShowImageModal(false);\n  const handlePrevImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev - 1 + images.length) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  const handleNextImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev + 1) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  \n  const handleCityChange = (e) => {\n    const newCity = e.target.value;\n    setIsCityChanging(true);\n    setSelectedCity(newCity);\n    localStorage.setItem('selectedCity', newCity);\n    // Сбрасываем выбранную доставку при смене города\n    setSelectedDelivery(null);\n    // Загружаем информацию о доставке для нового города\n    fetchDeliveryInfo(newCity);\n    \n    // Убираем анимацию через 500мс\n    setTimeout(() => {\n      setIsCityChanging(false);\n    }, 500);\n  };\n\n  const fetchDeliveryInfo = async (cityName) => {\n    try {\n      const response = await fetch(`https://electro-1-vjdu.onrender.com/api/pickup-points/delivery/${encodeURIComponent(cityName)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setDeliveryInfo(data);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки информации о доставке:', error);\n    }\n  };\n  \n\n\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  return (\n    <div className=\"product-page\">\n      <Header />\n      <main className=\"product-main\">\n        <div className=\"product-container\">\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n            <a href=\"/\">Главная</a>\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <a href=\"/catalog\">Каталог</a>\n            {categoryName && (\n              <>\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                <a href={`/catalog?category=${product.category}`}>{categoryName}</a>\n              </>\n            )}\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <span style={{color:'#1a2236', fontWeight:500}}>{product.name}</span>\n          </nav>\n          <div className=\"product-flex\">\n            {/* Фото и миниатюры */}\n            <div className=\"product-gallery\">\n              <div className=\"product-gallery-inner\">\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\n                  <img \n                    src={getAllImages()[activeImage]} \n                    alt={product.name} \n                    loading=\"lazy\"\n                    width=\"400\"\n                    height=\"400\"\n                    style={{width: '100%', height: 'auto', maxWidth: '400px'}}\n                  />\n                </div>\n                {getAllImages().length > 1 && (\n                  <>\n                    <div className=\"product-thumbs\">\n                      {getAllImages().map((img, idx) => (\n                        <img \n                          key={idx} \n                          src={img} \n                          alt={product.name + idx} \n                          className={activeImage === idx ? \"active\" : \"\"} \n                          onClick={() => setActiveImage(idx)} \n                          loading=\"lazy\"\n                          width=\"80\"\n                          height=\"80\"\n                        />\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Инфо и цена справа */}\n            <div className=\"product-info-block\">\n              <>\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 6, wordBreak: 'break-word', marginTop: 28, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 8, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\n                <div className=\"product-divider\"></div>\n                {/* Компонент выбора вариаций */}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-variations\" style={{\n                    marginBottom: '20px'\n                  }}>\n                    {productGroup.parameters\n                      .filter(param => {\n                        const visibleByDefault = param.visibleByDefault !== false;\n                        if (visibleByDefault) return true;\n\n                        const allowed = new Set((Array.isArray(param.visibleForProductIds) ? param.visibleForProductIds : []).map(String));\n                        if (allowed.size === 0) return false;\n\n                        const currentId = getCurrentProduct()?._id ? String(getCurrentProduct()._id) : '';\n                        if (currentId && allowed.has(currentId)) return true;\n\n                        // If a variant from the allowed list is still possible given the selected parameters (excluding this param), show it\n                        const otherParams = { ...selectedParameters };\n                        delete otherParams[param.name];\n                        const matchesOtherParams = (variant) => {\n                          return Object.entries(otherParams).every(([k, v]) => {\n                            if (!v || v === 'false') return true;\n                            return normalize(variant.parameters[k]) === normalize(v);\n                          });\n                        };\n                        const hasCandidate = (productGroup.variants || []).some(v => {\n                          if (!v.isActive || !v.productId) return false;\n                          const vid = typeof v.productId === 'string' ? v.productId : (v.productId._id || v.productId);\n                          if (!vid) return false;\n                          if (!allowed.has(String(vid))) return false;\n                          return matchesOtherParams(v);\n                        });\n                        return hasCandidate;\n                      })\n                      .map((param, index) => {\n                      // Для чекбоксов проверяем, есть ли вариации с этим параметром\n                      if (param.type === 'checkbox' && !hasVariationsWithParameter(param.name)) {\n                        return null; // Не показываем чекбокс, если нет вариаций с этим параметром\n                      }\n                      \n                      // Для select и radio показываем все возможные значения, но недоступные отключаем\n                      const allValues = param.type === 'select' || param.type === 'radio'\n                        ? getAllValuesForParameter(param)\n                        : param.values;\n                      const availableValues = param.type === 'select' || param.type === 'radio' \n                        ? getAvailableValuesForParameter(param.name)\n                        : param.values;\n                      \n                      return (\n                        <div key={index} style={{ marginBottom: '15px' }}>\n                          <label style={{ \n                            display: 'block', \n                            marginBottom: '8px', \n                            fontWeight: '500',\n                            color: '#333'\n                          }}>\n                            {param.name}\n                            {param.required && <span style={{ color: '#e74c3c' }}> *</span>}\n                          </label>\n                          \n                          {param.type === 'select' && (\n                            <select\n                              value={selectedParameters[param.name] || ''}\n                              onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                              required={param.required}\n                              style={{\n                                width: '100%',\n                                padding: '8px 12px',\n                                border: 'none',\n                                borderRadius: '4px',\n                                fontSize: '14px',\n                                background: 'transparent'\n                              }}\n                            >\n                              <option value=\"\">Выберите {param.name.toLowerCase()}</option>\n                              {allValues.map((value, valueIndex) => (\n                                <option key={valueIndex} value={value} disabled={!availableValues.includes(value)}>\n                                  {value}\n                                </option>\n                              ))}\n                            </select>\n                          )}\n                          \n                          {param.type === 'radio' && (\n                            <div style={{ display: 'flex', gap: '15px', flexWrap: 'wrap' }}>\n                              {allValues.map((value, valueIndex) => (\n                                <label key={valueIndex} style={{ \n                                  display: 'flex', \n                                  alignItems: 'center', \n                                  cursor: 'pointer',\n                                  fontSize: '14px'\n                                }}>\n                                  <input\n                                    type=\"radio\"\n                                    name={param.name}\n                                    value={value}\n                                    checked={selectedParameters[param.name] === value}\n                                    onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                                    required={param.required}\n                                    style={{ marginRight: '6px' }}\n                                    disabled={!availableValues.includes(value)}\n                                  />\n                                  {value}\n                                </label>\n                              ))}\n                            </div>\n                          )}\n                          \n                          {param.type === 'checkbox' && (\n                            <label style={{ \n                              display: 'flex', \n                              alignItems: 'center', \n                              cursor: 'pointer',\n                              fontSize: '14px'\n                            }}>\n                              <input\n                                type=\"checkbox\"\n                                checked={selectedParameters[param.name] === 'true'}\n                                onChange={(e) => handleParameterChange(param.name, e.target.checked ? 'true' : 'false')}\n                                style={{ marginRight: '6px' }}\n                              />\n                              {param.name}\n                            </label>\n                          )}\n                        </div>\n                      );\n                    })}\n                    \n\n                  </div>\n                )}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-divider\"></div>\n                )}\n\n                <div className=\"product-buy-row\">\n                  <div className=\"product-price-block\">\n                    <div className=\"product-price-label-value\">\n                      <div className=\"product-price-label\">Цена</div>\n                      <div className=\"product-price-value\">\n                        {formatTenge(getCurrentPrice())}\n                        <span className=\"product-currency\">₸</span>\n                      </div>\n                    </div>\n\n                    {getCurrentProduct().article && (\n                      <div style={{\n                        fontSize: '0.85rem', \n                        color: '#666', \n                        marginTop: 6, \n                        textAlign: 'left',\n                        wordBreak: 'break-word',\n                        width: '140px',\n                        minWidth: '140px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start'\n                      }}>\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\n                        <span style={{marginTop: 2}}>{getCurrentProduct().article}</span>\n                      </div>\n                    )}\n                  </div>\n                  <span className=\"product-price-divider\"></span>\n                  <div className=\"product-buy-btns\">\n                    <button \n                      className=\"product-btn-ask\" \n                      onClick={() => {\n                        trackButtonClick('Задать вопрос', 'product_page', id);\n                        handleOpenModal();\n                      }}\n                      data-analytics-context=\"product_page\"\n                    >\n                      Задать вопрос\n                    </button>\n                    <div className=\"product-btns-divider\"></div>\n                    <button \n                      className=\"product-btn-buy\" \n                      onClick={() => {\n                        trackButtonClick('Купить', 'product_page', id);\n                        handleBuy();\n                      }}\n                      data-analytics-context=\"product_page\"\n                    >\n                      Купить\n                    </button>\n                  </div>\n                </div>\n                <div className=\"product-divider\"></div>\n                <div style={{\n                  marginTop: 14, \n                  background: '#fff', \n                  border: 'none',\n                  borderRadius: 8, \n                  padding: '10px 12px 8px 12px', \n                  fontSize: '0.98rem', \n                  color: '#222', \n                  boxShadow: 'none', \n                  maxWidth: 320,\n                  transition: 'all 0.3s ease',\n                  transform: isCityChanging ? 'scale(0.98)' : 'scale(1)',\n                  opacity: isCityChanging ? 0.8 : 1\n                }}>\n                  {/* Единый блок: выбор города + инфо по доставке */}\n                    <DeliveryInfo \n                      city={selectedCity} \n                    onCityChange={handleCityChange}\n                    cities={cities}\n                      onDeliverySelect={setSelectedDelivery}\n                      compact={true}\n                      selectedDelivery={selectedDelivery}\n                    />\n                  \n                  {false && selectedCity !== 'Алматы' && (\n                  <div style={{background:'#f0f1f4', borderRadius:7, padding:'7px 10px', marginTop:8, color:'#222', fontSize:'0.93rem', display:'flex', alignItems:'center', gap:6}}>\n                    <span style={{fontSize:15, color:'#888'}}>ⓘ</span>\n                    <span>\n                        {selectedDelivery \n                          ? `Доставка в ${selectedCity} через ${selectedDelivery.name.toLowerCase()}. ${selectedDelivery.type === 'pickup' ? 'Самовывоз из наших пунктов' : selectedDelivery.type === 'indriver' ? 'В течение дня' : selectedDelivery.type === 'yandex' ? '1-2 дня' : selectedDelivery.type === 'kazpost' ? '3-5 дней' : selectedDelivery.type === 'cdek' ? '1-2 дня' : selectedDelivery.type === 'air' ? '1-3 дня' : '1-3 дня'}.`\n                          : `Доставка в ${selectedCity} осуществляется через курьерские службы. Срок доставки 1-3 дня.`\n                      }\n                    </span>\n                  </div>\n                  )}\n                </div>\n              </>\n            </div>\n          </div>\n          {/* Вкладки снизу */}\n          <div className=\"product-tabs-wrap\">\n            <Tabs product={getCurrentProduct()} />\n                </div>\n            </div>\n      </main>\n      {/* Мини-каталог популярных товаров */}\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Популярные товары</h2>\n        </div>\n        <div className=\"mini-catalog-slider-wrapper\">\n          <div className=\"mini-catalog-slider\">\n            {/* Первый набор карточек */}\n            {miniProducts.map(product => (\n              <div\n                key={`first-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\n            {miniProducts.map(product => (\n              <div\n                key={`second-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} product={getCurrentProduct().name} />\n    {/* Модальное окно для увеличенного фото */}\n    {showImageModal && (\n      <div className=\"image-modal-overlay\" onClick={handleCloseImageModal} style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'rgba(0,0,0,0.55)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>\n        <div className=\"image-modal-content\" style={{background:'#fff',padding:0,borderRadius:'8px',boxShadow:'0 8px 32px rgba(0,0,0,0.18)',position:'relative',maxWidth:'90vw',maxHeight:'90vh',display:'flex',flexDirection:'column',alignItems:'center'}} onClick={e=>e.stopPropagation()}>\n          <img src={getAllImages()[activeImage]} alt={getCurrentProduct().name} style={{maxWidth:'80vw',maxHeight:'80vh',objectFit:'contain',background:'#fff'}} width=\"800\" height=\"600\" />\n          {getAllImages().length > 1 && (\n            <>\n              <button \n                onClick={handlePrevImage} \n                style={{\n                  position: 'absolute',\n                  left: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ‹\n              </button>\n              <button \n                onClick={handleNextImage} \n                style={{\n                  position: 'absolute',\n                  right: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ›\n              </button>\n              <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                <span style={{color:'#666', fontSize:'14px'}}>{activeImage + 1} из {getAllImages().length}</span>\n              </div>\n            </>\n          )}\n          <button onClick={handleCloseImageModal} style={{position:'absolute',top:8,right:12,fontSize:32,background:'none',border:'none',color:'#222',cursor:'pointer',lineHeight:1}}>&times;</button>\n        </div>\n      </div>\n    )}\n    </div>\n  );\n};\n\nfunction Tabs({product}) {\n  const [tab,setTab]=React.useState('desc');\n  \n  // Функция для парсинга характеристик из строки\n  const parseCharacteristics = (characteristicsStr) => {\n    if (!characteristicsStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(characteristicsStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\n        const [name, value] = line.split(':').map(s => s.trim());\n        return { name, value };\n      });\n    }\n  };\n  \n  // Функция для парсинга комплектации из строки\n  const parseEquipment = (equipmentStr) => {\n    if (!equipmentStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(equipmentStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам или запятым\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\n    }\n  };\n  \n  const characteristics = parseCharacteristics(product.characteristics);\n  const equipment = parseEquipment(product.equipment);\n  return (\n    <div className=\"product-tabs\">\n      <div className=\"product-tabs-header\">\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\n      </div>\n      <div className=\"product-tabs-content\">\n        {tab==='desc' && (\n          <div className=\"product-desc-kaspi-block\">\n            {product.description ? (\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='specs' && (\n          <div className=\"product-specs-kaspi-block\">\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\n            {characteristics.length > 0 ? (\n              <div className=\"product-specs-group\">\n                <div className=\"product-specs-flex-table\">\n                  {characteristics.map((spec, i) => (\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\n                      <span className=\"product-specs-flex-dots\"></span>\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\n            )}\n          </div>\n        )}\n        {tab==='equip' && (\n          <div className=\"product-desc-kaspi-block\">\n            {equipment.length > 0 ? (\n              <ul style={{margin: 0, paddingLeft: 20}}>\n                {equipment.map((item, idx) => (\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Product; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","_ref","isOpen","onClose","onSubmit","product","formData","setFormData","useState","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","target","_objectSpread","_jsx","className","onClick","children","_jsxs","stopPropagation","async","preventDefault","validation","isValid","Object","keys","length","validateForm","result","arguments","undefined","API_BASE","response","fetch","concat","method","headers","body","JSON","stringify","json","success","console","error","sendToTelegram","trackFormSubmit","id","alert","htmlFor","type","onChange","placeholder","rows","disabled","fetchWithRetry","url","options","retries","backoffMs","timeoutMs","attempt","controller","AbortController","timeoutId","setTimeout","abort","signal","clearTimeout","ok","Error","status","Promise","r","pow","categories","Tabs","_ref5","tab","setTab","React","characteristics","characteristicsStr","parse","_unused","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","_unused2","item","parseEquipment","description","dangerouslySetInnerHTML","__html","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","Product","useParams","setProduct","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","setSelectedCity","localStorage","getItem","selectedDelivery","setSelectedDelivery","setDeliveryInfo","isCityChanging","setIsCityChanging","productGroup","setProductGroup","selectedVariant","setSelectedVariant","selectedParameters","setSelectedParameters","detectingCity","setDetectingCity","cities","getAllImages","currentProduct","getCurrentProduct","images","image","push","Array","isArray","images2","images3","navigate","useNavigate","API_URL","useEffect","productRes","productData","trackProductView","groupRes","_groupData$baseProduc","groupData","baseProductId","_id","currentVariant","variants","find","v","productId","parameters","groupError","log","fetchProductAndGroup","then","res","data","information","catch","savedCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","address","detectedCity","setItem","enableHighAccuracy","timeout","maximumAge","textAlign","Header","href","Footer","categoryObj","cat","category","categoryName","normalize","advantages","val","handleParameterChange","paramName","newParameters","filteredParameters","entries","forEach","key","matchingVariant","variant","isActive","every","_ref2","getCurrentPrice","price","handleCloseImageModal","fetchDeliveryInfo","encodeURIComponent","cityName","shortDesc","getOptimalImage","preferredSize","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","fontSize","_Fragment","fontWeight","handleImageClick","cursor","src","alt","width","height","maxWidth","img","wordBreak","marginTop","subtitle","param","_getCurrentProduct","visibleByDefault","allowed","Set","visibleForProductIds","size","currentId","has","otherParams","some","vid","_ref4","k","index","allValues","values","add","from","getAllValuesForParameter","availableValues","_ref3","getAvailableValuesForParameter","required","border","borderRadius","background","toLowerCase","valueIndex","checked","marginRight","article","minWidth","flexDirection","trackButtonClick","handleBuy","currentPrice","state","originalPrice","boxShadow","transition","transform","opacity","DeliveryInfo","onCityChange","newCity","onDeliverySelect","compact","window","location","minHeight","fontFamily","justifyContent","srcSet","objectFit","borderTop","alignSelf","textDecoration","letterSpacing","verticalAlign","Modal","handleCloseModal","top","left","zIndex","maxHeight","prev","newIndex","right"],"sourceRoot":""}