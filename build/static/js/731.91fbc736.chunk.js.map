{"version":3,"file":"static/js/731.91fbc736.chunk.js","mappings":"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","sources":["utils/price.js","utils/cache.js","pages/Category.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[\\.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { formatTenge } from '../utils/price';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { trackPageView } from '../utils/analytics';\nimport { fetchWithCache } from '../utils/cache';\nimport '../styles/Catalog.css';\n\nconst Category = () => {\n  const { category } = useParams();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(24);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\n    if (product.productGroup && product.productGroup.coverImage) {\n      return product.productGroup.coverImage;\n    }\n    \n    // Затем проверяем обычные изображения товара\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  // Функция для преобразования кириллического названия категории в латинский ID\n  const categoryToId = (categoryName) => {\n    const categoryMap = {\n      'дрели': 'drills',\n      'болгарки': 'grinders',\n      'шуруповёрты': 'screwdrivers',\n      'перфораторы': 'hammers',\n      'лобзики': 'jigsaws',\n      'лазерные уровни': 'levels',\n      'генераторы': 'generators',\n      'измерители': 'measuring',\n      'дрель': 'drills',\n      'болгарка': 'grinders',\n      'шуруповёрт': 'screwdrivers',\n      'перфоратор': 'hammers',\n      'лобзик': 'jigsaws',\n      'лазерный уровень': 'levels',\n      'генератор': 'generators',\n      'измеритель': 'measuring'\n    };\n    \n    // Нормализуем название: убираем лишние пробелы, приводим к нижнему регистру\n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\s+/g, ' ');\n    \n    // Сначала ищем точное совпадение\n    if (categoryMap[normalizedName]) {\n      return categoryMap[normalizedName];\n    }\n    \n    // Если точного совпадения нет, ищем по частичному совпадению\n    for (const [key, value] of Object.entries(categoryMap)) {\n      if (normalizedName.includes(key) || key.includes(normalizedName)) {\n        return value;\n      }\n    }\n    \n    // Если ничего не найдено, создаем ID из названия\n    return normalizedName.replace(/[^a-z0-9]/g, '-');\n  };\n\n  // Функция для получения названия категории по ID\n  const idToCategory = (categoryId) => {\n    const idMap = {\n      'drills': 'Дрели',\n      'grinders': 'Болгарки',\n      'screwdrivers': 'Шуруповёрты',\n      'hammers': 'Перфораторы',\n      'jigsaws': 'Лобзики',\n      'levels': 'Лазерные уровни',\n      'генераторы': 'Генераторы',\n      'measuring': 'Измерители'\n    };\n    \n    // Если есть точное совпадение в маппинге, возвращаем его\n    if (idMap[categoryId]) {\n      return idMap[categoryId];\n    }\n    \n    // Если нет точного совпадения, ищем по частичному совпадению\n    const foundCategory = categories.find(cat => cat.id === categoryId);\n    if (foundCategory) {\n      return foundCategory.name;\n    }\n    \n    // Если ничего не найдено, возвращаем ID как есть\n    return categoryId;\n  };\n\n  // Статические категории для fallback\n  const staticCategories = [\n    { id: 'drills', name: 'Дрели' },\n    { id: 'grinders', name: 'Болгарки' },\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\n    { id: 'hammers', name: 'Перфораторы' },\n    { id: 'jigsaws', name: 'Лобзики' },\n    { id: 'levels', name: 'Лазерные уровни' },\n    { id: 'generators', name: 'Генераторы' },\n    { id: 'measuring', name: 'Измерители' }\n  ];\n\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  // Загрузка товаров с кэшированием\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    fetchWithCache(API_URL, {}, 10 * 60 * 1000) // Кэш на 10 минут\n      .then(data => {\n        setProducts(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Ошибка загрузки товаров');\n        setLoading(false);\n      });\n  }, []);\n\n  // Отслеживаем просмотр страницы категории\n  useEffect(() => {\n    trackPageView(`category_${category}`);\n  }, [category]);\n\n  // Извлечение категорий из товаров\n  useEffect(() => {\n    if (products.length > 0) {\n      setCategoriesLoading(true);\n      \n      // Извлекаем уникальные категории из товаров, нормализуем и сортируем их\n      const categoryMap = new Map();\n      \n      products.forEach(product => {\n        if (product.category) {\n          // Нормализуем название категории: убираем лишние пробелы и приводим к нижнему регистру\n          const normalizedCategory = product.category.trim().toLowerCase().replace(/\\s+/g, ' ');\n          const originalCategory = product.category.trim();\n          \n          // Если такой нормализованной категории еще нет, добавляем её\n          if (!categoryMap.has(normalizedCategory)) {\n            categoryMap.set(normalizedCategory, originalCategory);\n          }\n        }\n      });\n      \n      const uniqueCategories = Array.from(categoryMap.values()).sort();\n      \n      if (uniqueCategories.length > 0) {\n        const realCategories = uniqueCategories.map(category => ({\n          id: categoryToId(category),\n          name: category\n        }));\n        setCategories(realCategories);\n      } else {\n        setCategories(staticCategories);\n      }\n      setCategoriesLoading(false);\n    }\n  }, [products]);\n\n  // Принудительное применение стилей для карточек\n  useEffect(() => {\n    const forceStyles = () => {\n      const grid = document.querySelector('.catalog-products-grid');\n      const cards = document.querySelectorAll('.product-card');\n      const images = document.querySelectorAll('.product-image');\n      const infos = document.querySelectorAll('.product-info');\n      \n      if (grid) {\n        grid.style.display = 'grid';\n        grid.style.gap = '0';\n        grid.style.margin = '0';\n        grid.style.padding = '0';\n        grid.style.borderCollapse = 'collapse';\n        grid.style.borderSpacing = '0';\n      }\n      \n      cards.forEach(card => {\n        card.style.margin = '-1px';\n        card.style.border = '1px solid #e3e6ea';\n        card.style.borderRadius = '0';\n        card.style.padding = '0';\n        card.style.background = '#fff';\n        card.style.display = 'flex';\n        card.style.flexDirection = 'column';\n        card.style.height = '100%';\n        card.style.position = 'relative';\n        card.style.overflow = 'hidden';\n        card.style.boxSizing = 'border-box';\n        card.style.minHeight = 'auto';\n      });\n      \n      images.forEach(img => {\n        img.style.height = '160px';\n        img.style.padding = '0';\n        img.style.margin = '0';\n      });\n      \n      infos.forEach(info => {\n        info.style.padding = '6px';\n        info.style.minHeight = '80px';\n      });\n    };\n\n    // Применяем стили сразу и после загрузки\n    forceStyles();\n    setTimeout(forceStyles, 50);\n    setTimeout(forceStyles, 100);\n    setTimeout(forceStyles, 200);\n    setTimeout(forceStyles, 500);\n    setTimeout(forceStyles, 1000);\n\n    // Применяем стили при изменении размера окна\n    const handleResize = () => {\n      setTimeout(forceStyles, 100);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [products]);\n\n  // Фильтруем товары по категории\n  const filteredProducts = products.filter(product => {\n    if (!product.category) return false;\n    const productCategoryId = categoryToId(product.category.trim());\n    return productCategoryId === category;\n  });\n\n  // Пагинация\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n\n  // Сброс на первую страницу при смене категории\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [category]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Получаем название категории для отображения\n  const getCategoryDisplayName = () => {\n    return idToCategory(category);\n  };\n\n  return (\n    <div className=\"catalog\">\n      <Header />\n      <main className=\"catalog-main\">\n        <div className=\"container catalog-layout\">\n          <aside className=\"catalog-sidebar desktop-sidebar\">\n            <h3 className=\"sidebar-title\">Категории</h3>\n            {categoriesLoading ? (\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                Загрузка категорий...\n              </div>\n            ) : (\n              <ul className=\"sidebar-categories\">\n                {categories.map(cat => (\n                  <li key={cat.id}>\n                    <Link\n                      to={`/catalog/${cat.id}`}\n                      className={`sidebar-category-btn${cat.id === category ? ' active' : ''}`}\n                      style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\n                    >\n                      {cat.name}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </aside>\n          <div className=\"catalog-content\">\n            <h1 className=\"catalog-title\" style={{textAlign: 'left', marginLeft: 0}}>\n              {categoriesLoading \n                ? 'Каталог товаров' \n                : getCategoryDisplayName()\n              }\n            </h1>\n            {loading ? (\n              <div style={{padding: 32}}>Загрузка...</div>\n            ) : error ? (\n              <div style={{color: 'red', padding: 32}}>{error}</div>\n            ) : filteredProducts.length === 0 ? (\n              <div style={{padding: 32, textAlign: 'center', color: '#666'}}>\n                <h2>Товары не найдены</h2>\n                <p>В данной категории пока нет товаров.</p>\n                <Link to=\"/catalog\" style={{ color: '#007bff', textDecoration: 'none' }}>\n                  ← Вернуться в каталог\n                </Link>\n          </div>\n            ) : (\n              <div className=\"catalog-products-grid\" style={{gap: 0}}>\n                {currentProducts.map(product => (\n                  <Link\n                    to={`/product/${product._id}`}\n                    key={product._id}\n                    style={{ textDecoration: 'none', color: 'inherit' }}\n                  >\n                    <div\n                      className=\"product-card kaspi-style mini-product-card\"\n                      style={{ cursor: 'pointer', minHeight: 'auto', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', border: '1px solid #e3e6ea', margin: '-1px' }}\n                    >\n                      <div className=\"product-image\" style={{height: '160px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                        <picture style={{width: '100%', height: '100%'}}>\n                          <source \n                            srcSet={getOptimalImage(product, 'webp')} \n                            type=\"image/webp\"\n                          />\n                          <img \n                            src={getOptimalImage(product, 'medium')} \n                            alt={product.name} \n                            style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                            loading=\"lazy\"\n                            width=\"260\"\n                            height=\"160\"\n                          />\n                        </picture>\n          </div>\n                      <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 8px auto', alignSelf:'center'}}></div>\n                      <div className=\"product-info\" style={{padding: '6px 8px 3px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight: '80px'}}>\n                        <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '20px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                        <div style={{width:'100%', textAlign:'left', margin:'0 0 2px 0'}}>\n                          <span style={{color:'#888', fontSize:'0.98rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                        <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:2, justifyContent:'flex-start', width:'100%'}}>\n                          <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1.25rem',letterSpacing:0.5}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                          <span style={{height:'2.7em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 7px',verticalAlign:'middle'}}></span>\n                    </div>\n                  </div>\n                </div>\n                  </Link>\n              ))}\n            </div>\n            )}\n            \n            {/* Пагинация */}\n            {totalPages > 1 && (\n              <div className=\"pagination-container\" style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginTop: '40px',\n                marginBottom: '20px',\n                gap: '8px'\n              }}>\n                {/* Кнопка \"Предыдущая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === 1 ? '#f5f5f5' : '#fff',\n                    color: currentPage === 1 ? '#999' : '#333',\n                    cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  ← Назад\n                </button>\n                \n                {/* Номера страниц */}\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => {\n                  // Показываем только первые 5 страниц, последние 5 и текущую с соседними\n                  if (\n                    pageNumber === 1 ||\n                    pageNumber === totalPages ||\n                    (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\n                  ) {\n                    return (\n                      <button\n                        key={pageNumber}\n                        onClick={() => handlePageChange(pageNumber)}\n                        style={{\n                          padding: '8px 12px',\n                          border: '1px solid #e3e6ea',\n                          background: currentPage === pageNumber ? '#e86c0a' : '#fff',\n                          color: currentPage === pageNumber ? '#fff' : '#333',\n                          cursor: 'pointer',\n                          borderRadius: '4px',\n                          fontSize: '14px',\n                          fontWeight: '500',\n                          minWidth: '40px'\n                        }}\n                      >\n                        {pageNumber}\n                      </button>\n                    );\n                  } else if (\n                    pageNumber === currentPage - 2 ||\n                    pageNumber === currentPage + 2\n                  ) {\n                    return (\n                      <span\n                        key={pageNumber}\n                        style={{\n                          padding: '8px 4px',\n                          color: '#999',\n                          fontSize: '14px'\n                        }}\n                      >\n                        ...\n                      </span>\n                    );\n                  }\n                  return null;\n                })}\n                \n                {/* Кнопка \"Следующая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === totalPages ? '#f5f5f5' : '#fff',\n                    color: currentPage === totalPages ? '#999' : '#333',\n                    cursor: currentPage === totalPages ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  Вперед →\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Category; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","Category","category","useParams","products","setProducts","useState","loading","setLoading","setError","currentPage","setCurrentPage","productsPerPage","categories","setCategories","categoriesLoading","setCategoriesLoading","getOptimalImage","product","preferredSize","productGroup","coverImage","imageVariants","webp","image","categoryToId","categoryName","categoryMap","normalizedName","toLowerCase","Object","entries","staticCategories","id","name","useEffect","then","catch","err","trackPageView","forEach","normalizedCategory","originalCategory","has","uniqueCategories","Array","from","values","sort","realCategories","map","forceStyles","grid","document","querySelector","cards","querySelectorAll","images","infos","style","display","gap","margin","padding","borderCollapse","borderSpacing","card","border","borderRadius","background","flexDirection","height","position","overflow","boxSizing","minHeight","img","info","setTimeout","handleResize","window","addEventListener","removeEventListener","filteredProducts","filter","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","ceil","handlePageChange","pageNumber","scrollTo","top","behavior","_jsxs","className","children","_jsx","Header","textAlign","color","cat","Link","to","textDecoration","width","marginLeft","categoryId","idMap","foundCategory","find","idToCategory","_id","cursor","fontFamily","fontWeight","alignItems","justifyContent","srcSet","type","src","alt","objectFit","maxWidth","borderTop","alignSelf","fontSize","lineHeight","marginBottom","letterSpacing","marginTop","price","verticalAlign","onClick","disabled","_","index","minWidth","Footer"],"sourceRoot":""}