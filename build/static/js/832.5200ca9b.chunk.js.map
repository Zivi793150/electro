{"version":3,"file":"static/js/832.5200ca9b.chunk.js","mappings":"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","sources":["utils/cache.js","pages/Catalog.js"],"sourcesContent":["// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { trackPageView } from '../utils/analytics';\nimport { fetchWithCache } from '../utils/cache';\nimport '../styles/Catalog.css';\nimport { Link, useLocation } from 'react-router-dom';\n\n// fetchWithRetry не используется — удалено для тишины линтера\n\nconst Catalog = () => {\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\n    if (product.productGroup && product.productGroup.coverImage) {\n      return product.productGroup.coverImage;\n    }\n    \n    // Затем проверяем coverPhoto или обычное фото\n    const mainImage = product.coverPhoto || product.image;\n    \n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return mainImage || '/images/products/placeholder.png';\n  };\n\n  // Функция для преобразования кириллического названия категории в латинский ID\n  const categoryToId = (categoryName) => {\n    const categoryMap = {\n      'дрели': 'drills',\n      'болгарки': 'bolgarki',\n      'шуруповёрты': 'screwdrivers',\n      'перфораторы': 'hammers',\n      'лобзики': 'jigsaws',\n      'лазерные уровни': 'levels',\n      'генераторы': 'generators',\n      'генераторы для дома': 'generators',\n      'дизельные генераторы': 'diesel-generators',\n      'дизельные генератор': 'diesel-generators',\n      'дизельный генератор': 'diesel-generators',\n      'аргонно-дуговая сварка': 'argon-arc-welding',\n      'бензиновый триммер': 'gasoline-trimmer',\n      'глубинный насос': 'deep-pump',\n      'отбойный молоток': 'jackhammer',\n      'плазморезы': 'plasma-cutter',\n      'редукционный клапан': 'reduction-valve',\n      'сварочный аппарат': 'welding',\n      'сварочный аппараты': 'welding',\n      'струйный насос': 'jet-pump',\n      'струйный самовсасывающий насос': 'jet-pump',\n      'точильный станок': 'bench-grinder',\n      'ударная дрель': 'impact-drill',\n      'фекальный насос': 'fecal-pump',\n      'периферийный насос': 'peripheral-pump',\n      'центробежный насос': 'centrifugal-pump',\n      'насосы': 'nasosy',\n      'насос': 'nasosy',\n      'измерители': 'measuring',\n      'дрель': 'drills',\n      'дрель-шуруповёрты': 'drills',\n      'дрели-шуруповёрты': 'drills',\n      'болгарка': 'bolgarki',\n      'шуруповёрт': 'screwdrivers',\n      'перфоратор': 'hammers',\n      'лобзик': 'jigsaws',\n      'лазерный уровень': 'levels',\n      'генератор': 'generators',\n      'измеритель': 'measuring',\n      // Новые категории\n      'гайковерт ударный': 'impact-wrench',\n      'кусторезы': 'hedge-trimmers',\n      'миксеры': 'mixers',\n      'наборный электроинструмент': 'power-tool-sets',\n      'ножовки': 'hacksaws',\n      'пила': 'saws',\n      'пила цепная': 'chainsaws',\n      'полировальные машины': 'polishing-machines',\n      'пчёлки': 'bees',\n      'сабельная пила': 'reciprocating-saws',\n      'секаторы': 'pruners',\n      'фрезер': 'routers',\n      'электрорубанок': 'electric-planers'\n    };\n    \n    // Нормализуем название: убираем лишние пробелы, приводим к нижнему регистру\n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\s+/g, ' ');\n    \n    // Сначала ищем точное совпадение\n    if (categoryMap[normalizedName]) {\n      return categoryMap[normalizedName];\n    }\n    \n    // Спец-правило: любые варианты с \"дизель\" + \"генератор\"\n    if (normalizedName.includes('дизель') && normalizedName.includes('генератор')) {\n      return 'diesel-generators';\n    }\n    // Если точного совпадения нет, ищем по частичному совпадению, \n    // предпочитая более длинные (более специфичные) ключи\n    const entriesByLength = Object.entries(categoryMap).sort((a, b) => b[0].length - a[0].length);\n    for (const [key, value] of entriesByLength) {\n      if (normalizedName.includes(key)) {\n        return value;\n      }\n    }\n    \n    // Если ничего не найдено, создаем ID из названия\n    return normalizedName.replace(/[^a-z0-9]/g, '-');\n  };\n\n  // Функция для получения названия категории по ID\n  const idToCategory = (categoryId) => {\n    const idMap = {\n      'drills': 'Дрели',\n      'grinders': 'Болгарки',\n      'screwdrivers': 'Шуруповёрты',\n      'hammers': 'Перфораторы',\n      'jigsaws': 'Лобзики',\n      'levels': 'Лазерные уровни',\n      'generators': 'Генераторы',\n      'diesel-generators': 'Дизельные генераторы',\n      'argon-arc-welding': 'Аргонно-дуговая сварка',\n      'gasoline-trimmer': 'Бензиновый триммер',\n      'deep-pump': 'Глубинный насос',\n      'jackhammer': 'Отбойный молоток',\n      'plasma-cutter': 'Плазморезы',\n      'reduction-valve': 'Редукционный клапан',\n      'welding': 'Сварочные аппараты',\n      'jet-pump': 'Струйный насос',\n      'bench-grinder': 'Точильный станок',\n      'impact-drill': 'Ударная дрель',\n      'fecal-pump': 'Фекальный насос',\n      'nasosy': 'Насосы',\n      'peripheral-pump': 'Периферийный насос',\n      'centrifugal-pump': 'Центробежный насос',\n      'measuring': 'Измерители',\n      // Новые категории\n      'impact-wrench': 'Гайковерт ударный',\n      'hedge-trimmers': 'Кусторезы',\n      'mixers': 'Миксеры',\n      'power-tool-sets': 'Наборный электроинструмент',\n      'hacksaws': 'Ножовки',\n      'saws': 'Пила',\n      'chainsaws': 'Пила цепная',\n      'polishing-machines': 'Полировальные машины',\n      'bees': 'Пчёлки',\n      'reciprocating-saws': 'Сабельная пила',\n      'pruners': 'Секаторы',\n      'routers': 'Фрезер',\n      'electric-planers': 'Электрорубанок'\n    };\n    \n    // Если есть точное совпадение в маппинге, возвращаем его\n    if (idMap[categoryId]) {\n      return idMap[categoryId];\n    }\n    \n    // Если нет точного совпадения, ищем по частичному совпадению\n    const foundCategory = categories.find(cat => cat.id === categoryId);\n    if (foundCategory) {\n      return foundCategory.name;\n    }\n    \n    // Если ничего не найдено, возвращаем ID как есть\n    return categoryId;\n  };\n\n  // Статические категории для fallback (без \"Все товары\")\n  const staticCategories = [\n    { id: 'drills', name: 'Дрели' },\n    { id: 'grinders', name: 'Болгарки' },\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\n    { id: 'hammers', name: 'Перфораторы' },\n    { id: 'jigsaws', name: 'Лобзики' },\n    { id: 'levels', name: 'Лазерные уровни' },\n    { id: 'generators', name: 'Генераторы' },\n    { id: 'diesel-generators', name: 'Дизельные генераторы' },\n    { id: 'nasosy', name: 'Насосы' },\n    { id: 'measuring', name: 'Измерители' },\n    // Новые категории\n    { id: 'impact-wrench', name: 'Гайковерт ударный' },\n    { id: 'hedge-trimmers', name: 'Кусторезы' },\n    { id: 'mixers', name: 'Миксеры' },\n    { id: 'power-tool-sets', name: 'Наборный электроинструмент' },\n    { id: 'hacksaws', name: 'Ножовки' },\n    { id: 'saws', name: 'Пила' },\n    { id: 'chainsaws', name: 'Пила цепная' },\n    { id: 'polishing-machines', name: 'Полировальные машины' },\n    { id: 'bees', name: 'Пчёлки' },\n    { id: 'reciprocating-saws', name: 'Сабельная пила' },\n    { id: 'pruners', name: 'Секаторы' },\n    { id: 'routers', name: 'Фрезер' },\n    { id: 'electric-planers', name: 'Электрорубанок' }\n  ];\n\n  const location = useLocation();\n  // На мобильных при переходе иногда сохраняется старая позиция — принудительно поднимаем наверх\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'auto' });\n  }, []);\n  const getCategoryFromQuery = () => {\n    // Извлекаем категорию из URL пути\n    const pathParts = location.pathname.split('/');\n    if (pathParts.length > 2 && pathParts[1] === 'catalog') {\n      return pathParts[2]; // Возвращаем название категории из URL\n    }\n    return null; // По умолчанию не выбрана категория - показываем все\n  };\n  const [selectedCategory, setSelectedCategory] = useState(getCategoryFromQuery());\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(24);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n\n  // Отслеживаем изменения URL для определения активной категории\n  useEffect(() => {\n    const categoryFromUrl = getCategoryFromQuery();\n    setSelectedCategory(categoryFromUrl);\n  }, [location.search, location.pathname]);\n\n  // Закрытие выпадающего списка при клике вне его\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.category-dropdown')) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    if (isDropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isDropdownOpen]);\n\n          const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  // Загрузка товаров с кэшированием\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    fetchWithCache(API_URL, {}, 10 * 60 * 1000) // Кэш на 10 минут\n      .then(data => {\n        // Фильтруем товары - показываем только доступные для продажи\n        const saleProducts = data.filter(p => p.saleAvailable !== false);\n        setProducts(saleProducts);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Ошибка загрузки товаров');\n        setLoading(false);\n      });\n  }, []);\n\n  // Отслеживаем просмотр страницы каталога\n  useEffect(() => {\n    trackPageView('catalog');\n  }, []);\n  \n  // Слушаем уведомления об обновлении цен\n  useEffect(() => {\n    if (typeof BroadcastChannel !== 'undefined') {\n      const channel = new BroadcastChannel('price_update');\n      \n      channel.onmessage = (event) => {\n        if (event.data.type === 'prices_updated') {\n          console.log('🔄 Получено уведомление об обновлении цен. Перезагружаем страницу...');\n          // Перезагружаем страницу через 1 секунду\n          setTimeout(() => {\n            window.location.reload();\n          }, 1000);\n        }\n      };\n      \n      return () => {\n        channel.close();\n      };\n    }\n  }, []);\n\n  // Извлечение категорий из товаров\n  useEffect(() => {\n    if (products.length > 0) {\n      setCategoriesLoading(true);\n      \n      // Извлекаем уникальные категории из товаров, используя готовые categorySlug\n      const categoryMap = new Map();\n      \n      products.forEach(product => {\n        if (product.categorySlug && product.category) {\n          // Используем готовый categorySlug как ID и оригинальное название категории\n          const categorySlug = product.categorySlug.trim();\n          const originalCategory = product.category.trim();\n          \n          // Если такой categorySlug еще нет, добавляем её\n          if (!categoryMap.has(categorySlug)) {\n            categoryMap.set(categorySlug, originalCategory);\n          }\n        }\n      });\n      \n      const uniqueCategories = Array.from(categoryMap.entries()).map(([slug, name]) => ({\n        id: slug,\n        name: name\n      })).sort((a, b) => a.name.localeCompare(b.name, 'ru'));\n      \n      if (uniqueCategories.length > 0) {\n        setCategories(uniqueCategories);\n      } else {\n        // Fallback: если нет categorySlug, используем старую логику\n        const categoryMapOld = new Map();\n        \n        products.forEach(product => {\n          if (product.category) {\n            const normalizedCategory = product.category.trim().toLowerCase().replace(/\\s+/g, ' ');\n            const originalCategory = product.category.trim();\n            \n            if (!categoryMapOld.has(normalizedCategory)) {\n              categoryMapOld.set(normalizedCategory, originalCategory);\n            }\n          }\n        });\n        \n        const uniqueCategoriesOld = Array.from(categoryMapOld.values()).sort();\n        \n        if (uniqueCategoriesOld.length > 0) {\n          const realCategories = uniqueCategoriesOld.map(category => ({\n            id: categoryToId(category),\n            name: category\n          }));\n          setCategories(realCategories);\n        } else {\n          setCategories(staticCategories);\n        }\n      }\n      setCategoriesLoading(false);\n    }\n  }, [products]);\n\n  // Принудительное применение стилей для карточек\n  useEffect(() => {\n    const forceStyles = () => {\n      const grid = document.querySelector('.catalog-products-grid');\n      const cards = document.querySelectorAll('.product-card');\n      const images = document.querySelectorAll('.product-image');\n      const infos = document.querySelectorAll('.product-info');\n      \n      if (grid) {\n        grid.style.display = 'grid';\n        grid.style.gap = '0';\n        grid.style.margin = '0';\n        grid.style.padding = '0';\n        grid.style.borderCollapse = 'collapse';\n        grid.style.borderSpacing = '0';\n      }\n      \n      cards.forEach(card => {\n        card.style.margin = '-1px';\n        card.style.border = '1px solid #e3e6ea';\n        card.style.borderRadius = '0';\n        card.style.padding = '0';\n        card.style.background = '#fff';\n        card.style.display = 'flex';\n        card.style.flexDirection = 'column';\n        card.style.height = '100%';\n        card.style.position = 'relative';\n        card.style.overflow = 'hidden';\n        card.style.boxSizing = 'border-box';\n        card.style.minHeight = 'auto';\n      });\n      \n      images.forEach(img => {\n        img.style.height = '160px';\n        img.style.padding = '0';\n        img.style.margin = '0';\n      });\n      \n      infos.forEach(info => {\n        info.style.padding = '0 8px 4px';\n        info.style.minHeight = 'auto';\n      });\n    };\n\n    // Применяем стили сразу и после загрузки\n    forceStyles();\n    setTimeout(forceStyles, 50);\n    setTimeout(forceStyles, 100);\n    setTimeout(forceStyles, 200);\n    setTimeout(forceStyles, 500);\n    setTimeout(forceStyles, 1000);\n\n    // Применяем стили при изменении размера окна\n    const handleResize = () => {\n      setTimeout(forceStyles, 100);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [products]);\n\n  // Функция для группировки товаров по категориям (убираем дубликаты)\n  const getGroupedProducts = (productList) => {\n    if (selectedCategory) {\n      // Если выбрана категория, показываем все товары этой категории\n      return productList.filter(product => {\n        // Сначала проверяем готовый categorySlug из MongoDB\n        if (product.categorySlug) {\n          return product.categorySlug === selectedCategory;\n        }\n        \n        // Fallback: если categorySlug нет, используем старую логику\n        if (!product.category) return false;\n        const productCategoryId = categoryToId(product.category.trim());\n        return productCategoryId === selectedCategory;\n      });\n    } else {\n      // Если категория не выбрана, группируем товары по категориям\n      const categoryMap = new Map();\n      \n      productList.forEach(product => {\n        let categoryKey;\n        \n        // Определяем ключ категории\n        if (product.categorySlug) {\n          categoryKey = product.categorySlug;\n        } else if (product.category) {\n          categoryKey = categoryToId(product.category.trim());\n        } else {\n          categoryKey = 'other';\n        }\n        \n        // Если категории еще нет в мапе, добавляем товар\n        if (!categoryMap.has(categoryKey)) {\n          categoryMap.set(categoryKey, product);\n        } else {\n          // Если категория уже есть, выбираем товар с productGroup (приоритет мастер-товарам)\n          const existingProduct = categoryMap.get(categoryKey);\n          if (product.productGroup && !existingProduct.productGroup) {\n            categoryMap.set(categoryKey, product);\n          }\n        }\n      });\n      \n      return Array.from(categoryMap.values());\n    }\n  };\n\n  // При загрузке /catalog показываем сгруппированные товары, при выборе категории - все товары\n  const filteredProducts = getGroupedProducts(products);\n\n  // Пагинация\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n\n  // Сброс на первую страницу при смене категории\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedCategory]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Функция для получения названия товара с приоритетом: productGroup -> category -> product name\n  const getProductDisplayName = (product) => {\n    // 1. Проверяем мастер-товар (productGroup)\n    if (product.productGroup && product.productGroup.name) {\n      return product.productGroup.name;\n    }\n    \n    // 2. Проверяем название категории\n    if (product.category) {\n      return product.category;\n    }\n    \n    // 3. Используем название продукта\n    return product.name;\n  };\n\n  // Определяем целевую ссылку для карточки товара в каталоге\n  const getCardLink = (product) => {\n    // Ведём на категорию товара. Если есть categorySlug в документе — используем его,\n    // иначе маппим текст категории в id (как в мини-каталоге на главной)\n    if (product && product.categorySlug) {\n      return `/catalog/${product.categorySlug}`;\n    }\n    const catId = product && product.category ? categoryToId(String(product.category).trim()) : '';\n    if (catId) return `/catalog/${catId}`;\n    return `/catalog`; // Если категории нет, ведём в общий каталог\n  };\n\n  return (\n    <div className=\"catalog\">\n      <Header />\n      <main className=\"catalog-main\">\n        <div className=\"container catalog-layout\">\n          <aside className=\"catalog-sidebar desktop-sidebar\">\n            <h3 className=\"sidebar-title\">Категории</h3>\n            {categoriesLoading ? (\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                Загрузка категорий...\n              </div>\n            ) : (\n              <ul className=\"sidebar-categories\">\n                {categories.map(category => (\n                  <li key={category.id}>\n                    <Link\n                      to={`/catalog/${category.id}`}\n                      className={`sidebar-category-btn${selectedCategory === category.id ? ' active' : ''}`}\n                      style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\n                    >\n                      {category.name}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </aside>\n          <div className=\"catalog-content\">\n            {/* Хлебные крошки как на странице продукта */}\n            <nav className=\"breadcrumbs\" style={{paddingBottom: '12px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n              <a href=\"/\">Главная</a>\n              <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n              <a href=\"/catalog\">Каталог</a>\n              {selectedCategory && (\n                <>\n                  <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                  <span style={{color:'#1a2236', fontWeight:500}}>{categories.find(cat => cat.id === selectedCategory)?.name || idToCategory(selectedCategory)}</span>\n                </>\n              )}\n            </nav>\n            <div className=\"category-dropdown-container mobile-dropdown\">\n              <div className={`category-dropdown ${isDropdownOpen ? 'open' : ''}`}>\n                <button \n                  className=\"category-dropdown-btn\"\n                  onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                  disabled={categoriesLoading}\n                >\n                  <span>\n                    {categoriesLoading \n                      ? 'Загрузка...' \n                      : location.pathname === '/catalog'\n                        ? 'Каталог товаров'\n                        : selectedCategory \n                          ? (categories.find(cat => cat.id === selectedCategory)?.name || idToCategory(selectedCategory) || 'Каталог товаров')\n                          : 'Каталог товаров'\n                    }\n                  </span>\n                  <span className=\"dropdown-arrow\">▼</span>\n                </button>\n                {isDropdownOpen && !categoriesLoading && (\n                  <div className=\"category-dropdown-menu\">\n                    {categories.map(category => (\n                      <Link\n                        key={category.id}\n                        to={`/catalog/${category.id}`}\n                        className={`category-dropdown-item${selectedCategory === category.id ? ' active' : ''}`}\n                        style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\n                        onClick={() => setIsDropdownOpen(false)}\n                      >\n                        {category.name}\n                      </Link>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n            <h1 className=\"catalog-title\" style={{textAlign: 'left', marginLeft: 0, marginTop: 0}}>\n              {categoriesLoading \n                ? 'Каталог товаров' \n                : location.pathname === '/catalog'\n                  ? 'Каталог товаров'\n                  : selectedCategory \n                    ? (categories.find(cat => cat.id === selectedCategory)?.name || idToCategory(selectedCategory) || 'Каталог товаров')\n                    : 'Каталог товаров'\n              }\n            </h1>\n            {loading ? (\n              <div style={{padding: 32}}>Загрузка...</div>\n            ) : error ? (\n              <div style={{color: 'red', padding: 32}}>{error}</div>\n            ) : (\n            <div className=\"catalog-products-grid\" style={{gap: 0}}>\n              {currentProducts.map(product => (\n                <Link\n                  to={getCardLink(product)}\n                  key={product._id}\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <div\n                    className=\"product-card kaspi-style mini-product-card\"\n                    style={{ cursor: 'pointer', minHeight: 'auto', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', border: '1px solid #e3e6ea', margin: '-1px' }}\n                  >\n                    <div className=\"product-image\" style={{height: '160px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                      <picture style={{width: '100%', height: '100%'}}>\n                        <source \n                          srcSet={getOptimalImage(product, 'webp')} \n                          type=\"image/webp\"\n                        />\n                        <img \n                          src={getOptimalImage(product, 'medium')} \n                          alt={product.name} \n                          style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                          loading=\"lazy\"\n                          width=\"260\"\n                          height=\"160\"\n                        />\n                      </picture>\n                    </div>\n                    <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 0 auto', alignSelf:'center'}}></div>\n                    <div className=\"product-info\" style={{padding: '0 8px 6px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight: '20px'}}>\n                          <span style={{fontSize: '1rem', fontWeight: 700, color: '#1a2236', margin: '0', lineHeight: 1.2, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%', marginTop: '2px'}}>\n                            {product.productGroup ? product.productGroup.name : (product.category ? product.category : product.name)}\n                          </span>\n                    </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n            )}\n            \n            {/* Пагинация */}\n            {totalPages > 1 && (\n              <div className=\"pagination-container\" style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginTop: '40px',\n                marginBottom: '20px',\n                gap: '8px'\n              }}>\n                {/* Кнопка \"Предыдущая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === 1 ? '#f5f5f5' : '#fff',\n                    color: currentPage === 1 ? '#999' : '#333',\n                    cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  ← Назад\n                </button>\n                \n                {/* Номера страниц */}\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => {\n                  // Показываем только первые 5 страниц, последние 5 и текущую с соседними\n                  if (\n                    pageNumber === 1 ||\n                    pageNumber === totalPages ||\n                    (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\n                  ) {\n                    return (\n                      <button\n                        key={pageNumber}\n                        onClick={() => handlePageChange(pageNumber)}\n                        style={{\n                          padding: '8px 12px',\n                          border: '1px solid #e3e6ea',\n                          background: currentPage === pageNumber ? '#e86c0a' : '#fff',\n                          color: currentPage === pageNumber ? '#fff' : '#333',\n                          cursor: 'pointer',\n                          borderRadius: '4px',\n                          fontSize: '14px',\n                          fontWeight: '500',\n                          minWidth: '40px'\n                        }}\n                      >\n                        {pageNumber}\n                      </button>\n                    );\n                  } else if (\n                    pageNumber === currentPage - 2 ||\n                    pageNumber === currentPage + 2\n                  ) {\n                    return (\n                      <span\n                        key={pageNumber}\n                        style={{\n                          padding: '8px 4px',\n                          color: '#999',\n                          fontSize: '14px'\n                        }}\n                      >\n                        ...\n                      </span>\n                    );\n                  }\n                  return null;\n                })}\n                \n                {/* Кнопка \"Следующая\" */}\n                <button\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages}\n                  style={{\n                    padding: '8px 16px',\n                    border: '1px solid #e3e6ea',\n                    background: currentPage === totalPages ? '#f5f5f5' : '#fff',\n                    color: currentPage === totalPages ? '#999' : '#333',\n                    cursor: currentPage === totalPages ? 'not-allowed' : 'pointer',\n                    borderRadius: '4px',\n                    fontSize: '14px',\n                    fontWeight: '500'\n                  }}\n                >\n                  Вперед →\n                </button>\n              </div>\n            )}\n            \n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Catalog; "],"names":["apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","Catalog","_categories$find","_categories$find2","_categories$find3","getOptimalImage","product","preferredSize","productGroup","coverImage","mainImage","coverPhoto","image","imageVariants","webp","categoryToId","categoryName","categoryMap","normalizedName","toLowerCase","trim","replace","includes","entriesByLength","Object","entries","sort","a","b","value","idToCategory","categoryId","idMap","foundCategory","categories","find","cat","id","name","staticCategories","location","useLocation","useEffect","window","scrollTo","top","left","behavior","getCategoryFromQuery","pathParts","pathname","split","selectedCategory","setSelectedCategory","useState","products","setProducts","loading","setLoading","setError","isDropdownOpen","setIsDropdownOpen","currentPage","setCurrentPage","productsPerPage","setCategories","categoriesLoading","setCategoriesLoading","categoryFromUrl","search","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","then","saleProducts","filter","p","saleAvailable","catch","err","trackPageView","BroadcastChannel","channel","onmessage","type","setTimeout","reload","close","forEach","categorySlug","category","originalCategory","has","uniqueCategories","Array","from","map","_ref","slug","localeCompare","categoryMapOld","normalizedCategory","uniqueCategoriesOld","values","realCategories","forceStyles","grid","querySelector","cards","querySelectorAll","images","infos","style","display","gap","margin","padding","borderCollapse","borderSpacing","card","border","borderRadius","background","flexDirection","height","position","overflow","boxSizing","minHeight","img","info","handleResize","filteredProducts","productList","categoryKey","existingProduct","getGroupedProducts","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","handlePageChange","pageNumber","getCardLink","catId","String","_jsxs","className","children","_jsx","Header","textAlign","color","Link","to","textDecoration","width","paddingBottom","alignItems","flexWrap","href","fontSize","_Fragment","fontWeight","onClick","disabled","marginLeft","marginTop","cursor","fontFamily","justifyContent","srcSet","src","alt","objectFit","maxWidth","borderTop","alignSelf","lineHeight","_id","marginBottom","_","index","minWidth","Footer"],"sourceRoot":""}