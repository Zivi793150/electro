{"version":3,"file":"static/js/820.1220f075.chunk.js","mappings":"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","sources":["utils/price.js","components/Modal.js","utils/telegram.js","pages/Product.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[\\.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData, product);\r\n      \r\n      if (result.success) {\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n\r\nexport const sendToTelegram = async (formData, product = null) => {\r\n  try {\r\n    // Отправляем данные на наш API endpoint\r\n    const response = await fetch('/api/send-telegram', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: formData.name,\r\n        phone: formData.phone,\r\n        message: formData.message,\r\n        product: product\r\n      })\r\n    });\r\n    \r\n    const result = await response.json();\r\n    \r\n    if (result.success) {\r\n      return { success: true, message: 'Заявка успешно отправлена!' };\r\n    } else {\r\n      console.error('Ошибка API:', result.error);\r\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport DeliveryInfo from '../components/DeliveryInfo';\nimport '../styles/Product.css';\nimport '../styles/ProductVariations.css';\n\nconst categories = [\n  { id: 'grinders', name: 'Болгарки' },\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\n  { id: 'hammers', name: 'Перфораторы' },\n  { id: 'drills', name: 'Дрели' },\n  { id: 'jigsaws', name: 'Лобзики' },\n  { id: 'levels', name: 'Лазерные уровни' },\n  { id: 'generators', name: 'Генераторы' },\n  { id: 'measuring', name: 'Измерители' }\n];\n\nconst Product = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [siteSettings, setSiteSettings] = useState({\n    city: 'Алматы',\n    deliveryInfo: {\n      freeDelivery: 'Бесплатная доставка по городу',\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\n      pickupAddress: 'ул. Толе би 216Б',\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\n    }\n  });\n  \n  const [selectedCity, setSelectedCity] = useState(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    return savedCity || 'Алматы';\n  });\n  \n  const [selectedDelivery, setSelectedDelivery] = useState(null);\n  const [deliveryInfo, setDeliveryInfo] = useState(null);\n  const [isCityChanging, setIsCityChanging] = useState(false);\n  \n  // Состояние для вариаций товара\n  const [productGroup, setProductGroup] = useState(null);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n  const [selectedParameters, setSelectedParameters] = useState({});\n  \n\n  \n  const [detectingCity, setDetectingCity] = useState(false);\n  \n  // Функция для автоматического определения города\n  const detectUserCity = () => {\n    if (navigator.geolocation) {\n      setDetectingCity(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Используем обратное геокодирование для определения города\n          fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&addressdetails=1`)\n            .then(response => response.json())\n            .then(data => {\n              if (data.address && data.address.city) {\n                const detectedCity = data.address.city;\n                // Проверяем, есть ли этот город в нашем списке\n                if (cities.includes(detectedCity)) {\n                  setSelectedCity(detectedCity);\n                  localStorage.setItem('selectedCity', detectedCity);\n                }\n              }\n              setDetectingCity(false);\n            })\n            .catch(error => {\n              console.log('Ошибка определения города:', error);\n              setDetectingCity(false);\n            });\n        },\n        (error) => {\n          console.log('Ошибка получения геолокации:', error);\n          setDetectingCity(false);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000 // 5 минут\n        }\n      );\n    }\n  };\n  \n  // Список городов Казахстана\n  const cities = [\n    'Алматы',\n    'Астана',\n    'Шымкент',\n    'Актобе',\n    'Караганда',\n    'Тараз',\n    'Павлодар',\n    'Семей',\n    'Усть-Каменогорск',\n    'Уральск',\n    'Кызылорда',\n    'Костанай',\n    'Петропавловск',\n    'Атырау',\n    'Актау',\n    'Темиртау',\n    'Туркестан',\n    'Кокшетау',\n    'Талдыкорган',\n    'Экибастуз',\n    'Рудный',\n    'Жанаозен',\n    'Жезказган',\n    'Балхаш',\n    'Кентау',\n    'Сатпаев',\n    'Капчагай',\n    'Риддер',\n    'Степногорск',\n    'Аральск',\n    'Аркалык',\n    'Житикара',\n    'Кандыагаш',\n    'Лисаковск',\n    'Шахтинск',\n    'Абай',\n    'Аягоз',\n    'Зайсан',\n    'Курчатов',\n    'Приозерск',\n    'Серебрянск',\n    'Текели',\n    'Уштобе',\n    'Чарск',\n    'Шемонаиха',\n    'Щучинск'\n  ];\n  \n  // Объединяем все изображения из разных полей\n  const getAllImages = () => {\n    const currentProduct = getCurrentProduct();\n    const images = [];\n    \n    // Добавляем основное изображение из поля image (если есть)\n    if (currentProduct?.image) {\n      images.push(currentProduct.image);\n    }\n    \n    // Добавляем изображения из поля images\n    if (Array.isArray(currentProduct?.images)) {\n      images.push(...currentProduct.images);\n    }\n    \n    // Добавляем изображения из поля images2\n    if (Array.isArray(currentProduct?.images2)) {\n      images.push(...currentProduct.images2);\n    }\n    \n    // Добавляем изображения из поля images3\n    if (Array.isArray(currentProduct?.images3)) {\n      images.push(...currentProduct.images3);\n    }\n    \n    // Если нет изображений, добавляем placeholder\n    if (images.length === 0) {\n      images.push('/images/products/placeholder.png');\n    }\n    \n    return images;\n  };\n  \n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-a8bl.onrender.com/api/products';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    const fetchProductAndGroup = async () => {\n      try {\n        // Загружаем товар\n        const productRes = await fetch(`${API_URL}/${id}`);\n        const productData = await productRes.json();\n        \n        if (productData.error) {\n          setError(productData.error);\n          setProduct(null);\n          setLoading(false);\n          return;\n        }\n        \n        setProduct(productData);\n        \n        // Загружаем группу вариаций для этого товара\n        try {\n          const groupRes = await fetch(`https://electro-a8bl.onrender.com/api/product-groups/by-product/${id}`);\n          if (groupRes.ok) {\n            const groupData = await groupRes.json();\n            setProductGroup(groupData);\n            \n            // Если это базовый товар группы, устанавливаем его как выбранную вариацию\n            if (groupData.baseProductId?._id === id) {\n              setSelectedVariant({\n                productId: groupData.baseProductId,\n                parameters: {},\n                price: productData.price\n              });\n            }\n          }\n        } catch (groupError) {\n          console.log('Группа вариаций не найдена для товара:', groupError);\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        setError('Ошибка загрузки товара');\n        setLoading(false);\n      }\n    };\n    \n    fetchProductAndGroup();\n  }, [id]);\n\n  useEffect(() => {\n    fetch(`${API_URL}?limit=4`)\n      .then(res => res.json())\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Загружаем информацию сайта\n  useEffect(() => {\n    fetch('https://electro-a8bl.onrender.com/api/information')\n      .then(res => res.json())\n      .then(data => {\n        if (data.information) {\n          setSiteSettings(data.information);\n        }\n      })\n      .catch(error => {\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\n      });\n  }, []);\n  \n  // Инициализируем выбранный город из localStorage и автоматически определяем город\n  useEffect(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    \n    // Если есть сохраненный город, используем его\n    if (savedCity) {\n      setSelectedCity(savedCity);\n    } else {\n      // Если нет сохраненного города, пытаемся определить автоматически\n      detectUserCity();\n    }\n  }, []);\n\n  // Сбрасываем активное изображение при смене товара\n  useEffect(() => {\n    setActiveImage(0);\n  }, [selectedVariant]);\n\n  if (loading) {\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\n  }\n  if (error || !product) {\n    return (\n      <div className=\"product\">\n        <Header />\n        <main className=\"product-main\">\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\n            <h1>Товар не найден</h1>\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/catalog\">каталог</a>.</p>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Найти категорию для хлебных крошек\n  const categoryObj = categories.find(cat => cat.id === product.category);\n  const categoryName = categoryObj ? categoryObj.name : '';\n\n  // Преимущества — если есть в product, иначе дефолтные\n  const productAdvantages = product.advantages || [\n    'Высокий крутящий момент и мощность',\n    'Долговечный литий-ионный аккумулятор',\n    'Компактный и лёгкий корпус для работы одной рукой'\n  ];\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = (formData) => {\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\n    alert('Спасибо! Ваша заявка отправлена. Мы свяжемся с вами в ближайшее время.');\n  };\n\n  const handleBuy = () => {\n    const currentProduct = getCurrentProduct();\n    const currentPrice = getCurrentPrice();\n    \n    navigate('/checkout', { \n      state: { \n        product: currentProduct,\n        selectedVariant,\n        selectedParameters,\n        originalPrice: product.price,\n        currentPrice\n      } \n    });\n  };\n\n  // Функции для работы с вариациями\n  const handleParameterChange = (paramName, value) => {\n    const newParameters = { ...selectedParameters, [paramName]: value };\n    setSelectedParameters(newParameters);\n    \n    // Находим подходящую вариацию\n    if (productGroup) {\n      // Удаляем параметр из поиска, если значение пустое или false\n      const filteredParameters = {};\n      Object.entries(newParameters).forEach(([key, val]) => {\n        if (val && val !== 'false') {\n          filteredParameters[key] = val;\n        }\n      });\n      \n      // Если нет выбранных параметров, сбрасываем на базовый товар\n      if (Object.keys(filteredParameters).length === 0) {\n        setSelectedVariant(null);\n        return;\n      }\n      \n      // Ищем вариацию с точным совпадением всех параметров\n      let matchingVariant = productGroup.variants.find(variant => {\n        if (!variant.isActive) return false;\n        \n        // Проверяем, что все выбранные параметры совпадают\n        return Object.entries(filteredParameters).every(([key, val]) => {\n          return variant.parameters[key] === val;\n        });\n      });\n      \n      // Если точного совпадения нет, ищем вариацию с частичным совпадением\n      if (!matchingVariant && Object.keys(filteredParameters).length > 0) {\n        matchingVariant = productGroup.variants.find(variant => {\n          if (!variant.isActive) return false;\n          \n          // Проверяем, что хотя бы один параметр совпадает\n          return Object.entries(filteredParameters).some(([key, val]) => {\n            return variant.parameters[key] === val;\n          });\n        });\n      }\n      \n      if (matchingVariant) {\n        setSelectedVariant(matchingVariant);\n      } else {\n        // Если совпадения нет, сбрасываем на базовый товар\n        setSelectedVariant(null);\n      }\n    }\n  };\n\n  // Получаем текущий товар для отображения (с учетом выбранной вариации)\n  const getCurrentProduct = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      // Убеждаемся, что у нас есть полная информация о товаре\n      return selectedVariant.productId;\n    }\n    return product;\n  };\n\n  // Получаем текущую цену\n  const getCurrentPrice = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      return selectedVariant.productId.price;\n    }\n    return product?.price;\n  };\n\n  // Проверяем, есть ли вариации с определенным параметром\n  const hasVariationsWithParameter = (paramName) => {\n    if (!productGroup) return false;\n    return productGroup.variants.some(variant => \n      variant.isActive && variant.parameters[paramName]\n    );\n  };\n\n  // Получаем доступные значения для параметра\n  const getAvailableValuesForParameter = (paramName) => {\n    if (!productGroup) return [];\n    const values = new Set();\n    productGroup.variants.forEach(variant => {\n      if (variant.isActive && variant.parameters[paramName]) {\n        values.add(variant.parameters[paramName]);\n      }\n    });\n    return Array.from(values);\n  };\n\n  // Модалка фото\n  const handleImageClick = () => setShowImageModal(true);\n  const handleCloseImageModal = () => setShowImageModal(false);\n  const handlePrevImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev - 1 + images.length) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  const handleNextImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev + 1) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  \n  const handleCityChange = (e) => {\n    const newCity = e.target.value;\n    setIsCityChanging(true);\n    setSelectedCity(newCity);\n    localStorage.setItem('selectedCity', newCity);\n    // Сбрасываем выбранную доставку при смене города\n    setSelectedDelivery(null);\n    // Загружаем информацию о доставке для нового города\n    fetchDeliveryInfo(newCity);\n    \n    // Убираем анимацию через 500мс\n    setTimeout(() => {\n      setIsCityChanging(false);\n    }, 500);\n  };\n\n  const fetchDeliveryInfo = async (cityName) => {\n    try {\n      const response = await fetch(`https://electro-a8bl.onrender.com/api/pickup-points/delivery/${encodeURIComponent(cityName)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setDeliveryInfo(data);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки информации о доставке:', error);\n    }\n  };\n  \n\n\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  return (\n    <div className=\"product-page\">\n      <Header />\n      <main className=\"product-main\">\n        <div className=\"product-container\">\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n            <a href=\"/\">Главная</a>\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <a href=\"/catalog\">Каталог</a>\n            {categoryName && (\n              <>\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                <a href={`/catalog?category=${product.category}`}>{categoryName}</a>\n              </>\n            )}\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <span style={{color:'#1a2236', fontWeight:500}}>{product.name}</span>\n          </nav>\n          <div className=\"product-flex\">\n            {/* Фото и миниатюры */}\n            <div className=\"product-gallery\">\n              <div className=\"product-gallery-inner\">\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\n                  <img \n                    src={product.image || getAllImages()[activeImage]} \n                    alt={product.name} \n                    loading=\"lazy\"\n                    width=\"400\"\n                    height=\"400\"\n                    style={{width: '100%', height: 'auto', maxWidth: '400px'}}\n                  />\n                </div>\n                {getAllImages().length > 1 && (\n                  <>\n                    <div className=\"product-thumbs\">\n                      {getAllImages().map((img, idx) => (\n                        <img \n                          key={idx} \n                          src={img} \n                          alt={product.name + idx} \n                          className={activeImage === idx ? \"active\" : \"\"} \n                          onClick={() => setActiveImage(idx)} \n                          loading=\"lazy\"\n                          width=\"80\"\n                          height=\"80\"\n                        />\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Инфо и цена справа */}\n            <div className=\"product-info-block\">\n              <>\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 6, wordBreak: 'break-word', marginTop: 28, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 8, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\n                <div className=\"product-divider\"></div>\n                {/* Компонент выбора вариаций */}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-variations\" style={{\n                    marginBottom: '20px'\n                  }}>\n                    {productGroup.parameters.map((param, index) => {\n                      // Для чекбоксов проверяем, есть ли вариации с этим параметром\n                      if (param.type === 'checkbox' && !hasVariationsWithParameter(param.name)) {\n                        return null; // Не показываем чекбокс, если нет вариаций с этим параметром\n                      }\n                      \n                      // Для select и radio используем только доступные значения\n                      const availableValues = param.type === 'select' || param.type === 'radio' \n                        ? getAvailableValuesForParameter(param.name)\n                        : param.values;\n                      \n                      // Если нет доступных значений, не показываем параметр\n                      if (availableValues.length === 0) {\n                        return null;\n                      }\n                      \n                      return (\n                        <div key={index} style={{ marginBottom: '15px' }}>\n                          <label style={{ \n                            display: 'block', \n                            marginBottom: '8px', \n                            fontWeight: '500',\n                            color: '#333'\n                          }}>\n                            {param.name}\n                            {param.required && <span style={{ color: '#e74c3c' }}> *</span>}\n                          </label>\n                          \n                          {param.type === 'select' && (\n                            <select\n                              value={selectedParameters[param.name] || ''}\n                              onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                              required={param.required}\n                              style={{\n                                width: '100%',\n                                padding: '8px 12px',\n                                border: 'none',\n                                borderRadius: '4px',\n                                fontSize: '14px',\n                                background: 'transparent'\n                              }}\n                            >\n                              <option value=\"\">Выберите {param.name.toLowerCase()}</option>\n                              {availableValues.map((value, valueIndex) => (\n                                <option key={valueIndex} value={value}>\n                                  {value}\n                                </option>\n                              ))}\n                            </select>\n                          )}\n                          \n                          {param.type === 'radio' && (\n                            <div style={{ display: 'flex', gap: '15px', flexWrap: 'wrap' }}>\n                              {availableValues.map((value, valueIndex) => (\n                                <label key={valueIndex} style={{ \n                                  display: 'flex', \n                                  alignItems: 'center', \n                                  cursor: 'pointer',\n                                  fontSize: '14px'\n                                }}>\n                                  <input\n                                    type=\"radio\"\n                                    name={param.name}\n                                    value={value}\n                                    checked={selectedParameters[param.name] === value}\n                                    onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                                    required={param.required}\n                                    style={{ marginRight: '6px' }}\n                                  />\n                                  {value}\n                                </label>\n                              ))}\n                            </div>\n                          )}\n                          \n                          {param.type === 'checkbox' && (\n                            <label style={{ \n                              display: 'flex', \n                              alignItems: 'center', \n                              cursor: 'pointer',\n                              fontSize: '14px'\n                            }}>\n                              <input\n                                type=\"checkbox\"\n                                checked={selectedParameters[param.name] === 'true'}\n                                onChange={(e) => handleParameterChange(param.name, e.target.checked ? 'true' : 'false')}\n                                style={{ marginRight: '6px' }}\n                              />\n                              {param.name}\n                            </label>\n                          )}\n                        </div>\n                      );\n                    })}\n                    \n                    \n                  </div>\n                )}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-divider\"></div>\n                )}\n\n                <div className=\"product-buy-row\">\n                  <div className=\"product-price-block\">\n                    <div className=\"product-price-label-value\">\n                      <div className=\"product-price-label\">Цена</div>\n                      <div className=\"product-price-value\">\n                        {formatTenge(getCurrentPrice())}\n                        <span className=\"product-currency\">₸</span>\n                      </div>\n                    </div>\n\n                    {getCurrentProduct().article && (\n                      <div style={{\n                        fontSize: '0.85rem', \n                        color: '#666', \n                        marginTop: 6, \n                        textAlign: 'left',\n                        wordBreak: 'break-word',\n                        width: '140px',\n                        minWidth: '140px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start'\n                      }}>\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\n                        <span style={{marginTop: 2}}>{getCurrentProduct().article}</span>\n                      </div>\n                    )}\n                  </div>\n                  <span className=\"product-price-divider\"></span>\n                  <div className=\"product-buy-btns\">\n                    <button className=\"product-btn-ask\" onClick={handleOpenModal}>Задать вопрос</button>\n                    <div className=\"product-btns-divider\"></div>\n                    <button className=\"product-btn-buy\" onClick={handleBuy}>Купить</button>\n                  </div>\n                </div>\n                <div className=\"product-divider\"></div>\n                <div style={{\n                  marginTop: 14, \n                  background: '#f5f7fa', \n                  borderRadius: 10, \n                  padding: '10px 12px 8px 12px', \n                  fontSize: '0.98rem', \n                  color: '#222', \n                  boxShadow: 'none', \n                  maxWidth: 320,\n                  transition: 'all 0.3s ease',\n                  transform: isCityChanging ? 'scale(0.98)' : 'scale(1)',\n                  opacity: isCityChanging ? 0.8 : 1\n                }}>\n                  <div style={{fontWeight: 600, color: '#1e88e5', marginBottom: 8, fontSize: '1.01rem', display: 'flex', alignItems: 'center', gap: '8px'}}>\n                    {detectingCity ? (\n                      <span style={{color: '#666', fontSize: '0.9rem'}}>📍 Определяем...</span>\n                    ) : (\n                      <select \n                        value={selectedCity} \n                        onChange={handleCityChange}\n                        className=\"city-select\"\n                      >\n                        {cities.map(city => (\n                          <option key={city} value={city}>{city}</option>\n                        ))}\n                      </select>\n                    )}\n                  </div>\n                  \n                  {/* Показываем выбор доставки только для городов кроме Алматы */}\n                  {selectedCity !== 'Алматы' && (\n                    <DeliveryInfo \n                      city={selectedCity} \n                      onDeliverySelect={setSelectedDelivery}\n                      compact={true}\n                      selectedDelivery={selectedDelivery}\n                    />\n                  )}\n                  \n                  <div style={{background:'#f0f1f4', borderRadius:7, padding:'7px 10px', marginTop:8, color:'#222', fontSize:'0.93rem', display:'flex', alignItems:'center', gap:6}}>\n                    <span style={{fontSize:15, color:'#888'}}>ⓘ</span>\n                    <span>\n                      {selectedCity === 'Алматы' \n                        ? 'Срок доставки рассчитывается менеджером после оформления заказа'\n                        : selectedDelivery \n                          ? `Доставка в ${selectedCity} через ${selectedDelivery.name.toLowerCase()}. ${selectedDelivery.type === 'pickup' ? 'Самовывоз из наших пунктов' : selectedDelivery.type === 'indriver' ? 'В течение дня' : selectedDelivery.type === 'yandex' ? '1-2 дня' : selectedDelivery.type === 'kazpost' ? '3-5 дней' : selectedDelivery.type === 'cdek' ? '1-2 дня' : selectedDelivery.type === 'air' ? '1-3 дня' : '1-3 дня'}.`\n                          : `Доставка в ${selectedCity} осуществляется через курьерские службы. Срок доставки 1-3 дня.`\n                      }\n                    </span>\n                  </div>\n                </div>\n              </>\n            </div>\n          </div>\n          {/* Вкладки снизу */}\n          <div className=\"product-tabs-wrap\">\n            <Tabs product={getCurrentProduct()} />\n                </div>\n            </div>\n      </main>\n      {/* Мини-каталог популярных товаров */}\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Популярные товары</h2>\n        </div>\n        <div className=\"mini-catalog-slider-wrapper\">\n          <div className=\"mini-catalog-slider\">\n            {/* Первый набор карточек */}\n            {miniProducts.map(product => (\n              <div\n                key={`first-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\n            {miniProducts.map(product => (\n              <div\n                key={`second-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? formatTenge(product.price) + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} product={getCurrentProduct().name} />\n    {/* Модальное окно для увеличенного фото */}\n    {showImageModal && (\n      <div className=\"image-modal-overlay\" onClick={handleCloseImageModal} style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'rgba(0,0,0,0.55)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>\n        <div className=\"image-modal-content\" style={{background:'#fff',padding:0,borderRadius:'8px',boxShadow:'0 8px 32px rgba(0,0,0,0.18)',position:'relative',maxWidth:'90vw',maxHeight:'90vh',display:'flex',flexDirection:'column',alignItems:'center'}} onClick={e=>e.stopPropagation()}>\n          <img src={getAllImages()[activeImage]} alt={getCurrentProduct().name} style={{maxWidth:'80vw',maxHeight:'80vh',objectFit:'contain',background:'#fff'}} width=\"800\" height=\"600\" />\n          {getAllImages().length > 1 && (\n            <>\n              <button \n                onClick={handlePrevImage} \n                style={{\n                  position: 'absolute',\n                  left: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ‹\n              </button>\n              <button \n                onClick={handleNextImage} \n                style={{\n                  position: 'absolute',\n                  right: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ›\n              </button>\n              <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                <span style={{color:'#666', fontSize:'14px'}}>{activeImage + 1} из {getAllImages().length}</span>\n              </div>\n            </>\n          )}\n          <button onClick={handleCloseImageModal} style={{position:'absolute',top:8,right:12,fontSize:32,background:'none',border:'none',color:'#222',cursor:'pointer',lineHeight:1}}>&times;</button>\n        </div>\n      </div>\n    )}\n    </div>\n  );\n};\n\nfunction Tabs({product}) {\n  const [tab,setTab]=React.useState('desc');\n  \n  // Функция для парсинга характеристик из строки\n  const parseCharacteristics = (characteristicsStr) => {\n    if (!characteristicsStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(characteristicsStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\n        const [name, value] = line.split(':').map(s => s.trim());\n        return { name, value };\n      });\n    }\n  };\n  \n  // Функция для парсинга комплектации из строки\n  const parseEquipment = (equipmentStr) => {\n    if (!equipmentStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(equipmentStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам или запятым\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\n    }\n  };\n  \n  const characteristics = parseCharacteristics(product.characteristics);\n  const equipment = parseEquipment(product.equipment);\n  return (\n    <div className=\"product-tabs\">\n      <div className=\"product-tabs-header\">\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\n      </div>\n      <div className=\"product-tabs-content\">\n        {tab==='desc' && (\n          <div className=\"product-desc-kaspi-block\">\n            {product.description ? (\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='specs' && (\n          <div className=\"product-specs-kaspi-block\">\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\n            {characteristics.length > 0 ? (\n              <div className=\"product-specs-group\">\n                <div className=\"product-specs-flex-table\">\n                  {characteristics.map((spec, i) => (\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\n                      <span className=\"product-specs-flex-dots\"></span>\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\n            )}\n          </div>\n        )}\n        {tab==='equip' && (\n          <div className=\"product-desc-kaspi-block\">\n            {equipment.length > 0 ? (\n              <ul style={{margin: 0, paddingLeft: 20}}>\n                {equipment.map((item, idx) => (\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Product; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","_ref","isOpen","onClose","onSubmit","product","formData","setFormData","useState","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","target","_jsx","className","onClick","children","_jsxs","stopPropagation","async","preventDefault","validation","isValid","Object","keys","length","validateForm","result","arguments","undefined","response","fetch","method","headers","body","JSON","stringify","json","success","console","error","sendToTelegram","alert","htmlFor","type","id","onChange","placeholder","rows","disabled","categories","Tabs","_ref4","tab","setTab","React","characteristics","characteristicsStr","parse","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","item","parseEquipment","description","dangerouslySetInnerHTML","__html","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","Product","useParams","setProduct","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","setSelectedCity","localStorage","getItem","selectedDelivery","setSelectedDelivery","setDeliveryInfo","isCityChanging","setIsCityChanging","productGroup","setProductGroup","selectedVariant","setSelectedVariant","selectedParameters","setSelectedParameters","detectingCity","setDetectingCity","cities","getAllImages","currentProduct","getCurrentProduct","images","image","push","Array","isArray","images2","images3","navigate","useNavigate","API_URL","useEffect","productRes","productData","groupRes","ok","_groupData$baseProduc","groupData","baseProductId","_id","productId","parameters","price","groupError","log","fetchProductAndGroup","then","res","data","information","catch","savedCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","address","detectedCity","setItem","enableHighAccuracy","timeout","maximumAge","textAlign","Header","href","Footer","categoryObj","find","cat","category","categoryName","handleParameterChange","advantages","paramName","newParameters","filteredParameters","entries","forEach","key","val","matchingVariant","variants","variant","isActive","every","_ref2","some","_ref3","getCurrentPrice","handleCloseImageModal","fetchDeliveryInfo","encodeURIComponent","cityName","shortDesc","getOptimalImage","preferredSize","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","fontSize","_Fragment","fontWeight","handleImageClick","cursor","src","alt","width","height","maxWidth","img","wordBreak","marginTop","subtitle","param","index","availableValues","values","Set","add","from","getAvailableValuesForParameter","required","border","borderRadius","background","toLowerCase","valueIndex","checked","marginRight","article","minWidth","flexDirection","handleOpenModal","handleBuy","currentPrice","state","originalPrice","boxShadow","transition","transform","opacity","newCity","setTimeout","DeliveryInfo","onDeliverySelect","compact","window","location","minHeight","fontFamily","justifyContent","srcSet","objectFit","borderTop","alignSelf","textDecoration","letterSpacing","verticalAlign","Modal","handleCloseModal","top","left","zIndex","maxHeight","prev","newIndex","right"],"sourceRoot":""}