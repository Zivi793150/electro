{"version":3,"file":"static/js/673.51ddfb2f.chunk.js","mappings":"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","sources":["utils/cache.js","pages/opt/Category.js"],"sourcesContent":["// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { trackPageView, trackCategoryView } from '../../utils/analytics';\r\nimport { fetchWithCache } from '../../utils/cache';\r\nimport '../../styles/Catalog.css';\r\n\r\nconst OptCategory = () => {\r\n  const { category } = useParams();\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(24);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\r\n\r\n  // Функция для получения оптимального размера изображения\r\n  const getOptimalImage = (product, preferredSize = 'medium') => {\r\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\r\n    if (product.productGroup && product.productGroup.coverImage) {\r\n      return product.productGroup.coverImage;\r\n    }\r\n    \r\n    // Затем проверяем обычные изображения товара\r\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\r\n      return product.imageVariants[preferredSize];\r\n    }\r\n    if (product.imageVariants && product.imageVariants.webp) {\r\n      return product.imageVariants[preferredSize];\r\n    }\r\n    return product.image || '/images/products/placeholder.png';\r\n  };\r\n\r\n  // Функция для преобразования кириллического названия категории в латинский ID\r\n  const categoryToId = (categoryName) => {\r\n    const categoryMap = {\r\n      'дрели': 'drills',\r\n      'болгарки': 'bolgarki',\r\n      'шуруповёрты': 'screwdrivers',\r\n      'перфораторы': 'hammers',\r\n      'лобзики': 'jigsaws',\r\n      'лазерные уровни': 'levels',\r\n      'генераторы': 'generators',\r\n      'генераторы для дома': 'generators',\r\n      'дизельные генераторы': 'diesel-generators',\r\n      'дизельные генератор': 'diesel-generators',\r\n      'дизельный генератор': 'diesel-generators',\r\n      'периферийный насос': 'peripheral-pump',\r\n      'центробежный насос': 'centrifugal-pump',\r\n      'аргонно-дуговая сварка': 'argon-arc-welding',\r\n      'бензиновый триммер': 'gasoline-trimmer',\r\n      'глубинный насос': 'deep-pump',\r\n      'отбойный молоток': 'jackhammer',\r\n      'плазморезы': 'plasma-cutter',\r\n      'редукционный клапан': 'reduction-valve',\r\n      'сварочный аппарат': 'welding',\r\n      'сварочный аппараты': 'welding',\r\n      'струйный насос': 'jet-pump',\r\n      'насосы': 'nasosy',\r\n      'насос': 'nasosy',\r\n      'струйный самовсасывающий насос': 'jet-pump',\r\n      'точильный станок': 'bench-grinder',\r\n      'ударная дрель': 'impact-drill',\r\n      'фекальный насос': 'fecal-pump',\r\n      'измерители': 'measuring',\r\n      'дрель': 'drills',\r\n      'дрель-шуруповёрты': 'drills',\r\n      'дрели-шуруповёрты': 'drills',\r\n      'болгарка': 'bolgarki',\r\n      'шуруповёрт': 'screwdrivers',\r\n      'перфоратор': 'hammers',\r\n      'лобзик': 'jigsaws',\r\n      'лазерный уровень': 'levels',\r\n      'генератор': 'generators',\r\n      'измеритель': 'measuring',\r\n      // Новые категории\r\n      'гайковерт ударный': 'impact-wrench',\r\n      'кусторезы': 'hedge-trimmers',\r\n      'миксеры': 'mixers',\r\n      'наборный электроинструмент': 'power-tool-sets',\r\n      'ножовки': 'hacksaws',\r\n      'пила': 'saws',\r\n      'пила цепная': 'chainsaws',\r\n      'полировальные машины': 'polishing-machines',\r\n      'пчёлки': 'bees',\r\n      'сабельная пила': 'reciprocating-saws',\r\n      'секаторы': 'pruners',\r\n      'фрезер': 'routers',\r\n      'электрорубанок': 'electric-planers'\r\n    };\r\n    \r\n    // Нормализуем название: убираем лишние пробелы, приводим к нижнему регистру\r\n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\s+/g, ' ');\r\n    \r\n    // Сначала ищем точное совпадение\r\n    if (categoryMap[normalizedName]) {\r\n      return categoryMap[normalizedName];\r\n    }\r\n    \r\n    // Спец-правило: любые варианты с \"дизель\" + \"генератор\"\r\n    if (normalizedName.includes('дизель') && normalizedName.includes('генератор')) {\r\n      return 'diesel-generators';\r\n    }\r\n    // Если точного совпадения нет, ищем по частичному совпадению (более длинные ключи приоритетнее)\r\n    const entriesByLength = Object.entries(categoryMap).sort((a,b)=>b[0].length-a[0].length);\r\n    for (const [key, value] of entriesByLength) {\r\n      if (normalizedName.includes(key)) {\r\n        return value;\r\n      }\r\n    }\r\n    \r\n    // Если ничего не найдено, создаем ID из названия\r\n    return normalizedName.replace(/[^a-z0-9]/g, '-');\r\n  };\r\n\r\n  // Функция для получения названия категории по ID\r\n  const idToCategory = (categoryId) => {\r\n    const idMap = {\r\n      'drills': 'Дрели',\r\n      'bolgarki': 'Болгарки',\r\n      'screwdrivers': 'Шуруповёрты',\r\n      'hammers': 'Перфораторы',\r\n      'jigsaws': 'Лобзики',\r\n      'levels': 'Лазерные уровни',\r\n      'generators': 'Генераторы',\r\n      'diesel-generators': 'Дизельные генераторы',\r\n      'argon-arc-welding': 'Аргонно-дуговая сварка',\r\n      'gasoline-trimmer': 'Бензиновый триммер',\r\n      'deep-pump': 'Глубинный насос',\r\n      'jackhammer': 'Отбойный молоток',\r\n      'plasma-cutter': 'Плазморезы',\r\n      'reduction-valve': 'Редукционный клапан',\r\n      'welding': 'Сварочные аппараты',\r\n      'jet-pump': 'Струйный насос',\r\n      'bench-grinder': 'Точильный станок',\r\n      'impact-drill': 'Ударная дрель',\r\n      'fecal-pump': 'Фекальный насос',\r\n      'nasosy': 'Насосы',\r\n      'peripheral-pump': 'Периферийный насос',\r\n      'centrifugal-pump': 'Центробежный насос',\r\n      'measuring': 'Измерители',\r\n      // Новые категории\r\n      'impact-wrench': 'Гайковерт ударный',\r\n      'hedge-trimmers': 'Кусторезы',\r\n      'mixers': 'Миксеры',\r\n      'power-tool-sets': 'Наборный электроинструмент',\r\n      'hacksaws': 'Ножовки',\r\n      'saws': 'Пила',\r\n      'chainsaws': 'Пила цепная',\r\n      'polishing-machines': 'Полировальные машины',\r\n      'bees': 'Пчёлки',\r\n      'reciprocating-saws': 'Сабельная пила',\r\n      'pruners': 'Секаторы',\r\n      'routers': 'Фрезер',\r\n      'electric-planers': 'Электрорубанок'\r\n    };\r\n    \r\n    // Если есть точное совпадение в маппинге, возвращаем его\r\n    if (idMap[categoryId]) {\r\n      return idMap[categoryId];\r\n    }\r\n    \r\n    // Если нет точного совпадения, ищем по частичному совпадению\r\n    const foundCategory = categories.find(cat => cat.id === categoryId);\r\n    if (foundCategory) {\r\n      return foundCategory.name;\r\n    }\r\n    \r\n    // Если ничего не найдено, возвращаем ID как есть\r\n    return categoryId;\r\n  };\r\n\r\n  // Статические категории для fallback\r\n  const staticCategories = [\r\n    { id: 'drills', name: 'Дрели' },\r\n    { id: 'bolgarki', name: 'Болгарки' },\r\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\r\n    { id: 'hammers', name: 'Перфораторы' },\r\n    { id: 'jigsaws', name: 'Лобзики' },\r\n    { id: 'levels', name: 'Лазерные уровни' },\r\n    { id: 'generators', name: 'Генераторы' },\r\n    { id: 'diesel-generators', name: 'Дизельные генераторы' },\r\n    { id: 'nasosy', name: 'Насосы' },\r\n    { id: 'peripheral-pump', name: 'Периферийный насос' },\r\n    { id: 'centrifugal-pump', name: 'Центробежный насос' },\r\n    { id: 'measuring', name: 'Измерители' },\r\n    // Новые категории\r\n    { id: 'impact-wrench', name: 'Гайковерт ударный' },\r\n    { id: 'hedge-trimmers', name: 'Кусторезы' },\r\n    { id: 'mixers', name: 'Миксеры' },\r\n    { id: 'power-tool-sets', name: 'Наборный электроинструмент' },\r\n    { id: 'hacksaws', name: 'Ножовки' },\r\n    { id: 'saws', name: 'Пила' },\r\n    { id: 'chainsaws', name: 'Пила цепная' },\r\n    { id: 'polishing-machines', name: 'Полировальные машины' },\r\n    { id: 'bees', name: 'Пчёлки' },\r\n    { id: 'reciprocating-saws', name: 'Сабельная пила' },\r\n    { id: 'pruners', name: 'Секаторы' },\r\n    { id: 'routers', name: 'Фрезер' },\r\n    { id: 'electric-planers', name: 'Электрорубанок' }\r\n  ];\r\n\r\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\r\n\r\n  // Загрузка товаров с кэшированием\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    fetchWithCache(API_URL, {}, 10 * 60 * 1000) // Кэш на 10 минут\r\n      .then(data => {\r\n        setProducts(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError('Ошибка загрузки товаров');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Отслеживаем просмотр страницы категории\r\n  useEffect(() => {\r\n    trackPageView(`opt_category_${category}`);\r\n    \r\n    // Отслеживаем просмотр категории с количеством товаров\r\n    if (filteredProducts.length > 0) {\r\n      const categoryName = categories.find(cat => cat.id === category)?.name || idToCategory(category);\r\n      trackCategoryView(categoryName + ' (Опт)', category, filteredProducts.length);\r\n    }\r\n  }, [category, filteredProducts.length, categories]);\r\n\r\n  // Извлечение категорий из товаров\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      setCategoriesLoading(true);\r\n      \r\n      // Извлекаем уникальные категории из товаров, используя готовые categorySlug\r\n      const categoryMap = new Map();\r\n      \r\n      products.forEach(product => {\r\n        if (product.categorySlug && product.category) {\r\n          // Используем готовый categorySlug как ID и оригинальное название категории\r\n          const categorySlug = product.categorySlug.trim();\r\n          const originalCategory = product.category.trim();\r\n          \r\n          // Если такой categorySlug еще нет, добавляем её\r\n          if (!categoryMap.has(categorySlug)) {\r\n            categoryMap.set(categorySlug, originalCategory);\r\n          }\r\n        }\r\n      });\r\n      \r\n      const uniqueCategories = Array.from(categoryMap.entries()).map(([slug, name]) => ({\r\n        id: slug,\r\n        name: name\r\n      })).sort((a, b) => a.name.localeCompare(b.name, 'ru'));\r\n      \r\n      if (uniqueCategories.length > 0) {\r\n        setCategories(uniqueCategories);\r\n      } else {\r\n        // Fallback: если нет categorySlug, используем старую логику\r\n        const categoryMapOld = new Map();\r\n        \r\n        products.forEach(product => {\r\n          if (product.category) {\r\n            const normalizedCategory = product.category.trim().toLowerCase().replace(/\\s+/g, ' ');\r\n            const originalCategory = product.category.trim();\r\n            \r\n            if (!categoryMapOld.has(normalizedCategory)) {\r\n              categoryMapOld.set(normalizedCategory, originalCategory);\r\n            }\r\n          }\r\n        });\r\n        \r\n        const uniqueCategoriesOld = Array.from(categoryMapOld.values()).sort();\r\n        \r\n        if (uniqueCategoriesOld.length > 0) {\r\n          const realCategories = uniqueCategoriesOld.map(category => ({\r\n            id: categoryToId(category),\r\n            name: category\r\n          }));\r\n          setCategories(realCategories);\r\n        } else {\r\n          setCategories(staticCategories);\r\n        }\r\n      }\r\n      setCategoriesLoading(false);\r\n    }\r\n  }, [products]);\r\n\r\n  // Принудительное применение стилей для карточек\r\n  useEffect(() => {\r\n    const forceStyles = () => {\r\n      const grid = document.querySelector('.catalog-products-grid');\r\n      const cards = document.querySelectorAll('.product-card');\r\n      const images = document.querySelectorAll('.product-image');\r\n      const infos = document.querySelectorAll('.product-info');\r\n      \r\n      if (grid) {\r\n        grid.style.display = 'grid';\r\n        grid.style.gap = '0';\r\n        grid.style.margin = '0';\r\n        grid.style.padding = '0';\r\n        grid.style.borderCollapse = 'collapse';\r\n        grid.style.borderSpacing = '0';\r\n      }\r\n      \r\n      cards.forEach(card => {\r\n        card.style.margin = '-1px';\r\n        card.style.border = '1px solid #e3e6ea';\r\n        card.style.borderRadius = '0';\r\n        card.style.padding = '0';\r\n        card.style.background = '#fff';\r\n        card.style.display = 'flex';\r\n        card.style.flexDirection = 'column';\r\n        card.style.height = '100%';\r\n        card.style.position = 'relative';\r\n        card.style.overflow = 'hidden';\r\n        card.style.boxSizing = 'border-box';\r\n        card.style.minHeight = 'auto';\r\n      });\r\n      \r\n      images.forEach(img => {\r\n        img.style.height = '160px';\r\n        img.style.padding = '0';\r\n        img.style.margin = '0';\r\n      });\r\n      \r\n      infos.forEach(info => {\r\n        info.style.padding = '6px';\r\n        info.style.minHeight = '80px';\r\n      });\r\n    };\r\n\r\n    // Применяем стили сразу и после загрузки\r\n    forceStyles();\r\n    setTimeout(forceStyles, 50);\r\n    setTimeout(forceStyles, 100);\r\n    setTimeout(forceStyles, 200);\r\n    setTimeout(forceStyles, 500);\r\n    setTimeout(forceStyles, 1000);\r\n\r\n    // Применяем стили при изменении размера окна\r\n    const handleResize = () => {\r\n      setTimeout(forceStyles, 100);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [products]);\r\n\r\n  // Фильтруем товары по категории\r\n  const filteredProducts = products.filter(product => {\r\n    // Сначала проверяем готовый categorySlug из MongoDB\r\n    if (product.categorySlug) {\r\n      return product.categorySlug === category;\r\n    }\r\n    \r\n    // Fallback: если categorySlug нет, используем старую логику\r\n    if (!product.category) return false;\r\n    const productCategoryId = categoryToId(product.category.trim());\r\n    \r\n    // Отладочная информация (можно убрать после тестирования)\r\n    if (category === 'drills' && product.category.toLowerCase().includes('дрел')) {\r\n      console.log(`Debug: product.category=\"${product.category}\", productCategoryId=\"${productCategoryId}\", target category=\"${category}\"`);\r\n    }\r\n    \r\n    // Спец-обработка для насосов: жёстко делим периферийные/центробежные\r\n    if (category === 'peripheral-pump') {\r\n      const t = product.category.toLowerCase();\r\n      return t.includes('перифер') && !t.includes('центробеж');\r\n    }\r\n    if (category === 'centrifugal-pump') {\r\n      const t = product.category.toLowerCase();\r\n      return t.includes('центробеж');\r\n    }\r\n\r\n    // Общая группа «насосы»: включаем все товары, где в человеко-читаемой категории встречается «насос»\r\n    if (category === 'nasosy') {\r\n      const t = product.category.toLowerCase();\r\n      return t.includes('насос');\r\n    }\r\n\r\n    // Прямое сравнение ID категорий\r\n    return productCategoryId === category;\r\n  });\r\n\r\n  // Пагинация\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\r\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n\r\n  // Сброс на первую страницу при смене категории\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [category]);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  // Функция для получения названия товара с приоритетом: productGroup -> category -> product name\r\n  const getProductDisplayName = (product) => {\r\n    // 1. Проверяем мастер-товар (productGroup)\r\n    if (product.productGroup && product.productGroup.name) {\r\n      return product.productGroup.name;\r\n    }\r\n    \r\n    // 2. Проверяем название категории\r\n    if (product.category) {\r\n      return product.category;\r\n    }\r\n    \r\n    // 3. Используем название продукта\r\n    return product.name;\r\n  };\r\n\r\n  // Получаем название категории для отображения\r\n  const getCategoryDisplayName = () => {\r\n    // Сначала ищем в списке категорий из товаров\r\n    const foundCategory = categories.find(cat => cat.id === category);\r\n    if (foundCategory) {\r\n      return foundCategory.name;\r\n    }\r\n    \r\n    // Fallback: используем старую логику\r\n    return idToCategory(category);\r\n  };\r\n\r\n  return (\r\n    <div className=\"catalog\">\r\n      <Header />\r\n      <main className=\"catalog-main\">\r\n        <div className=\"container catalog-layout\">\r\n          <aside className=\"catalog-sidebar desktop-sidebar\">\r\n            <h3 className=\"sidebar-title\">Категории</h3>\r\n            {categoriesLoading ? (\r\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\r\n                Загрузка категорий...\r\n              </div>\r\n            ) : (\r\n              <ul className=\"sidebar-categories\">\r\n                {categories.map(cat => (\r\n                  <li key={cat.id}>\r\n                    <Link\r\n                      to={`/opt/catalog/${cat.id}`}\r\n                      className={`sidebar-category-btn${cat.id === category ? ' active' : ''}`}\r\n                      style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\r\n                    >\r\n                      {cat.name}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </aside>\r\n          <div className=\"catalog-content\">\r\n            {/* Хлебные крошки как на странице продукта */}\r\n            <nav className=\"breadcrumbs\" style={{paddingBottom: '12px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\r\n              <a href=\"/opt\">Оптовикам</a>\r\n              <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\r\n              <a href=\"/opt/catalog\">Каталог</a>\r\n              <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\r\n              <span style={{color:'#1a2236', fontWeight:500}}>{getCategoryDisplayName()}</span>\r\n            </nav>\r\n            <h1 className=\"catalog-title\" style={{textAlign: 'left', marginLeft: 0}}>\r\n              {categoriesLoading \r\n                ? 'Каталог товаров' \r\n                : getCategoryDisplayName()\r\n              }\r\n            </h1>\r\n            {loading ? (\r\n              <div style={{padding: 32}}>Загрузка...</div>\r\n            ) : error ? (\r\n              <div style={{color: 'red', padding: 32}}>{error}</div>\r\n            ) : filteredProducts.length === 0 ? (\r\n              <div style={{padding: 32, textAlign: 'center', color: '#666'}}>\r\n                <h2>Товары не найдены</h2>\r\n                <p>В данной категории пока нет товаров.</p>\r\n                <Link to=\"/opt/catalog\" style={{ color: '#007bff', textDecoration: 'none' }}>\r\n                  ← Вернуться в каталог\r\n                </Link>\r\n          </div>\r\n            ) : (\r\n              <div className=\"catalog-products-grid\" style={{gap: 0}}>\r\n                {currentProducts.map(product => (\r\n                  <Link\r\n                    to={product.slug ? `/opt/catalog/${category}/${product.slug}` : `/opt/product/${product._id}`}\r\n                    key={product._id}\r\n                    style={{ textDecoration: 'none', color: 'inherit' }}\r\n                  >\r\n                    <div\r\n                      className=\"product-card kaspi-style mini-product-card\"\r\n                      style={{ cursor: 'pointer', minHeight: 'auto', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', border: '1px solid #e3e6ea', margin: '-1px' }}\r\n                    >\r\n                      <div className=\"product-image\" style={{height: '160px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                        <picture style={{width: '100%', height: '100%'}}>\r\n                          <source \r\n                            srcSet={getOptimalImage(product, 'webp')} \r\n                            type=\"image/webp\"\r\n                          />\r\n                          <img \r\n                            src={getOptimalImage(product, 'medium')} \r\n                            alt={product.name} \r\n                            style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \r\n                            loading=\"lazy\"\r\n                            width=\"260\"\r\n                            height=\"160\"\r\n                          />\r\n                        </picture>\r\n          </div>\r\n                      <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\r\n                      <div className=\"product-info\" style={{padding: '0 8px 6px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight: 'auto'}}>\r\n                        <span style={{fontSize: '1rem', fontWeight: 700, color: '#1a2236', margin: 0, lineHeight: 1.2, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{getProductDisplayName(product)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n              ))}\r\n            </div>\r\n            )}\r\n            \r\n            {/* Пагинация */}\r\n            {totalPages > 1 && (\r\n              <div className=\"pagination-container\" style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                marginTop: '40px',\r\n                marginBottom: '20px',\r\n                gap: '8px'\r\n              }}>\r\n                {/* Кнопка \"Предыдущая\" */}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  style={{\r\n                    padding: '8px 16px',\r\n                    border: '1px solid #e3e6ea',\r\n                    background: currentPage === 1 ? '#f5f5f5' : '#fff',\r\n                    color: currentPage === 1 ? '#999' : '#333',\r\n                    cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\r\n                    borderRadius: '4px',\r\n                    fontSize: '14px',\r\n                    fontWeight: '500'\r\n                  }}\r\n                >\r\n                  ← Назад\r\n                </button>\r\n                \r\n                {/* Номера страниц */}\r\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => {\r\n                  // Показываем только первые 5 страниц, последние 5 и текущую с соседними\r\n                  if (\r\n                    pageNumber === 1 ||\r\n                    pageNumber === totalPages ||\r\n                    (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\r\n                  ) {\r\n                    return (\r\n                      <button\r\n                        key={pageNumber}\r\n                        onClick={() => handlePageChange(pageNumber)}\r\n                        style={{\r\n                          padding: '8px 12px',\r\n                          border: '1px solid #e3e6ea',\r\n                          background: currentPage === pageNumber ? '#e86c0a' : '#fff',\r\n                          color: currentPage === pageNumber ? '#fff' : '#333',\r\n                          cursor: 'pointer',\r\n                          borderRadius: '4px',\r\n                          fontSize: '14px',\r\n                          fontWeight: '500',\r\n                          minWidth: '40px'\r\n                        }}\r\n                      >\r\n                        {pageNumber}\r\n                      </button>\r\n                    );\r\n                  } else if (\r\n                    pageNumber === currentPage - 2 ||\r\n                    pageNumber === currentPage + 2\r\n                  ) {\r\n                    return (\r\n                      <span\r\n                        key={pageNumber}\r\n                        style={{\r\n                          padding: '8px 4px',\r\n                          color: '#999',\r\n                          fontSize: '14px'\r\n                        }}\r\n                      >\r\n                        ...\r\n                      </span>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })}\r\n                \r\n                {/* Кнопка \"Следующая\" */}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  style={{\r\n                    padding: '8px 16px',\r\n                    border: '1px solid #e3e6ea',\r\n                    background: currentPage === totalPages ? '#f5f5f5' : '#fff',\r\n                    color: currentPage === totalPages ? '#999' : '#333',\r\n                    cursor: currentPage === totalPages ? 'not-allowed' : 'pointer',\r\n                    borderRadius: '4px',\r\n                    fontSize: '14px',\r\n                    fontWeight: '500'\r\n                  }}\r\n                >\r\n                  Вперед →\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptCategory;\r\n"],"names":["apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","OptCategory","category","useParams","products","setProducts","useState","loading","setLoading","setError","currentPage","setCurrentPage","productsPerPage","categories","setCategories","categoriesLoading","setCategoriesLoading","getOptimalImage","product","preferredSize","productGroup","coverImage","imageVariants","webp","image","categoryToId","categoryName","categoryMap","normalizedName","toLowerCase","trim","replace","includes","entriesByLength","Object","entries","sort","a","b","value","idToCategory","categoryId","idMap","foundCategory","find","cat","id","name","staticCategories","useEffect","then","catch","err","trackPageView","filteredProducts","_categories$find","trackCategoryView","forEach","categorySlug","originalCategory","has","uniqueCategories","Array","from","map","_ref","slug","localeCompare","categoryMapOld","normalizedCategory","uniqueCategoriesOld","values","realCategories","forceStyles","grid","document","querySelector","cards","querySelectorAll","images","infos","style","display","gap","margin","padding","borderCollapse","borderSpacing","card","border","borderRadius","background","flexDirection","height","position","overflow","boxSizing","minHeight","img","info","setTimeout","handleResize","window","addEventListener","removeEventListener","filter","productCategoryId","t","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","handlePageChange","pageNumber","scrollTo","top","behavior","getProductDisplayName","getCategoryDisplayName","_jsxs","className","children","_jsx","Header","textAlign","color","Link","to","textDecoration","width","paddingBottom","alignItems","flexWrap","href","fontSize","fontWeight","marginLeft","_id","cursor","fontFamily","justifyContent","srcSet","type","src","alt","objectFit","maxWidth","borderTop","alignSelf","lineHeight","marginTop","marginBottom","onClick","disabled","_","index","minWidth","Footer"],"sourceRoot":""}