{"version":3,"file":"static/js/929.0fe520d4.chunk.js","mappings":"qKAGA,MAAMA,EAAU,0CACVC,EAAY,GAAAC,OAAMF,EAAO,mBACzBG,EAAU,GAAAD,OAAMF,EAAO,mBAG7B,SAASI,EAAuBC,GAAmF,IAAlF,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAW,EAAK,YAAEC,EAAc,mFAAkBL,EAC9G,MAAOM,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAE7BG,EAAYC,GAAC,GAAAf,OAAQe,EAAEC,MAAIhB,OAAGe,EAAEE,QAAO,0BAAAjB,OAAce,EAAEE,QAAO,KAAM,IAAEjB,OAAGe,EAAEG,MAAK,WAAAlB,OAASe,EAAEG,MAAK,WAAO,IACvGC,EAAWC,MAAMC,QAAQjB,GAC3BA,EAASkB,OAAOP,IACd,MAAMQ,EAAIX,EAAMY,OAAOC,cACvB,IAAKF,EAAG,OAAO,EACf,MAAMP,GAAQD,EAAEC,MAAQ,IAAIS,cACtBR,GAAWF,EAAEE,SAAW,IAAIQ,cAClC,OAAOT,EAAKU,SAASH,IAAMN,EAAQS,SAASH,KAE9C,GAEEI,EAAcC,GACdrB,EAAiBa,MAAMC,QAAQhB,IAAUA,EAAMwB,IAAIC,QAAQJ,SAASI,OAAOF,IACxEE,OAAOzB,GAAS,MAAQyB,OAAOF,GAqBlCG,EAAmBxB,GACpBa,MAAMC,QAAQhB,GAASA,EAAQ,IAAIwB,IAAID,GAAMxB,EAAS4B,KAAKjB,GAAKe,OAAOf,EAAEkB,OAASH,OAAOF,KAAMN,OAAOY,SACtG9B,EAAS4B,KAAKjB,GAAKe,OAAOf,EAAEkB,OAASH,OAAOzB,KAAW,KAE5D,OACE8B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYC,OAASC,IAAaA,EAAEC,cAAcC,SAASF,EAAEG,gBAAgB/B,GAAQ,IAAUgC,SAAA,EAC5GP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAaO,QAASA,IAAMjC,GAASD,GAAMiC,SAAA,CACvDnC,GACCqC,EAAAA,EAAAA,KAAA,OAAKR,UAAU,WAAUM,SACtBX,EAAiBc,OAAS,EAAId,EAAiBF,IAAId,IAClDoB,EAAAA,EAAAA,MAAA,QAAkBC,UAAU,UAAUO,QAAUL,IAAQA,EAAEQ,kBAhBlDlB,KAClB,IAAKrB,EAAU,OACf,MAAMwC,EAAU3B,MAAMC,QAAQhB,GAASA,EAAMwB,IAAIC,QAAU,GAC3DxB,EAASyC,EAAQzB,OAAO0B,GAAKA,IAAMlB,OAAOF,MAa6CqB,CAAWlC,EAAEkB,MAAQS,SAAA,CAC/F5B,EAASC,GAAG,KAAC6B,EAAAA,EAAAA,KAAA,QAAMR,UAAU,OAAMM,SAAC,WAD5B3B,EAAEkB,OAGVW,EAAAA,EAAAA,KAAA,QAAMR,UAAU,iBAAgBM,SAAElC,OAGzCoC,EAAAA,EAAAA,KAAA,QAAMR,UAAWL,EAAmB,WAAa,iBAAiBW,SAC/DX,EAAmBjB,EAASiB,GAAoBvB,KAGrDoC,EAAAA,EAAAA,KAAA,QAAMR,UAAU,WAAUM,SAAC,cAE5BjC,IACC0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaM,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,SACER,UAAU,YACV5B,YAAY,mKACZH,MAAOO,EACPN,SAAWgC,GAAMzB,EAASyB,EAAEY,OAAO7C,OACnC8C,WAAS,KAEXhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASM,SAAA,CACD,IAApBvB,EAAS0B,SACRD,EAAAA,EAAAA,KAAA,OAAKR,UAAU,WAAUM,SAAC,iGAE3BvB,EAASU,IAAId,IACZoB,EAAAA,EAAAA,MAAA,UAEEiB,KAAK,SACLhB,UAAS,UAAApC,OAAY2B,EAAWZ,EAAEkB,KAAO,YAAc,IACvDU,QAASA,IA1DLf,KAChB,GAAIrB,EAAU,CACZ,MAAMwC,EAAU3B,MAAMC,QAAQhB,GAASA,EAAMwB,IAAIC,QAAU,GACrDuB,EAAQvB,OAAOF,GACf0B,EAAOP,EAAQrB,SAAS2B,GAASN,EAAQzB,OAAO0B,GAAKA,IAAMK,GAAS,IAAIN,EAASM,GACvF/C,EAASgD,EACX,MACEhD,EAASwB,OAAOF,IAChBlB,GAAQ,IAkDiB6C,CAASxC,EAAEkB,KAAKS,SAAA,CAE9BnC,IACCqC,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,WAAWI,UAAQ,EAACC,QAAS9B,EAAWZ,EAAEkB,QAExDW,EAAAA,EAAAA,KAAA,QAAMR,UAAU,gBAAeM,SAAE5B,EAASC,OARrCA,EAAEkB,cAgBvB,CAq3CA,QAn3CA,WACE,MAAO7B,EAAUsD,IAAe/C,EAAAA,EAAAA,UAAS,KAClCgD,EAAQC,IAAajD,EAAAA,EAAAA,UAAS,KAC9BkD,EAASC,IAAcnD,EAAAA,EAAAA,WAAS,IAChCoD,EAAOC,IAAYrD,EAAAA,EAAAA,UAAS,KAC5BsD,EAAUC,IAAevD,EAAAA,EAAAA,WAAS,IAClCwD,EAAcC,IAAmBzD,EAAAA,EAAAA,UAAS,OAC1CoB,EAAkBsC,IAAuB1D,EAAAA,EAAAA,UAAS,KAClD2D,EAAUC,IAAe5D,EAAAA,EAAAA,UAAS,CACvCK,KAAM,GACNwD,YAAa,GACbC,cAAe,GACfC,WAAY,GACZC,SAAU,KAGNC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,WAAU,KACRC,KACC,IAEH,MAAMA,EAAYC,UAChB,IACElB,GAAW,GACXE,EAAS,IAET,MAAOiB,EAAaC,SAAmBC,QAAQC,IAAI,CACjDC,MAAMtF,GACNsF,MAAMpF,KAGR,IAAKgF,EAAYK,GAAI,CACnB,MAAMC,QAAkBN,EAAYO,OACpC,MAAM,IAAIC,MAAM,qIAADzF,OAA6BiF,EAAYS,OAAM,OAAA1F,OAAMuF,GACtE,CAEA,IAAKL,EAAUI,GAAI,CACjB,MAAMC,QAAkBL,EAAUM,OAClC,MAAM,IAAIC,MAAM,yHAADzF,OAA2BkF,EAAUQ,OAAM,OAAA1F,OAAMuF,GAClE,CAEA,MAAOI,EAAcC,SAAoBT,QAAQC,IAAI,CACnDH,EAAYY,OACZX,EAAUW,SAGXC,QAAQC,IAAI,2GAAuBJ,GACnCG,QAAQC,IAAI,2GAAuBH,GAEpClC,EAAYiC,GACZ/B,EAAUgC,EACZ,CAAE,MAAOI,GACPF,QAAQ/B,MAAM,8HAA2BiC,GACzChC,EAASgC,EAAIC,QACf,CAAC,QACCnC,GAAW,EACb,GAGIoC,EAAoBA,KACxB9B,EAAgB,MAChBG,EAAY,CACVvD,KAAM,GACNwD,YAAa,GACbC,cAAe,GACfC,WAAY,GACZC,SAAU,KAEZT,GAAY,IA8FRiC,EAAkBA,CAACC,EAAOC,EAAOhG,KACrCkE,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP5B,WAAY4B,EAAK5B,WAAW7C,IAAI,CAAC2E,EAAOC,IACtCA,IAAML,GAAKG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQC,GAAK,IAAE,CAACH,GAAQhG,IAAUmG,OAwD7CE,EAAgBA,CAACN,EAAOC,EAAOhG,KACnCkE,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP3B,SAAU2B,EAAK3B,SAAS9C,IAAI,CAAC8E,EAASF,IACpCA,IAAML,GAAKG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQI,GAAO,IAAE,CAACN,GAAQhG,IAAUsG,OAK/CC,EAAyBA,CAACC,EAAcC,EAAWzG,KACvDkE,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP3B,SAAU2B,EAAK3B,SAAS9C,IAAI,CAAC8E,EAASF,IACpCA,IAAMI,GAAYN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbI,GAAO,IACVjC,YAAU6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOI,EAAQjC,YAAU,IAAE,CAACoC,GAAYzG,MAChDsG,OA8CV,OAAI9C,IAAYI,GAEZrB,EAAAA,EAAAA,KAAA,OAAKR,UAAU,uBAAsBM,UACnCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBM,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,OAAKR,UAAU,aACfQ,EAAAA,EAAAA,KAAA,KAAAF,SAAG,mGAOTP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBM,SAAA,EAEnCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBM,SAAA,EAChCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBM,SAAA,EAC7BP,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcM,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,OAAMM,SAAC,iBAAS,2KAGlCE,EAAAA,EAAAA,KAAA,KAAGR,UAAU,kBAAiBM,SAAC,wUAIjCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBM,SAAA,EAC/BP,EAAAA,EAAAA,MAAA,UAAQQ,QAASuD,EAAmB9D,UAAU,aAAYM,SAAA,EACxDE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,WAAUM,SAAC,MAAQ,sFAGnCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWM,SAAA,EACxBE,EAAAA,EAAAA,KAAA,UAAQD,QAASA,IAAMiC,EAAS,mBAAoBxC,UAAU,uBAAsBM,SAAC,uDAGrFE,EAAAA,EAAAA,KAAA,UAAQD,QAASA,IAAMiC,EAAS,mBAAoBxC,UAAU,uBAAsBM,SAAC,yEAGrFE,EAAAA,EAAAA,KAAA,UAAQD,QAASA,IAAMiC,EAAS,oBAAqBxC,UAAU,wBAAuBM,SAAC,yEAGvFE,EAAAA,EAAAA,KAAA,UAAQD,QAASA,IAAMiC,EAAS,wBAAyBxC,UAAU,qBAAoBM,SAAC,4HAQ7FqB,IACC5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaM,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,aAAYM,SAAC,kBAC7BE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,aAAYM,SAAEqB,KAC9BnB,EAAAA,EAAAA,KAAA,UAAQD,QAASA,IAAMqB,EAAS,IAAK5B,UAAU,cAAaM,SAAC,aAKjEP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBM,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,MAAIR,UAAU,gBAAeM,SAAC,mKAEX,IAAlBiB,EAAOd,QACNV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaM,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKR,UAAU,aAAYM,SAAC,kBAC5BE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,mJACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,8QACHE,EAAAA,EAAAA,KAAA,UAAQD,QAASuD,EAAmB9D,UAAU,YAAWM,SAAC,wFAK5DE,EAAAA,EAAAA,KAAA,OAAKR,UAAU,cAAaM,SACzBiB,EAAO9B,IAAIkF,IAAK,IAAAC,EAAA,OACf7E,EAAAA,EAAAA,MAAA,OAAqBC,UAAU,aAAYM,SAAA,EACzCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaM,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,MAAIR,UAAU,aAAYM,SAAEqE,EAAM/F,QAClCmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcM,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,UACED,QAASA,IAjSJoE,KACvBjB,QAAQC,IAAI,2GAAuBgB,GACnC3C,EAAgB2C,GAGhB,MAAME,GAAqBF,EAAMpC,UAAY,IAAI9C,IAAI8E,IACnDb,QAAQC,IAAI,6HAA0BY,GAGtC,IAAIO,EAAY,GAWhB,MAViC,kBAAtBP,EAAQO,UACjBA,EAAYP,EAAQO,UACXP,EAAQO,WAAaP,EAAQO,UAAUjF,IAChDiF,EAAYP,EAAQO,UAAUjF,IACrB0E,EAAQO,WAA0C,kBAAtBP,EAAQO,YAC7CA,EAAYP,EAAQO,UAAUC,YAGhCrB,QAAQC,IAAI,gFAA0BmB,IAEtCX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACGI,GAAO,IACRO,UAAWA,EACbxC,WAAYiC,EAAQjC,YAAc,CAAC,MAKrC,IAAID,EAAgB,GACe,kBAAxBsC,EAAMtC,cACfA,EAAgBsC,EAAMtC,cACbsC,EAAMtC,eAAiBsC,EAAMtC,cAAcxC,IACpDwC,EAAgBsC,EAAMtC,cAAcxC,IAC3B8E,EAAMtC,eAAgD,kBAAxBsC,EAAMtC,gBAC7CA,EAAgBsC,EAAMtC,cAAc0C,YAGtCrB,QAAQC,IAAI,oFAA8BtB,GAC1CqB,QAAQC,IAAI,6HAA0BkB,GAEtC1C,EAAY,CACVvD,KAAM+F,EAAM/F,KACZwD,YAAauC,EAAMvC,aAAe,GAClCC,cAAeA,EACfC,WAAYqC,EAAMrC,YAAc,GAChCC,SAAUsC,IAEZ/C,GAAY,IAkPqBkD,CAAgBL,GAC/B3E,UAAU,sBACViF,MAAM,iFAAe3E,SACtB,kBAGDE,EAAAA,EAAAA,KAAA,UACED,QAASA,IAtPHqC,WACxB,GAAKsC,OAAOC,QAAQ,yQAIpB,IAKE,WAJuBlC,MAAM,GAADrF,OAAIC,EAAU,KAAAD,OAAIwH,GAAW,CACvDC,OAAQ,YAGInC,GACZ,MAAM,IAAIG,MAAM,oIAGZV,GACR,CAAE,MAAOiB,GACPhC,EAASgC,EAAIC,QACf,GAqOiCyB,CAAkBX,EAAM9E,KACvCG,UAAU,wBACViF,MAAM,6CAAS3E,SAChB,6BAMJqE,EAAMvC,cACL5B,EAAAA,EAAAA,KAAA,KAAGR,UAAU,mBAAkBM,SAAEqE,EAAMvC,eAGzCrC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcM,SAAA,EAC3BP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWM,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,aAAYM,SAAC,gFAC7BE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,aAAYM,UAAqB,QAAnBsE,EAAAD,EAAMtC,qBAAa,IAAAuC,OAAA,EAAnBA,EAAqBhG,OAAQ,0DAG7DmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWM,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,aAAYM,SAAC,6DAC7BE,EAAAA,EAAAA,KAAA,OAAKR,UAAU,kBAAiBM,SAC7BqE,EAAMrC,WAAW7C,IAAI,CAAC2E,EAAOJ,KAC5BjE,EAAAA,EAAAA,MAAA,QAAkBC,UAAU,gBAAeM,SAAA,CACxC8D,EAAMxF,KAAK,KAAGwF,EAAMpD,KAAK,IACzBoD,EAAMmB,WAAY/E,EAAAA,EAAAA,KAAA,QAAMR,UAAU,gBAAeM,SAAC,QAF1C0D,UAQjBjE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWM,SAAA,EACxBE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,aAAYM,SAAC,uDAC7BP,EAAAA,EAAAA,MAAA,QAAMC,UAAU,iBAAgBM,SAAA,CAAEqE,EAAMpC,SAAS9B,OAAO,4BA7CpDkE,EAAM9E,YAuDvBgC,IACCrB,EAAAA,EAAAA,KAAA,OAAKR,UAAU,gBAAgBO,QAASA,IAAMuB,GAAY,GAAOxB,UAC/DP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBO,QAAUL,GAAMA,EAAEQ,kBAAkBJ,SAAA,EACjEP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcM,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,MAAIR,UAAU,cAAaM,SACxByB,EAAe,sHAAyB,sIAE3CvB,EAAAA,EAAAA,KAAA,UAAQD,QAASA,IAAMuB,GAAY,GAAQ9B,UAAU,cAAaM,UAChEE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,eAIVP,EAAAA,EAAAA,MAAA,QAAMyF,SAnLK5C,UACnB1C,EAAEuF,iBAEF,IACE/D,GAAW,GACXE,EAAS,IAGT,MAAM8D,GAAUvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXjC,GAAQ,IACXK,SAAUL,EAASK,SAAS9C,IAAI8E,IAAOJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClCI,GAAO,IACVjC,WAAYiC,EAAQjC,YAAc,CAAC,OAIjCqD,QAAiB1C,MACrBlB,EAAY,GAAAnE,OAAMC,EAAU,KAAAD,OAAImE,EAAalC,KAAQhC,EACrD,CACEwH,OAAQtD,EAAe,MAAQ,OAC/B6D,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,KAIzB,IAAKC,EAASzC,GAAI,CAChB,MAAMC,QAAkBwC,EAASvC,OACjC,MAAM,IAAIC,MAAM,4LAADzF,OAAuC+H,EAASrC,OAAM,OAAA1F,OAAMuF,GAC7E,OAEMR,IACNb,GAAY,GACZE,EAAgB,KAClB,CAAE,MAAO4B,GACPF,QAAQ/B,MAAM,qGAAsBiC,GACpChC,EAASgC,EAAIC,QACf,CAAC,QACCnC,GAAW,EACb,GA6IsC1B,UAAU,kBAAiBM,SAAA,EAErD0F,GAQFjG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcM,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,MAAIR,UAAU,gBAAeM,SAAC,mHAC9BP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWM,SAAA,EACxBP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYM,SAAA,EACzBP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYM,SAAA,CAAC,0FACZE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,WAAUM,SAAC,UAE7CE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACL/C,MAAOiE,EAAStD,KAChBV,SAAWgC,GAAMiC,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEtF,KAAMsB,EAAEY,OAAO7C,SAChE+B,UAAU,aACV5B,YAAY,oHACZmH,UAAQ,QAIZxF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYM,SAAA,EACzBE,EAAAA,EAAAA,KAAA,SAAOR,UAAU,aAAYM,SAAC,sDAC9BE,EAAAA,EAAAA,KAAA,YACEvC,MAAOiE,EAASE,YAChBlE,SAAWgC,GAAMiC,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAE9B,YAAalC,EAAEY,OAAO7C,SACvE+B,UAAU,gBACV5B,YAAY,mIACZ6H,KAAK,UAITlG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYM,SAAA,EACzBP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYM,SAAA,CAAC,8EACdE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,WAAUM,SAAC,UAE3CP,EAAAA,EAAAA,MAAA,UACE9B,MAAOiE,EAASG,cAChBnE,SAAWgC,GAAMiC,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAE7B,cAAenC,EAAEY,OAAO7C,SACzE+B,UAAU,cACVuF,UAAQ,EAAAjF,SAAA,EAERE,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,GAAEqC,SAAC,oFAChBtC,EAASyB,IAAIyG,IACZnG,EAAAA,EAAAA,MAAA,UAA0B9B,MAAOiI,EAAQrG,IAAIS,SAAA,CAC1C4F,EAAQtH,KAAK,IAAEsH,EAAQrH,QAAO,yBAAAjB,OAAasI,EAAQrH,QAAO,KAAM,KADtDqH,EAAQrG,mBAU/BE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcM,SAAA,EAC3BP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBM,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,MAAIR,UAAU,gBAAeM,SAAC,6GAC9BP,EAAAA,EAAAA,MAAA,UAAQiB,KAAK,SAAST,QAxVjB4F,KACnBhE,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP5B,WAAY,IAAI4B,EAAK5B,WAAY,CAC/B1D,KAAM,GACNoC,KAAM,SACNoF,OAAQ,CAAC,IACTb,UAAU,EACVc,kBAAkB,EAClBC,qBAAsB,SA+UiCtG,UAAU,UAASM,SAAA,EAC9DE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,MAAQ,2GAIjB4B,EAASI,WAAW7C,IAAI,CAAC2E,EAAOJ,KAAK,IAAAuC,EAAA,OACpCxG,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,iBAAgBM,SAAA,EACzCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBM,SAAA,EAC/BP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBM,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACL5C,YAAY,mMACZH,MAAOmG,EAAMxF,KACbV,SAAWgC,GAAM6D,EAAgBC,EAAO,OAAQ9D,EAAEY,OAAO7C,OACzD+B,UAAU,aACVuF,UAAQ,KAEVxF,EAAAA,EAAAA,MAAA,UACE9B,MAAOmG,EAAMpD,KACb9C,SAAWgC,GAAM6D,EAAgBC,EAAO,OAAQ9D,EAAEY,OAAO7C,OACzD+B,UAAU,cAAaM,SAAA,EAEvBE,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,SAAQqC,SAAC,uGACvBE,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,QAAOqC,SAAC,yEACtBE,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,WAAUqC,SAAC,mDAE3BP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,iBAAgBM,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLK,QAA+B,QAAxBkF,EAAEnC,EAAMiC,wBAAgB,IAAAE,GAAAA,EAC/BrI,SAAWgC,GAAM6D,EAAgBC,EAAO,mBAAoB9D,EAAEY,OAAOO,YAEvEb,EAAAA,EAAAA,KAAA,QAAAF,SAAM,8GAGVP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBM,SAAA,EAChCP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,iBAAgBM,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLK,QAAS+C,EAAMmB,SACfrH,SAAWgC,GAAM6D,EAAgBC,EAAO,WAAY9D,EAAEY,OAAOO,YAE/Db,EAAAA,EAAAA,KAAA,QAAAF,SAAM,iFAERE,EAAAA,EAAAA,KAAA,UACEQ,KAAK,SACLT,QAASA,IAxXRyD,KACvB7B,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP5B,WAAY4B,EAAK5B,WAAWpD,OAAO,CAACsH,EAAGnC,IAAMA,IAAML,OAqXhByC,CAAgBzC,GAC/BhE,UAAU,aACViF,MAAM,8FAAkB3E,SACzB,8BAMLP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBM,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SAAOR,UAAU,aAAYM,SAAC,8GAC9BP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaM,SAAA,CACzB8D,EAAMgC,OAAO3G,IAAI,CAACxB,EAAOyI,KACxB3G,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,aAAYM,SAAA,EAC1CE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACL/C,MAAOA,EACPC,SAAWgC,GApWVyG,EAACC,EAAYF,EAAYzI,KACpDkE,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP5B,WAAY4B,EAAK5B,WAAW7C,IAAI,CAAC2E,EAAOC,IACtCA,IAAMuC,GAAUzC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXC,GAAK,IACRgC,OAAQhC,EAAMgC,OAAO3G,IAAI,CAACmB,EAAGiG,IAAOA,IAAOH,EAAazI,EAAQ2C,KAC9DwD,OA6VmCuC,CAAqB3C,EAAO0C,EAAYxG,EAAEY,OAAO7C,OAClE+B,UAAU,aACV5B,YAAY,sDAEdoC,EAAAA,EAAAA,KAAA,UACEQ,KAAK,SACLT,QAASA,IAtXRuG,EAACF,EAAYF,KACxCvE,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP5B,WAAY4B,EAAK5B,WAAW7C,IAAI,CAAC2E,EAAOC,IACtCA,IAAMuC,GAAUzC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXC,GAAK,IACRgC,OAAQhC,EAAMgC,OAAOlH,OAAO,CAACsH,EAAGK,IAAOA,IAAOH,KAC5CtC,OA+WiC0C,CAAqB9C,EAAO0C,GAC3C1G,UAAU,mBACViF,MAAM,8FAAkB3E,SACzB,WAbOoG,KAkBZlG,EAAAA,EAAAA,KAAA,UACEQ,KAAK,SACLT,QAASA,KAAMwG,OAzYZH,EAyY8B5C,OAxYvD7B,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP5B,WAAY4B,EAAK5B,WAAW7C,IAAI,CAAC2E,EAAOC,IACtCA,IAAMuC,GAAUzC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQC,GAAK,IAAEgC,OAAQ,IAAIhC,EAAMgC,OAAQ,MAAQhC,MAJ5CwC,OA0YH5G,UAAU,gBAAeM,SAC1B,+GAMLP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBM,SAAA,EACnCE,EAAAA,EAAAA,KAAA,SAAOR,UAAU,aAAYM,SAAC,sKAC9BE,EAAAA,EAAAA,KAAC1C,EAAuB,CACtBE,SAAUA,EACVG,UAAQ,EACRF,MAAOmG,EAAMkC,sBAAwB,GACrCpI,SAAW8I,GAAQjD,EAAgBC,EAAO,uBAAwBgD,GAClE5I,YAAY,8FAEdoC,EAAAA,EAAAA,KAAA,OAAKyG,MAAO,CAACC,SAAU,GAAIC,MAAO,UAAWC,UAAW,GAAG9G,SAAC,wgBA1FtD0D,SAmGdjE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcM,SAAA,EAC3BP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBM,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,MAAIR,UAAU,gBAAeM,SAAC,iGAC9BP,EAAAA,EAAAA,MAAA,UAAQiB,KAAK,SAAST,QArYnB8G,KACjBlF,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP3B,SAAU,IAAI2B,EAAK3B,SAAU,CAC3BuC,UAAW,GACXxC,WAAY,CAAC,EACbgF,UAAU,QA+X2CtH,UAAU,UAASM,SAAA,EAC5DE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,MAAQ,2GAIjB4B,EAASK,SAAS9C,IAAI,CAAC8E,EAASP,KAC/BjE,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,eAAcM,SAAA,EACvCP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBM,SAAA,EACNE,EAAAA,EAAAA,KAAA,OAAKR,UAAU,iBAAgBM,UACpDE,EAAAA,EAAAA,KAAC1C,EAAuB,CACtBE,SAAUA,EACVC,MAAOsG,EAAQO,WAAa,GAC5B5G,SAAWsB,GAAO8E,EAAcN,EAAO,YAAaxE,GACpDpB,YAAY,uFAGhB2B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBM,SAAA,EAC9BP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,iBAAgBM,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLK,QAASkD,EAAQ+C,SACjBpJ,SAAWgC,GAAMoE,EAAcN,EAAO,WAAY9D,EAAEY,OAAOO,YAE7Db,EAAAA,EAAAA,KAAA,QAAAF,SAAM,mDAERE,EAAAA,EAAAA,KAAA,UACEQ,KAAK,SACLT,QAASA,IArZVyD,KACrB7B,EAAY+B,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP3B,SAAU2B,EAAK3B,SAASrD,OAAO,CAACsH,EAAGnC,IAAMA,IAAML,OAkZZuD,CAAcvD,GAC7BhE,UAAU,aACViF,MAAM,8FAAkB3E,SACzB,8BAMLE,EAAAA,EAAAA,KAAA,OAAKR,UAAU,qBAAoBM,SAChC4B,EAASI,WAAW7C,IAAI,CAAC2E,EAAOwC,KAC/B7G,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,gBAAeM,SAAA,EAC7CP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYM,SAAA,CAAE8D,EAAMxF,KAAK,OAC1B,WAAfwF,EAAMpD,OACLjB,EAAAA,EAAAA,MAAA,UACE9B,MAAOsG,EAAQjC,WAAW8B,EAAMxF,OAAS,GACzCV,SAAWgC,GAAMsE,EAAuBR,EAAOI,EAAMxF,KAAMsB,EAAEY,OAAO7C,OACpE+B,UAAU,cACVuF,SAAUnB,EAAMmB,SAASjF,SAAA,EAEzBE,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,GAAEqC,SAAC,qDAChB8D,EAAMgC,OAAO3G,IAAI,CAACxB,EAAOyI,KACxBlG,EAAAA,EAAAA,KAAA,UAAyBvC,MAAOA,EAAMqC,SACnCrC,GADUyI,OAMH,UAAftC,EAAMpD,OACLR,EAAAA,EAAAA,KAAA,OAAKR,UAAU,cAAaM,SACzB8D,EAAMgC,OAAO3G,IAAI,CAACxB,EAAOyI,KACxB3G,EAAAA,EAAAA,MAAA,SAAwBC,UAAU,cAAaM,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,QACLpC,KAAI,GAAAhB,OAAKoG,EAAK,KAAApG,OAAIwG,EAAMxF,MACxBX,MAAOA,EACPoD,QAASkD,EAAQjC,WAAW8B,EAAMxF,QAAUX,EAC5CC,SAAWgC,GAAMsE,EAAuBR,EAAOI,EAAMxF,KAAMsB,EAAEY,OAAO7C,OACpEsH,SAAUnB,EAAMmB,YAElB/E,EAAAA,EAAAA,KAAA,QAAMR,UAAU,aAAYM,SAAErC,MATpByI,MAcF,aAAftC,EAAMpD,OACLjB,EAAAA,EAAAA,MAAA,SAAOC,UAAU,iBAAgBM,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLK,QAA4C,SAAnCkD,EAAQjC,WAAW8B,EAAMxF,MAClCV,SAAWgC,GAAMsE,EAAuBR,EAAOI,EAAMxF,KAAMsB,EAAEY,OAAOO,QAAU,OAAS,YAEzFb,EAAAA,EAAAA,KAAA,QAAAF,SAAO8D,EAAMxF,YAzCTgI,QAhCN5C,QAoFdjE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcM,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAAST,QAASA,IAAMuB,GAAY,GAAQ9B,UAAU,aAAYM,SAAC,0CAGhFE,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAAShB,UAAU,aAAawH,SAAU/F,EAAQnB,SAC5DmB,GACC1B,EAAAA,EAAAA,MAAA0H,EAAAA,SAAA,CAAAnH,SAAA,EACEE,EAAAA,EAAAA,KAAA,QAAMR,UAAU,kBAAuB,qEAIzC+B,EAAe,wFAAoB,gGASjDvB,EAAAA,EAAAA,KAAA,SAAOkH,KAAG,EAAApH,SAAA,0ifAirBhB,C","sources":["admin/ProductVariations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = 'https://electro-1-vjdu.onrender.com/api';\r\nconst PRODUCTS_URL = `${API_URL}/admin/products`; // Используем админский endpoint для получения всех товаров\r\nconst GROUPS_URL = `${API_URL}/product-groups`;\r\n\r\n// Поисковый селект для выбора товара(ов)\r\nfunction SearchableProductSelect({ products, value, onChange, multiple = false, placeholder = 'Выберите товар' }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [query, setQuery] = useState('');\r\n\r\n  const getLabel = (p) => `${p.name}${p.article ? ` (арт.: ${p.article})` : ''}${p.price ? ` — ${p.price} ₸` : ''}`;\r\n  const filtered = Array.isArray(products)\r\n    ? products.filter(p => {\r\n        const q = query.trim().toLowerCase();\r\n        if (!q) return true;\r\n        const name = (p.name || '').toLowerCase();\r\n        const article = (p.article || '').toLowerCase();\r\n        return name.includes(q) || article.includes(q);\r\n      })\r\n    : [];\r\n\r\n  const isSelected = (id) => {\r\n    if (multiple) return Array.isArray(value) && value.map(String).includes(String(id));\r\n    return String(value || '') === String(id);\r\n  };\r\n\r\n  const toggleId = (id) => {\r\n    if (multiple) {\r\n      const current = Array.isArray(value) ? value.map(String) : [];\r\n      const idStr = String(id);\r\n      const next = current.includes(idStr) ? current.filter(v => v !== idStr) : [...current, idStr];\r\n      onChange(next);\r\n    } else {\r\n      onChange(String(id));\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const removeChip = (id) => {\r\n    if (!multiple) return;\r\n    const current = Array.isArray(value) ? value.map(String) : [];\r\n    onChange(current.filter(v => v !== String(id)));\r\n  };\r\n\r\n  const selectedProducts = multiple\r\n    ? (Array.isArray(value) ? value : []).map(id => products.find(p => String(p._id) === String(id))).filter(Boolean)\r\n    : (products.find(p => String(p._id) === String(value)) || null);\r\n\r\n  return (\r\n    <div className=\"sp-select\" onBlur={(e) => { if (!e.currentTarget.contains(e.relatedTarget)) setOpen(false); }}>\r\n      <div className=\"sp-control\" onClick={() => setOpen(!open)}>\r\n        {multiple ? (\r\n          <div className=\"sp-chips\">\r\n            {selectedProducts.length > 0 ? selectedProducts.map(p => (\r\n              <span key={p._id} className=\"sp-chip\" onClick={(e) => { e.stopPropagation(); removeChip(p._id); }}>\r\n                {getLabel(p)} <span className=\"sp-x\">×</span>\r\n              </span>\r\n            )) : <span className=\"sp-placeholder\">{placeholder}</span>}\r\n          </div>\r\n        ) : (\r\n          <span className={selectedProducts ? 'sp-value' : 'sp-placeholder'}>\r\n            {selectedProducts ? getLabel(selectedProducts) : placeholder}\r\n          </span>\r\n        )}\r\n        <span className=\"sp-caret\">▾</span>\r\n      </div>\r\n      {open && (\r\n        <div className=\"sp-dropdown\">\r\n          <input\r\n            className=\"sp-search\"\r\n            placeholder=\"Поиск по названию или артикулу\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <div className=\"sp-list\">\r\n            {filtered.length === 0 && (\r\n              <div className=\"sp-empty\">Ничего не найдено</div>\r\n            )}\r\n            {filtered.map(p => (\r\n              <button\r\n                key={p._id}\r\n                type=\"button\"\r\n                className={`sp-item${isSelected(p._id) ? ' selected' : ''}`}\r\n                onClick={() => toggleId(p._id)}\r\n              >\r\n                {multiple && (\r\n                  <input type=\"checkbox\" readOnly checked={isSelected(p._id)} />\r\n                )}\r\n                <span className=\"sp-item-label\">{getLabel(p)}</span>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductVariations() {\r\n  const [products, setProducts] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingGroup, setEditingGroup] = useState(null);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    baseProductId: '',\r\n    parameters: [],\r\n    variants: []\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(''); // Очищаем предыдущие ошибки\r\n      \r\n      const [productsRes, groupsRes] = await Promise.all([\r\n        fetch(PRODUCTS_URL),\r\n        fetch(GROUPS_URL)\r\n      ]);\r\n\r\n      if (!productsRes.ok) {\r\n        const errorText = await productsRes.text();\r\n        throw new Error(`Ошибка загрузки товаров: ${productsRes.status} - ${errorText}`);\r\n      }\r\n\r\n      if (!groupsRes.ok) {\r\n        const errorText = await groupsRes.text();\r\n        throw new Error(`Ошибка загрузки групп: ${groupsRes.status} - ${errorText}`);\r\n      }\r\n\r\n      const [productsData, groupsData] = await Promise.all([\r\n        productsRes.json(),\r\n        groupsRes.json()\r\n      ]);\r\n\r\n       console.log('Загруженные товары:', productsData);\r\n       console.log('Загруженные группы:', groupsData);\r\n\r\n      setProducts(productsData);\r\n      setGroups(groupsData);\r\n    } catch (err) {\r\n      console.error('Ошибка загрузки данных:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    setEditingGroup(null);\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      baseProductId: '',\r\n      parameters: [],\r\n      variants: []\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleEditGroup = (group) => {\r\n    console.log('Редактируем группу:', group);\r\n    setEditingGroup(group);\r\n    \r\n    // Обрабатываем вариации, чтобы правильно извлечь ID товаров\r\n    const processedVariants = (group.variants || []).map(variant => {\r\n      console.log('Обрабатываем вариацию:', variant);\r\n      \r\n      // Определяем правильный ID товара\r\n      let productId = '';\r\n      if (typeof variant.productId === 'string') {\r\n        productId = variant.productId;\r\n      } else if (variant.productId && variant.productId._id) {\r\n        productId = variant.productId._id;\r\n      } else if (variant.productId && typeof variant.productId === 'object') {\r\n        productId = variant.productId.toString();\r\n      }\r\n      \r\n      console.log('Извлеченный productId:', productId);\r\n      \r\n      return {\r\n      ...variant,\r\n        productId: productId,\r\n      parameters: variant.parameters || {}\r\n      };\r\n    });\r\n    \r\n    // Определяем правильный ID базового товара\r\n    let baseProductId = '';\r\n    if (typeof group.baseProductId === 'string') {\r\n      baseProductId = group.baseProductId;\r\n    } else if (group.baseProductId && group.baseProductId._id) {\r\n      baseProductId = group.baseProductId._id;\r\n    } else if (group.baseProductId && typeof group.baseProductId === 'object') {\r\n      baseProductId = group.baseProductId.toString();\r\n    }\r\n    \r\n    console.log('Извлеченный baseProductId:', baseProductId);\r\n    console.log('Обработанные вариации:', processedVariants);\r\n    \r\n    setFormData({\r\n      name: group.name,\r\n      description: group.description || '',\r\n      baseProductId: baseProductId,\r\n      parameters: group.parameters || [],\r\n      variants: processedVariants\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDeleteGroup = async (groupId) => {\r\n    if (!window.confirm('Вы уверены, что хотите удалить эту группу вариаций?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${GROUPS_URL}/${groupId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка удаления группы');\r\n      }\r\n\r\n      await fetchData();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const addParameter = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: [...prev.parameters, {\r\n        name: '',\r\n        type: 'select',\r\n        values: [''],\r\n        required: false,\r\n        visibleByDefault: true,\r\n        visibleForProductIds: []\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeParameter = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateParameter = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === index ? { ...param, [field]: value } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addParameterValue = (paramIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { ...param, values: [...param.values, ''] } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeParameterValue = (paramIndex, valueIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.filter((_, vi) => vi !== valueIndex) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateParameterValue = (paramIndex, valueIndex, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.map((v, vi) => vi === valueIndex ? value : v) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addVariant = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: [...prev.variants, {\r\n        productId: '',\r\n        parameters: {},\r\n        isActive: true\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeVariant = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateVariant = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === index ? { ...variant, [field]: value } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateVariantParameter = (variantIndex, paramName, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === variantIndex ? { \r\n          ...variant, \r\n          parameters: { ...variant.parameters, [paramName]: value }\r\n        } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(''); // Очищаем предыдущие ошибки\r\n      \r\n      // Параметры уже хранятся как обычный объект\r\n      const submitData = {\r\n        ...formData,\r\n        variants: formData.variants.map(variant => ({\r\n          ...variant,\r\n          parameters: variant.parameters || {}\r\n        }))\r\n      };\r\n\r\n      const response = await fetch(\r\n        editingGroup ? `${GROUPS_URL}/${editingGroup._id}` : GROUPS_URL,\r\n        {\r\n          method: editingGroup ? 'PUT' : 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(submitData)\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Ошибка сохранения группы вариаций: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      await fetchData();\r\n      setShowForm(false);\r\n      setEditingGroup(null);\r\n    } catch (err) {\r\n      console.error('Ошибка сохранения:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading && !showForm) {\r\n    return (\r\n      <div className=\"variations-container\">\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Загрузка данных...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"variations-container\">\r\n      {/* Заголовок */}\r\n      <div className=\"variations-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"header-title\">\r\n            <span className=\"icon\">🔄</span>\r\n            Управление вариациями товаров\r\n          </h1>\r\n          <p className=\"header-subtitle\">\r\n            Создавайте группы товаров с различными параметрами и ценами\r\n          </p>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n        <button onClick={handleCreateGroup} className=\"create-btn\">\r\n          <span className=\"btn-icon\">+</span>\r\n          Создать группу\r\n          </button>\r\n          <div className=\"admin-nav\">\r\n            <button onClick={() => navigate('/admin/products')} className=\"nav-btn nav-products\">\r\n              📦 Товары\r\n            </button>\r\n            <button onClick={() => navigate('/admin/settings')} className=\"nav-btn nav-settings\">\r\n              ⚙️ Настройки\r\n            </button>\r\n            <button onClick={() => navigate('/admin/analytics')} className=\"nav-btn nav-analytics\">\r\n              📊 Аналитика\r\n            </button>\r\n            <button onClick={() => navigate('/admin/pickup-points')} className=\"nav-btn nav-pickup\">\r\n              🏬 Пункты самовывоза\r\n        </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Ошибки */}\r\n      {error && (\r\n        <div className=\"error-alert\">\r\n          <span className=\"error-icon\">⚠️</span>\r\n          <span className=\"error-text\">{error}</span>\r\n          <button onClick={() => setError('')} className=\"error-close\">×</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Список групп */}\r\n      <div className=\"groups-section\">\r\n        <h2 className=\"section-title\">Существующие группы вариаций</h2>\r\n        \r\n        {groups.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">📦</div>\r\n            <h3>Группы вариаций не найдены</h3>\r\n            <p>Создайте первую группу вариаций для ваших товаров</p>\r\n            <button onClick={handleCreateGroup} className=\"empty-btn\">\r\n              Создать группу\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"groups-grid\">\r\n            {groups.map(group => (\r\n              <div key={group._id} className=\"group-card\">\r\n                <div className=\"card-header\">\r\n                  <h3 className=\"card-title\">{group.name}</h3>\r\n                  <div className=\"card-actions\">\r\n                    <button \r\n                      onClick={() => handleEditGroup(group)} \r\n                      className=\"action-btn edit-btn\"\r\n                      title=\"Редактировать\"\r\n                    >\r\n                      ✏️\r\n                    </button>\r\n                    <button \r\n                      onClick={() => handleDeleteGroup(group._id)} \r\n                      className=\"action-btn delete-btn\"\r\n                      title=\"Удалить\"\r\n                    >\r\n                      🗑️\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {group.description && (\r\n                  <p className=\"card-description\">{group.description}</p>\r\n                )}\r\n                \r\n                <div className=\"card-content\">\r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Базовый товар:</span>\r\n                    <span className=\"info-value\">{group.baseProductId?.name || 'Не указан'}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Параметры:</span>\r\n                    <div className=\"parameters-list\">\r\n                      {group.parameters.map((param, index) => (\r\n                        <span key={index} className=\"parameter-tag\">\r\n                          {param.name} ({param.type})\r\n                          {param.required && <span className=\"required-mark\">*</span>}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Вариации:</span>\r\n                    <span className=\"variants-count\">{group.variants.length} шт.</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Модальное окно формы */}\r\n      {showForm && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowForm(false)}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h2 className=\"modal-title\">\r\n                {editingGroup ? 'Редактировать группу' : 'Создать группу вариаций'}\r\n              </h2>\r\n              <button onClick={() => setShowForm(false)} className=\"modal-close\">\r\n                <span>×</span>\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"variations-form\">\r\n               {/* Отладочная информация */}\r\n               {process.env.NODE_ENV === 'development' && (\r\n                 <div style={{background: '#f0f0f0', padding: '10px', marginBottom: '20px', fontSize: '12px'}}>\r\n                   <strong>Отладка:</strong><br/>\r\n                   baseProductId: {formData.baseProductId}<br/>\r\n                   variants: {JSON.stringify(formData.variants.map(v => ({productId: v.productId, isActive: v.isActive})))}\r\n                 </div>\r\n               )}\r\n              {/* Основная информация */}\r\n              <div className=\"form-section\">\r\n                <h3 className=\"section-title\">Основная информация</h3>\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">\r\n                      Название группы <span className=\"required\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.name}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                      className=\"form-input\"\r\n                      placeholder=\"Например: Болгарки Tanker TK12501\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Описание</label>\r\n                    <textarea\r\n                      value={formData.description}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                      className=\"form-textarea\"\r\n                      placeholder=\"Краткое описание группы\"\r\n                      rows=\"3\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">\r\n                      Базовый товар <span className=\"required\">*</span>\r\n                    </label>\r\n                    <select\r\n                      value={formData.baseProductId}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, baseProductId: e.target.value }))}\r\n                      className=\"form-select\"\r\n                      required\r\n                    >\r\n                      <option value=\"\">Выберите товар</option>\r\n                      {products.map(product => (\r\n                        <option key={product._id} value={product._id}>\r\n                          {product.name} {product.article ? `(арт.: ${product.article})` : ''}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Параметры */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3 className=\"section-title\">Параметры вариаций</h3>\r\n                  <button type=\"button\" onClick={addParameter} className=\"add-btn\">\r\n                    <span>+</span> Добавить параметр\r\n                  </button>\r\n                </div>\r\n                \r\n                {formData.parameters.map((param, index) => (\r\n                  <div key={index} className=\"parameter-card\">\r\n                    <div className=\"parameter-header\">\r\n                      <div className=\"parameter-inputs\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Название параметра (например: Вольты)\"\r\n                          value={param.name}\r\n                          onChange={(e) => updateParameter(index, 'name', e.target.value)}\r\n                          className=\"form-input\"\r\n                          required\r\n                        />\r\n                        <select\r\n                          value={param.type}\r\n                          onChange={(e) => updateParameter(index, 'type', e.target.value)}\r\n                          className=\"form-select\"\r\n                        >\r\n                          <option value=\"select\">Выпадающий список</option>\r\n                          <option value=\"radio\">Радио кнопки</option>\r\n                          <option value=\"checkbox\">Чекбокс</option>\r\n                        </select>\r\n                        <label className=\"checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={param.visibleByDefault ?? true}\r\n                            onChange={(e) => updateParameter(index, 'visibleByDefault', e.target.checked)}\r\n                          />\r\n                          <span>Виден по умолчанию</span>\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"parameter-options\">\r\n                        <label className=\"checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={param.required}\r\n                            onChange={(e) => updateParameter(index, 'required', e.target.checked)}\r\n                          />\r\n                          <span>Обязательный</span>\r\n                        </label>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeParameter(index)}\r\n                          className=\"remove-btn\"\r\n                          title=\"Удалить параметр\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"parameter-values\">\r\n                      <label className=\"form-label\">Возможные значения:</label>\r\n                      <div className=\"values-list\">\r\n                        {param.values.map((value, valueIndex) => (\r\n                          <div key={valueIndex} className=\"value-item\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value={value}\r\n                              onChange={(e) => updateParameterValue(index, valueIndex, e.target.value)}\r\n                              className=\"form-input\"\r\n                              placeholder=\"Значение\"\r\n                            />\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeParameterValue(index, valueIndex)}\r\n                              className=\"remove-btn small\"\r\n                              title=\"Удалить значение\"\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => addParameterValue(index)}\r\n                          className=\"add-value-btn\"\r\n                        >\r\n                          + Добавить значение\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"parameter-visibility\">\r\n                      <label className=\"form-label\">Показывать только для товаров:</label>\r\n                      <SearchableProductSelect\r\n                        products={products}\r\n                        multiple\r\n                        value={param.visibleForProductIds || []}\r\n                        onChange={(ids) => updateParameter(index, 'visibleForProductIds', ids)}\r\n                        placeholder=\"Выберите товары...\"\r\n                      />\r\n                      <div style={{fontSize: 12, color: '#718096', marginTop: 6}}>\r\n                        Если снять галочку «Виден по умолчанию», параметр будет скрыт везде, кроме выбранных здесь товаров.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Вариации */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3 className=\"section-title\">Вариации товаров</h3>\r\n                  <button type=\"button\" onClick={addVariant} className=\"add-btn\">\r\n                    <span>+</span> Добавить вариацию\r\n                  </button>\r\n                </div>\r\n                \r\n                {formData.variants.map((variant, index) => (\r\n                  <div key={index} className=\"variant-card\">\r\n                    <div className=\"variant-header\">\r\n                                             <div className=\"variant-inputs\">\r\n                        <SearchableProductSelect\r\n                          products={products}\r\n                          value={variant.productId || ''}\r\n                          onChange={(id) => updateVariant(index, 'productId', id)}\r\n                          placeholder=\"Выберите товар\"\r\n                        />\r\n                       </div>\r\n                      <div className=\"variant-options\">\r\n                        <label className=\"checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={variant.isActive}\r\n                            onChange={(e) => updateVariant(index, 'isActive', e.target.checked)}\r\n                          />\r\n                          <span>Активен</span>\r\n                        </label>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeVariant(index)}\r\n                          className=\"remove-btn\"\r\n                          title=\"Удалить вариацию\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"variant-parameters\">\r\n                      {formData.parameters.map((param, paramIndex) => (\r\n                        <div key={paramIndex} className=\"variant-param\">\r\n                          <label className=\"form-label\">{param.name}:</label>\r\n                          {param.type === 'select' && (\r\n                            <select\r\n                              value={variant.parameters[param.name] || ''}\r\n                              onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                              className=\"form-select\"\r\n                              required={param.required}\r\n                            >\r\n                              <option value=\"\">Выберите</option>\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <option key={valueIndex} value={value}>\r\n                                  {value}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          )}\r\n                          {param.type === 'radio' && (\r\n                            <div className=\"radio-group\">\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <label key={valueIndex} className=\"radio-label\">\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    name={`${index}-${param.name}`}\r\n                                    value={value}\r\n                                    checked={variant.parameters[param.name] === value}\r\n                                    onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                                    required={param.required}\r\n                                  />\r\n                                  <span className=\"radio-text\">{value}</span>\r\n                                </label>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                          {param.type === 'checkbox' && (\r\n                            <label className=\"checkbox-label\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={variant.parameters[param.name] === 'true'}\r\n                                onChange={(e) => updateVariantParameter(index, param.name, e.target.checked ? 'true' : 'false')}\r\n                              />\r\n                              <span>{param.name}</span>\r\n                            </label>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Кнопки действий */}\r\n              <div className=\"form-actions\">\r\n                <button type=\"button\" onClick={() => setShowForm(false)} className=\"cancel-btn\">\r\n                  Отмена\r\n                </button>\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n                  {loading ? (\r\n                    <>\r\n                      <span className=\"spinner-small\"></span>\r\n                      Сохранение...\r\n                    </>\r\n                  ) : (\r\n                    editingGroup ? 'Обновить группу' : 'Создать группу'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style jsx>{`\r\n        .variations-container {\r\n          min-height: 100vh;\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          padding: 20px;\r\n        }\r\n\r\n        .variations-header {\r\n          background: white;\r\n          border-radius: 16px;\r\n          padding: 32px;\r\n          margin-bottom: 24px;\r\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .header-content {\r\n          flex: 1;\r\n        }\r\n\r\n        .header-title {\r\n          font-size: 28px;\r\n          font-weight: 700;\r\n          color: #2d3748;\r\n          margin: 0 0 8px 0;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n        }\r\n\r\n        .icon {\r\n          font-size: 32px;\r\n        }\r\n\r\n        .header-subtitle {\r\n          color: #718096;\r\n          font-size: 16px;\r\n          margin: 0;\r\n        }\r\n\r\n        .create-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 12px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: all 0.3s ease;\r\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\r\n        }\r\n\r\n        .create-btn:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);\r\n        }\r\n\r\n        .btn-icon {\r\n          font-size: 20px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .error-alert {\r\n          background: #fed7d7;\r\n          border: 1px solid #feb2b2;\r\n          border-radius: 12px;\r\n          padding: 16px;\r\n          margin-bottom: 24px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n          color: #c53030;\r\n        }\r\n\r\n        .error-icon {\r\n          font-size: 20px;\r\n        }\r\n\r\n        .error-text {\r\n          flex: 1;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .error-close {\r\n          background: none;\r\n          border: none;\r\n          font-size: 20px;\r\n          cursor: pointer;\r\n          color: #c53030;\r\n          padding: 0;\r\n          width: 24px;\r\n          height: 24px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .groups-section {\r\n          background: white;\r\n          border-radius: 16px;\r\n          padding: 32px;\r\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .section-title {\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0 0 24px 0;\r\n        }\r\n\r\n        .empty-state {\r\n          text-align: center;\r\n          padding: 60px 20px;\r\n          color: #718096;\r\n        }\r\n\r\n        .empty-icon {\r\n          font-size: 64px;\r\n          margin-bottom: 16px;\r\n          display: block;\r\n        }\r\n\r\n        .empty-state h3 {\r\n          font-size: 20px;\r\n          font-weight: 600;\r\n          margin: 0 0 8px 0;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .empty-state p {\r\n          margin: 0 0 24px 0;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .empty-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 12px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .groups-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n          gap: 24px;\r\n        }\r\n\r\n        .group-card {\r\n          background: #f7fafc;\r\n          border: 1px solid #e2e8f0;\r\n          border-radius: 12px;\r\n          padding: 24px;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .group-card:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .card-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .card-title {\r\n          font-size: 18px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0;\r\n          flex: 1;\r\n        }\r\n\r\n        .card-actions {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .action-btn {\r\n          background: none;\r\n          border: none;\r\n          font-size: 16px;\r\n          cursor: pointer;\r\n          padding: 8px;\r\n          border-radius: 8px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .edit-btn:hover {\r\n          background: #ebf8ff;\r\n        }\r\n\r\n        .delete-btn:hover {\r\n          background: #fed7d7;\r\n        }\r\n\r\n        .card-description {\r\n          color: #718096;\r\n          font-size: 14px;\r\n          margin: 0 0 16px 0;\r\n          line-height: 1.5;\r\n        }\r\n\r\n        .card-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 12px;\r\n        }\r\n\r\n        .info-item {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 4px;\r\n        }\r\n\r\n        .info-label {\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          color: #718096;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.5px;\r\n        }\r\n\r\n        .info-value {\r\n          font-size: 14px;\r\n          color: #2d3748;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .parameters-list {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 6px;\r\n        }\r\n\r\n        .parameter-tag {\r\n          background: #e6fffa;\r\n          color: #234e52;\r\n          padding: 4px 8px;\r\n          border-radius: 6px;\r\n          font-size: 12px;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .required-mark {\r\n          color: #e53e3e;\r\n          margin-left: 2px;\r\n        }\r\n\r\n        .variants-count {\r\n          font-size: 14px;\r\n          color: #2d3748;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 1000;\r\n          padding: 20px;\r\n        }\r\n\r\n        .modal-content {\r\n          background: white;\r\n          border-radius: 16px;\r\n          max-width: 900px;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n          width: 100%;\r\n          box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n        }\r\n\r\n        .modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          padding: 24px 32px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .modal-title {\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0;\r\n        }\r\n\r\n        .modal-close {\r\n          background: none;\r\n          border: none;\r\n          font-size: 24px;\r\n          cursor: pointer;\r\n          color: #718096;\r\n          padding: 8px;\r\n          border-radius: 8px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .modal-close:hover {\r\n          background: #f7fafc;\r\n          color: #2d3748;\r\n        }\r\n\r\n        .variations-form {\r\n          padding: 32px;\r\n        }\r\n\r\n        .form-section {\r\n          margin-bottom: 32px;\r\n        }\r\n\r\n        .section-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .add-btn {\r\n          background: #48bb78;\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .add-btn:hover {\r\n          background: #38a169;\r\n        }\r\n\r\n        .form-grid {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr;\r\n          gap: 20px;\r\n        }\r\n\r\n        .form-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .form-label {\r\n          font-size: 14px;\r\n          font-weight: 600;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .required {\r\n          color: #e53e3e;\r\n        }\r\n\r\n        .form-input,\r\n        .form-select,\r\n        .form-textarea {\r\n          padding: 12px 16px;\r\n          border: 2px solid #e2e8f0;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          transition: all 0.2s ease;\r\n          background: white;\r\n        }\r\n\r\n        .form-input:focus,\r\n        .form-select:focus,\r\n        .form-textarea:focus {\r\n          outline: none;\r\n          border-color: #667eea;\r\n          box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n        }\r\n\r\n        .form-textarea {\r\n          resize: vertical;\r\n          min-height: 80px;\r\n        }\r\n\r\n        .parameter-card,\r\n        .variant-card {\r\n          background: #f7fafc;\r\n          border: 1px solid #e2e8f0;\r\n          border-radius: 12px;\r\n          padding: 20px;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .parameter-header,\r\n        .variant-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n          margin-bottom: 16px;\r\n          gap: 16px;\r\n        }\r\n\r\n        .parameter-inputs,\r\n        .variant-inputs {\r\n          display: flex;\r\n          gap: 12px;\r\n          flex: 1;\r\n        }\r\n\r\n        .parameter-inputs .form-input {\r\n          flex: 2;\r\n        }\r\n\r\n        .parameter-inputs .form-select {\r\n          flex: 1;\r\n        }\r\n\r\n        .variant-inputs .form-select {\r\n          flex: 2;\r\n        }\r\n\r\n        .variant-inputs .form-input {\r\n          flex: 1;\r\n        }\r\n\r\n        .parameter-options,\r\n        .variant-options {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n        }\r\n\r\n        .checkbox-label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          font-size: 14px;\r\n          color: #4a5568;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .checkbox-label input[type=\"checkbox\"] {\r\n          width: 16px;\r\n          height: 16px;\r\n          accent-color: #667eea;\r\n        }\r\n\r\n        .remove-btn {\r\n          background: #fed7d7;\r\n          color: #c53030;\r\n          border: none;\r\n          padding: 8px;\r\n          border-radius: 6px;\r\n          cursor: pointer;\r\n          font-size: 14px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .remove-btn:hover {\r\n          background: #feb2b2;\r\n        }\r\n\r\n        .remove-btn.small {\r\n          padding: 4px 8px;\r\n          font-size: 12px;\r\n        }\r\n\r\n        .parameter-values {\r\n          margin-top: 16px;\r\n        }\r\n\r\n        .values-list {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n          margin-top: 8px;\r\n        }\r\n\r\n        .value-item {\r\n          display: flex;\r\n          gap: 8px;\r\n          align-items: center;\r\n        }\r\n\r\n        .value-item .form-input {\r\n          flex: 1;\r\n        }\r\n\r\n        .add-value-btn {\r\n          background: #ebf8ff;\r\n          color: #2b6cb0;\r\n          border: 1px dashed #90cdf4;\r\n          padding: 8px 16px;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n          text-align: center;\r\n        }\r\n\r\n        .add-value-btn:hover {\r\n          background: #bee3f8;\r\n          border-color: #63b3ed;\r\n        }\r\n\r\n        .variant-parameters {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n          gap: 16px;\r\n          margin-top: 16px;\r\n        }\r\n\r\n        .variant-param {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .radio-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .radio-label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .radio-label input[type=\"radio\"] {\r\n          accent-color: #667eea;\r\n        }\r\n\r\n        .radio-text {\r\n          font-size: 14px;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .form-actions {\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          gap: 16px;\r\n          margin-top: 32px;\r\n          padding-top: 24px;\r\n          border-top: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .cancel-btn {\r\n          background: #e2e8f0;\r\n          color: #4a5568;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 8px;\r\n          font-size: 16px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .cancel-btn:hover {\r\n          background: #cbd5e0;\r\n        }\r\n\r\n        .submit-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 8px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .submit-btn:hover:not(:disabled) {\r\n          transform: translateY(-1px);\r\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\r\n        }\r\n\r\n        .submit-btn:disabled {\r\n          opacity: 0.6;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        .loading-spinner {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n          height: 200px;\r\n          color: white;\r\n        }\r\n\r\n        .spinner {\r\n          width: 40px;\r\n          height: 40px;\r\n          border: 4px solid rgba(255, 255, 255, 0.3);\r\n          border-top: 4px solid white;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .spinner-small {\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid rgba(255, 255, 255, 0.3);\r\n          border-top: 2px solid white;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n        }\r\n\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .variations-container {\r\n            padding: 16px;\r\n          }\r\n\r\n          .variations-header {\r\n            flex-direction: column;\r\n            gap: 20px;\r\n            text-align: center;\r\n          }\r\n\r\n          .form-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .parameter-inputs,\r\n          .variant-inputs {\r\n            flex-direction: column;\r\n          }\r\n\r\n          .parameter-options,\r\n          .variant-options {\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n          }\r\n\r\n          .variant-parameters {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .groups-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .modal-content {\r\n            margin: 20px;\r\n            max-height: calc(100vh - 40px);\r\n          }\r\n\r\n          .variations-form {\r\n            padding: 20px;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductVariations;\r\n\r\n/* lightweight styles for SearchableProductSelect */\r\n/* These are scoped by class names used above */\r\n<style jsx>{`\r\n.sp-select { position: relative; width: 100%; }\r\n.sp-control { display: flex; align-items: center; justify-content: space-between; gap: 8px; border: 2px solid #e2e8f0; border-radius: 8px; padding: 10px 12px; background: #fff; cursor: pointer; }\r\n.sp-placeholder { color: #a0aec0; }\r\n.sp-value { color: #2d3748; font-weight: 500; }\r\n.sp-caret { color: #718096; }\r\n.sp-dropdown { position: absolute; top: calc(100% + 6px); left: 0; right: 0; background: #fff; border: 1px solid #e2e8f0; border-radius: 10px; box-shadow: 0 12px 30px rgba(0,0,0,0.12); z-index: 20; padding: 10px; }\r\n.sp-search { width: 100%; padding: 10px 12px; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 8px; }\r\n.sp-list { max-height: 260px; overflow: auto; display: flex; flex-direction: column; gap: 4px; }\r\n.sp-item { display: flex; align-items: center; gap: 8px; padding: 8px 10px; border-radius: 8px; border: 1px solid transparent; background: #f9fafb; cursor: pointer; text-align: left; }\r\n.sp-item.selected { background: #ebf8ff; border-color: #bee3f8; }\r\n.sp-item:hover { background: #edf2f7; }\r\n.sp-empty { padding: 10px; color: #718096; text-align: center; }\r\n.sp-chips { display: flex; flex-wrap: wrap; gap: 6px; }\r\n.sp-chip { background: #ebf8ff; color: #2b6cb0; border: 1px solid #90cdf4; padding: 4px 8px; border-radius: 999px; font-size: 12px; cursor: pointer; }\r\n.sp-chip .sp-x { margin-left: 6px; }\r\n`}</style>\r\n"],"names":["API_URL","PRODUCTS_URL","concat","GROUPS_URL","SearchableProductSelect","_ref","products","value","onChange","multiple","placeholder","open","setOpen","useState","query","setQuery","getLabel","p","name","article","price","filtered","Array","isArray","filter","q","trim","toLowerCase","includes","isSelected","id","map","String","selectedProducts","find","_id","Boolean","_jsxs","className","onBlur","e","currentTarget","contains","relatedTarget","children","onClick","_jsx","length","stopPropagation","current","v","removeChip","target","autoFocus","type","idStr","next","toggleId","readOnly","checked","setProducts","groups","setGroups","loading","setLoading","error","setError","showForm","setShowForm","editingGroup","setEditingGroup","setSelectedProducts","formData","setFormData","description","baseProductId","parameters","variants","navigate","useNavigate","useEffect","fetchData","async","productsRes","groupsRes","Promise","all","fetch","ok","errorText","text","Error","status","productsData","groupsData","json","console","log","err","message","handleCreateGroup","updateParameter","index","field","prev","_objectSpread","param","i","updateVariant","variant","updateVariantParameter","variantIndex","paramName","group","_group$baseProductId","processedVariants","productId","toString","handleEditGroup","title","window","confirm","groupId","method","handleDeleteGroup","required","onSubmit","preventDefault","submitData","response","headers","body","JSON","stringify","process","rows","product","addParameter","values","visibleByDefault","visibleForProductIds","_param$visibleByDefau","_","removeParameter","valueIndex","updateParameterValue","paramIndex","vi","removeParameterValue","addParameterValue","ids","style","fontSize","color","marginTop","addVariant","isActive","removeVariant","disabled","_Fragment","jsx"],"sourceRoot":""}