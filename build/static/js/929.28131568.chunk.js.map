{"version":3,"file":"static/js/929.28131568.chunk.js","mappings":"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","sources":["admin/ProductVariations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst API_URL = 'https://electro-1-vjdu.onrender.com/api';\nconst PRODUCTS_URL = `${API_URL}/admin/products`; // Используем админский endpoint для получения всех товаров\nconst GROUPS_URL = `${API_URL}/product-groups`;\n\n// Поисковый селект для выбора товара(ов)\nfunction SearchableProductSelect({ products, value, onChange, multiple = false, placeholder = 'Выберите товар' }) {\n  const [open, setOpen] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const getLabel = (p) => `${p.name}${p.article ? ` (арт.: ${p.article})` : ''}${p.price ? ` — ${p.price} ₸` : ''}`;\n  const filtered = Array.isArray(products)\n    ? products.filter(p => {\n        const q = query.trim().toLowerCase();\n        if (!q) return true;\n        const name = (p.name || '').toLowerCase();\n        const article = (p.article || '').toLowerCase();\n        return name.includes(q) || article.includes(q);\n      })\n    : [];\n\n  const isSelected = (id) => {\n    if (multiple) return Array.isArray(value) && value.map(String).includes(String(id));\n    return String(value || '') === String(id);\n  };\n\n  const toggleId = (id) => {\n    if (multiple) {\n      const current = Array.isArray(value) ? value.map(String) : [];\n      const idStr = String(id);\n      const next = current.includes(idStr) ? current.filter(v => v !== idStr) : [...current, idStr];\n      onChange(next);\n    } else {\n      onChange(String(id));\n      setOpen(false);\n    }\n  };\n\n  const removeChip = (id) => {\n    if (!multiple) return;\n    const current = Array.isArray(value) ? value.map(String) : [];\n    onChange(current.filter(v => v !== String(id)));\n  };\n\n  const selectedProducts = multiple\n    ? (Array.isArray(value) ? value : []).map(id => products.find(p => String(p._id) === String(id))).filter(Boolean)\n    : (products.find(p => String(p._id) === String(value)) || null);\n\n  return (\n    <div className=\"sp-select\" onBlur={(e) => { if (!e.currentTarget.contains(e.relatedTarget)) setOpen(false); }}>\n      <div className=\"sp-control\" onClick={() => setOpen(!open)}>\n        {multiple ? (\n          <div className=\"sp-chips\">\n            {selectedProducts.length > 0 ? selectedProducts.map(p => (\n              <span key={p._id} className=\"sp-chip\" onClick={(e) => { e.stopPropagation(); removeChip(p._id); }}>\n                {getLabel(p)} <span className=\"sp-x\">×</span>\n              </span>\n            )) : <span className=\"sp-placeholder\">{placeholder}</span>}\n          </div>\n        ) : (\n          <span className={selectedProducts ? 'sp-value' : 'sp-placeholder'}>\n            {selectedProducts ? getLabel(selectedProducts) : placeholder}\n          </span>\n        )}\n        <span className=\"sp-caret\">▾</span>\n      </div>\n      {open && (\n        <div className=\"sp-dropdown\">\n          <input\n            className=\"sp-search\"\n            placeholder=\"Поиск по названию или артикулу\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            autoFocus\n          />\n          <div className=\"sp-list\">\n            {filtered.length === 0 && (\n              <div className=\"sp-empty\">Ничего не найдено</div>\n            )}\n            {filtered.map(p => (\n              <button\n                key={p._id}\n                type=\"button\"\n                className={`sp-item${isSelected(p._id) ? ' selected' : ''}`}\n                onClick={() => toggleId(p._id)}\n              >\n                {multiple && (\n                  <input type=\"checkbox\" readOnly checked={isSelected(p._id)} />\n                )}\n                <span className=\"sp-item-label\">{getLabel(p)}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ProductVariations() {\n  const [products, setProducts] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [editingGroup, setEditingGroup] = useState(null);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    baseProductId: '',\n    coverImage: '',\n    parameters: [],\n    variants: []\n  });\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(''); // Очищаем предыдущие ошибки\n      \n      const [productsRes, groupsRes] = await Promise.all([\n        fetch(PRODUCTS_URL),\n        fetch(GROUPS_URL)\n      ]);\n\n      if (!productsRes.ok) {\n        const errorText = await productsRes.text();\n        throw new Error(`Ошибка загрузки товаров: ${productsRes.status} - ${errorText}`);\n      }\n\n      if (!groupsRes.ok) {\n        const errorText = await groupsRes.text();\n        throw new Error(`Ошибка загрузки групп: ${groupsRes.status} - ${errorText}`);\n      }\n\n      const [productsData, groupsData] = await Promise.all([\n        productsRes.json(),\n        groupsRes.json()\n      ]);\n\n       console.log('Загруженные товары:', productsData);\n       console.log('Загруженные группы:', groupsData);\n\n      setProducts(productsData);\n      setGroups(groupsData);\n    } catch (err) {\n      console.error('Ошибка загрузки данных:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateGroup = () => {\n    setEditingGroup(null);\n    const newFormData = {\n      name: '',\n      description: '',\n      baseProductId: '',\n      coverImage: '',\n      parameters: [],\n      variants: []\n    };\n    console.log('🆕 Создаем новую группу с данными:', newFormData);\n    setFormData(newFormData);\n    setShowForm(true);\n  };\n\n  const handleEditGroup = (group) => {\n    console.log('Редактируем группу:', group);\n    setEditingGroup(group);\n    \n    // Обрабатываем вариации, чтобы правильно извлечь ID товаров\n    const processedVariants = (group.variants || []).map(variant => {\n      console.log('Обрабатываем вариацию:', variant);\n      \n      // Определяем правильный ID товара\n      let productId = '';\n      if (typeof variant.productId === 'string') {\n        productId = variant.productId;\n      } else if (variant.productId && variant.productId._id) {\n        productId = variant.productId._id;\n      } else if (variant.productId && typeof variant.productId === 'object') {\n        productId = variant.productId.toString();\n      }\n      \n      console.log('Извлеченный productId:', productId);\n      \n      return {\n        ...variant,\n        productId: productId,\n        parameters: variant.parameters || {}\n      };\n    });\n    \n    // Определяем правильный ID базового товара\n    let baseProductId = '';\n    if (typeof group.baseProductId === 'string') {\n      baseProductId = group.baseProductId;\n    } else if (group.baseProductId && group.baseProductId._id) {\n      baseProductId = group.baseProductId._id;\n    } else if (group.baseProductId && typeof group.baseProductId === 'object') {\n      baseProductId = group.baseProductId.toString();\n    }\n    \n    console.log('Извлеченный baseProductId:', baseProductId);\n    console.log('Обработанные вариации:', processedVariants);\n    \n    console.log('📥 Загружаем данные группы для редактирования:', group);\n    console.log('🖼️ CoverImage в загруженной группе:', group.coverImage);\n    \n    setFormData({\n      name: group.name,\n      description: group.description || '',\n      baseProductId: baseProductId,\n      coverImage: group.coverImage || '',\n      parameters: group.parameters || [],\n      variants: processedVariants\n    });\n    setShowForm(true);\n  };\n\n  const handleDeleteGroup = async (groupId) => {\n    if (!window.confirm('Вы уверены, что хотите удалить эту группу вариаций?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${GROUPS_URL}/${groupId}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        throw new Error('Ошибка удаления группы');\n      }\n\n      await fetchData();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const addParameter = () => {\n    setFormData(prev => ({\n      ...prev,\n      parameters: [...prev.parameters, {\n        name: '',\n        type: 'select',\n        values: [''],\n        required: false,\n        visibleByDefault: true,\n        visibleForProductIds: []\n      }]\n    }));\n  };\n\n  const removeParameter = (index) => {\n    setFormData(prev => ({\n      ...prev,\n      parameters: prev.parameters.filter((_, i) => i !== index)\n    }));\n  };\n\n  const updateParameter = (index, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      parameters: prev.parameters.map((param, i) => \n        i === index ? { ...param, [field]: value } : param\n      )\n    }));\n  };\n\n  const addParameterValue = (paramIndex) => {\n    setFormData(prev => ({\n      ...prev,\n      parameters: prev.parameters.map((param, i) => \n        i === paramIndex ? { ...param, values: [...param.values, ''] } : param\n      )\n    }));\n  };\n\n  const removeParameterValue = (paramIndex, valueIndex) => {\n    setFormData(prev => ({\n      ...prev,\n      parameters: prev.parameters.map((param, i) => \n        i === paramIndex ? { \n          ...param, \n          values: param.values.filter((_, vi) => vi !== valueIndex) \n        } : param\n      )\n    }));\n  };\n\n  const updateParameterValue = (paramIndex, valueIndex, value) => {\n    setFormData(prev => ({\n      ...prev,\n      parameters: prev.parameters.map((param, i) => \n        i === paramIndex ? { \n          ...param, \n          values: param.values.map((v, vi) => vi === valueIndex ? value : v) \n        } : param\n      )\n    }));\n  };\n\n  const addVariant = () => {\n    setFormData(prev => ({\n      ...prev,\n      variants: [...prev.variants, {\n        productId: '',\n        parameters: {},\n        isActive: true\n      }]\n    }));\n  };\n\n  const removeVariant = (index) => {\n    setFormData(prev => ({\n      ...prev,\n      variants: prev.variants.filter((_, i) => i !== index)\n    }));\n  };\n\n  const updateVariant = (index, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      variants: prev.variants.map((variant, i) => \n        i === index ? { ...variant, [field]: value } : variant\n      )\n    }));\n  };\n\n  const updateVariantParameter = (variantIndex, paramName, value) => {\n    setFormData(prev => ({\n      ...prev,\n      variants: prev.variants.map((variant, i) => \n        i === variantIndex ? { \n          ...variant, \n          parameters: { ...variant.parameters, [paramName]: value }\n        } : variant\n      )\n    }));\n  };\n\n  const handleImageUpload = async (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    \n    try {\n      const formData = new FormData();\n      formData.append('image', files[0]);\n      \n      const response = await fetch('https://electro-1-vjdu.onrender.com/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Ошибка загрузки файла');\n      }\n      \n      const result = await response.json();\n      \n      if (result.webp) {\n        // Используем WebP версию для лучшей производительности\n        const imageUrl = result.webp.path;\n        \n        setFormData(prev => ({\n          ...prev,\n          coverImage: imageUrl\n        }));\n        \n        // Сохраняем варианты изображений для оптимизации\n        const imageVariants = {\n          original: result.original.path,\n          webp: result.webp.path,\n          thumb: result.variants?.thumb?.url || result.webp.path,\n          medium: result.variants?.medium?.url || result.webp.path,\n          large: result.variants?.large?.url || result.webp.path\n        };\n        \n        // Сохраняем варианты в localStorage для использования при сохранении продукта\n        localStorage.setItem('lastUploadedCoverImageVariants', JSON.stringify(imageVariants));\n        \n        console.log('✅ Обложка загружена:', imageUrl);\n        console.log('📊 Полный ответ сервера:', result);\n        \n        setTimeout(() => {\n          alert(`✅ Обложка вариации успешно загружена и оптимизирована!\\n\\n` +\n                `📁 Оригинал: ${result.original.filename}\\n` +\n                `🎨 WebP: ${result.webp.filename}\\n` +\n                `📏 Размер: ${Math.round(result.original.size / 1024)} KB\\n` +\n                `🚀 Экономия: ~60-70% размера\\n` +\n                `📱 Варианты: thumb, medium, large\\n\\n` +\n                `WebP URL автоматически добавлен в поле.`);\n        }, 100);\n      } else {\n        // Fallback на оригинальный файл\n        const imageUrl = result.original.path;\n        \n        setFormData(prev => ({\n          ...prev,\n          coverImage: imageUrl\n        }));\n        \n        console.log('✅ Обложка загружена (fallback):', imageUrl);\n        \n        setTimeout(() => {\n          alert(`✅ Обложка вариации успешно загружена!\\n\\nURL: ${imageUrl}`);\n        }, 100);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки изображения:', error);\n      setError('Ошибка загрузки изображения: ' + error.message);\n    } finally {\n      event.target.value = '';\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      setError(''); // Очищаем предыдущие ошибки\n      \n      // Параметры уже хранятся как обычный объект\n      const submitData = {\n        ...formData,\n        variants: formData.variants.map(variant => ({\n          ...variant,\n          parameters: variant.parameters || {}\n        }))\n      };\n\n      console.log('📤 Отправляем данные на сервер:', submitData);\n      console.log('🖼️ CoverImage в данных:', submitData.coverImage);\n      console.log('📊 Полная структура данных:', JSON.stringify(submitData, null, 2));\n\n      const response = await fetch(\n        editingGroup ? `${GROUPS_URL}/${editingGroup._id}` : GROUPS_URL,\n        {\n          method: editingGroup ? 'PUT' : 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(submitData)\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Ошибка сохранения группы вариаций: ${response.status} - ${errorText}`);\n      }\n\n      await fetchData();\n      setShowForm(false);\n      setEditingGroup(null);\n    } catch (err) {\n      console.error('Ошибка сохранения:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading && !showForm) {\n    return (\n      <div className=\"variations-container\">\n        <div className=\"loading-spinner\">\n          <div className=\"spinner\"></div>\n          <p>Загрузка данных...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"variations-container\">\n      {/* Заголовок */}\n      <div className=\"variations-header\">\n        <div className=\"header-content\">\n          <h1 className=\"header-title\">\n            <span className=\"icon\">🔄</span>\n            Управление вариациями товаров\n          </h1>\n          <p className=\"header-subtitle\">\n            Создавайте группы товаров с различными параметрами и ценами\n          </p>\n        </div>\n        <div className=\"header-actions\">\n        <button onClick={handleCreateGroup} className=\"create-btn\">\n          <span className=\"btn-icon\">+</span>\n          Создать группу\n          </button>\n          <div className=\"admin-nav\">\n            <button onClick={() => navigate('/admin/products')} className=\"nav-btn nav-products\">\n              📦 Товары\n            </button>\n            <button onClick={() => navigate('/admin/settings')} className=\"nav-btn nav-settings\">\n              ⚙️ Настройки\n            </button>\n            <button onClick={() => navigate('/admin/analytics')} className=\"nav-btn nav-analytics\">\n              📊 Аналитика\n            </button>\n            <button onClick={() => navigate('/admin/pickup-points')} className=\"nav-btn nav-pickup\">\n              🏬 Пункты самовывоза\n        </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Ошибки */}\n      {error && (\n        <div className=\"error-alert\">\n          <span className=\"error-icon\">⚠️</span>\n          <span className=\"error-text\">{error}</span>\n          <button onClick={() => setError('')} className=\"error-close\">×</button>\n        </div>\n      )}\n\n      {/* Список групп */}\n      <div className=\"groups-section\">\n        <h2 className=\"section-title\">Существующие группы вариаций</h2>\n        \n        {groups.length === 0 ? (\n          <div className=\"empty-state\">\n            <div className=\"empty-icon\">📦</div>\n            <h3>Группы вариаций не найдены</h3>\n            <p>Создайте первую группу вариаций для ваших товаров</p>\n            <button onClick={handleCreateGroup} className=\"empty-btn\">\n              Создать группу\n            </button>\n          </div>\n        ) : (\n          <div className=\"groups-grid\">\n            {groups.map(group => (\n              <div key={group._id} className=\"group-card\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">{group.name}</h3>\n                  <div className=\"card-actions\">\n                    <button \n                      onClick={() => handleEditGroup(group)} \n                      className=\"action-btn edit-btn\"\n                      title=\"Редактировать\"\n                    >\n                      ✏️\n                    </button>\n                    <button \n                      onClick={() => handleDeleteGroup(group._id)} \n                      className=\"action-btn delete-btn\"\n                      title=\"Удалить\"\n                    >\n                      🗑️\n                    </button>\n                  </div>\n                </div>\n                \n                {group.description && (\n                  <p className=\"card-description\">{group.description}</p>\n                )}\n                \n                <div className=\"card-content\">\n                  <div className=\"info-item\">\n                    <span className=\"info-label\">Базовый товар:</span>\n                    <span className=\"info-value\">{group.baseProductId?.name || 'Не указан'}</span>\n                  </div>\n                  \n                  <div className=\"info-item\">\n                    <span className=\"info-label\">Параметры:</span>\n                    <div className=\"parameters-list\">\n                      {group.parameters.map((param, index) => (\n                        <span key={index} className=\"parameter-tag\">\n                          {param.name} ({param.type})\n                          {param.required && <span className=\"required-mark\">*</span>}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"info-item\">\n                    <span className=\"info-label\">Вариации:</span>\n                    <span className=\"variants-count\">{group.variants.length} шт.</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Модальное окно формы */}\n      {showForm && (\n        <div className=\"modal-overlay\" onClick={() => setShowForm(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2 className=\"modal-title\">\n                {editingGroup ? 'Редактировать группу' : 'Создать группу вариаций'}\n              </h2>\n              <button onClick={() => setShowForm(false)} className=\"modal-close\">\n                <span>×</span>\n              </button>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"variations-form\">\n               {/* Отладочная информация */}\n               {process.env.NODE_ENV === 'development' && (\n                 <div style={{background: '#f0f0f0', padding: '10px', marginBottom: '20px', fontSize: '12px'}}>\n                   <strong>Отладка:</strong><br/>\n                   baseProductId: {formData.baseProductId}<br/>\n                   variants: {JSON.stringify(formData.variants.map(v => ({productId: v.productId, isActive: v.isActive})))}\n                 </div>\n               )}\n              {/* Основная информация */}\n              <div className=\"form-section\">\n                <h3 className=\"section-title\">Основная информация</h3>\n                <div className=\"form-grid\">\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">\n                      Название группы <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.name}\n                      onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                      className=\"form-input\"\n                      placeholder=\"Например: Болгарки Tanker TK12501\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">Описание</label>\n                    <textarea\n                      value={formData.description}\n                      onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                      className=\"form-textarea\"\n                      placeholder=\"Краткое описание группы\"\n                      rows=\"3\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">\n                      Базовый товар <span className=\"required\">*</span>\n                    </label>\n                    <select\n                      value={formData.baseProductId}\n                      onChange={(e) => setFormData(prev => ({ ...prev, baseProductId: e.target.value }))}\n                      className=\"form-select\"\n                      required\n                    >\n                      <option value=\"\">Выберите товар</option>\n                      {products.map(product => (\n                        <option key={product._id} value={product._id}>\n                          {product.name} {product.article ? `(арт.: ${product.article})` : ''}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">Обложка вариации:</label>\n                    <div className=\"image-upload-section\">\n                      {formData.coverImage ? (\n                        <div className=\"image-preview\">\n                          <img \n                            src={formData.coverImage} \n                            alt=\"Обложка вариации\" \n                            className=\"preview-image\"\n                          />\n                          <button\n                            type=\"button\"\n                            onClick={() => setFormData(prev => ({ ...prev, coverImage: '' }))}\n                            className=\"remove-image-btn\"\n                            title=\"Удалить изображение\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ) : (\n                        <div className=\"image-upload-placeholder\">\n                                                     <input\n                             type=\"file\"\n                             accept=\"image/*\"\n                             onChange={handleImageUpload}\n                             className=\"image-upload-input\"\n                             id=\"group-cover-image\"\n                           />\n                          <label htmlFor=\"group-cover-image\" className=\"image-upload-label\">\n                            <span className=\"upload-icon\">📷</span>\n                            <span>Загрузить обложку для вариации</span>\n                          </label>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Параметры */}\n              <div className=\"form-section\">\n                <div className=\"section-header\">\n                  <h3 className=\"section-title\">Параметры вариаций</h3>\n                  <button type=\"button\" onClick={addParameter} className=\"add-btn\">\n                    <span>+</span> Добавить параметр\n                  </button>\n                </div>\n                \n                {formData.parameters.map((param, index) => (\n                  <div key={index} className=\"parameter-card\">\n                    <div className=\"parameter-header\">\n                      <div className=\"parameter-inputs\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Название параметра (например: Вольты)\"\n                          value={param.name}\n                          onChange={(e) => updateParameter(index, 'name', e.target.value)}\n                          className=\"form-input\"\n                          required\n                        />\n                        <select\n                          value={param.type}\n                          onChange={(e) => updateParameter(index, 'type', e.target.value)}\n                          className=\"form-select\"\n                        >\n                          <option value=\"select\">Выпадающий список</option>\n                          <option value=\"radio\">Радио кнопки</option>\n                          <option value=\"checkbox\">Чекбокс</option>\n                        </select>\n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={param.visibleByDefault ?? true}\n                            onChange={(e) => updateParameter(index, 'visibleByDefault', e.target.checked)}\n                          />\n                          <span>Виден по умолчанию</span>\n                        </label>\n                      </div>\n                      <div className=\"parameter-options\">\n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={param.required}\n                            onChange={(e) => updateParameter(index, 'required', e.target.checked)}\n                          />\n                          <span>Обязательный</span>\n                        </label>\n                        <button\n                          type=\"button\"\n                          onClick={() => removeParameter(index)}\n                          className=\"remove-btn\"\n                          title=\"Удалить параметр\"\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"parameter-values\">\n                      <label className=\"form-label\">Возможные значения:</label>\n                      <div className=\"values-list\">\n                        {param.values.map((value, valueIndex) => (\n                          <div key={valueIndex} className=\"value-item\">\n                            <input\n                              type=\"text\"\n                              value={value}\n                              onChange={(e) => updateParameterValue(index, valueIndex, e.target.value)}\n                              className=\"form-input\"\n                              placeholder=\"Значение\"\n                            />\n                            <button\n                              type=\"button\"\n                              onClick={() => removeParameterValue(index, valueIndex)}\n                              className=\"remove-btn small\"\n                              title=\"Удалить значение\"\n                            >\n                              ×\n                            </button>\n                          </div>\n                        ))}\n                        <button\n                          type=\"button\"\n                          onClick={() => addParameterValue(index)}\n                          className=\"add-value-btn\"\n                        >\n                          + Добавить значение\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"parameter-visibility\">\n                      <label className=\"form-label\">Показывать только для товаров:</label>\n                      <SearchableProductSelect\n                        products={products}\n                        multiple\n                        value={param.visibleForProductIds || []}\n                        onChange={(ids) => updateParameter(index, 'visibleForProductIds', ids)}\n                        placeholder=\"Выберите товары...\"\n                      />\n                      <div style={{fontSize: 12, color: '#718096', marginTop: 6}}>\n                        Если снять галочку «Виден по умолчанию», параметр будет скрыт везде, кроме выбранных здесь товаров.\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Вариации */}\n              <div className=\"form-section\">\n                <div className=\"section-header\">\n                  <h3 className=\"section-title\">Вариации товаров</h3>\n                  <button type=\"button\" onClick={addVariant} className=\"add-btn\">\n                    <span>+</span> Добавить вариацию\n                  </button>\n                </div>\n                \n                {formData.variants.map((variant, index) => (\n                  <div key={index} className=\"variant-card\">\n                    <div className=\"variant-header\">\n                      <div className=\"variant-inputs\">\n                        <SearchableProductSelect\n                          products={products}\n                          value={variant.productId || ''}\n                          onChange={(id) => updateVariant(index, 'productId', id)}\n                          placeholder=\"Выберите товар\"\n                        />\n                      </div>\n                      <div className=\"variant-options\">\n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={variant.isActive}\n                            onChange={(e) => updateVariant(index, 'isActive', e.target.checked)}\n                          />\n                          <span>Активен</span>\n                        </label>\n                        <button\n                          type=\"button\"\n                          onClick={() => removeVariant(index)}\n                          className=\"remove-btn\"\n                          title=\"Удалить вариацию\"\n                        >\n                          🗑️\n                        </button>\n                      </div>\n                    </div>\n\n                    \n\n                    <div className=\"variant-parameters\">\n                      {formData.parameters.map((param, paramIndex) => (\n                        <div key={paramIndex} className=\"variant-param\">\n                          <label className=\"form-label\">{param.name}:</label>\n                          {param.type === 'select' && (\n                            <select\n                              value={variant.parameters[param.name] || ''}\n                              onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\n                              className=\"form-select\"\n                              required={param.required}\n                            >\n                              <option value=\"\">Выберите</option>\n                              {param.values.map((value, valueIndex) => (\n                                <option key={valueIndex} value={value}>\n                                  {value}\n                                </option>\n                              ))}\n                            </select>\n                          )}\n                          {param.type === 'radio' && (\n                            <div className=\"radio-group\">\n                              {param.values.map((value, valueIndex) => (\n                                <label key={valueIndex} className=\"radio-label\">\n                                  <input\n                                    type=\"radio\"\n                                    name={`${index}-${param.name}`}\n                                    value={value}\n                                    checked={variant.parameters[param.name] === value}\n                                    onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\n                                    required={param.required}\n                                  />\n                                  <span className=\"radio-text\">{value}</span>\n                                </label>\n                              ))}\n                            </div>\n                          )}\n                          {param.type === 'checkbox' && (\n                            <label className=\"checkbox-label\">\n                              <input\n                                type=\"checkbox\"\n                                checked={variant.parameters[param.name] === 'true'}\n                                onChange={(e) => updateVariantParameter(index, param.name, e.target.checked ? 'true' : 'false')}\n                              />\n                              <span>{param.name}</span>\n                            </label>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Кнопки действий */}\n              <div className=\"form-actions\">\n                <button type=\"button\" onClick={() => setShowForm(false)} className=\"cancel-btn\">\n                  Отмена\n                </button>\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n                  {loading ? (\n                    <>\n                      <span className=\"spinner-small\"></span>\n                      Сохранение...\n                    </>\n                  ) : (\n                    editingGroup ? 'Обновить группу' : 'Создать группу'\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        .variations-container {\n          min-height: 100vh;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          padding: 20px;\n        }\n\n        .variations-header {\n          background: white;\n          border-radius: 16px;\n          padding: 32px;\n          margin-bottom: 24px;\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .header-content {\n          flex: 1;\n        }\n\n        .header-title {\n          font-size: 28px;\n          font-weight: 700;\n          color: #2d3748;\n          margin: 0 0 8px 0;\n          display: flex;\n          align-items: center;\n          gap: 12px;\n        }\n\n        .icon {\n          font-size: 32px;\n        }\n\n        .header-subtitle {\n          color: #718096;\n          font-size: 16px;\n          margin: 0;\n        }\n\n        .create-btn {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          padding: 12px 24px;\n          border-radius: 12px;\n          font-size: 16px;\n          font-weight: 600;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          transition: all 0.3s ease;\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\n        }\n\n        .create-btn:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);\n        }\n\n        .btn-icon {\n          font-size: 20px;\n          font-weight: bold;\n        }\n\n        .error-alert {\n          background: #fed7d7;\n          border: 1px solid #feb2b2;\n          border-radius: 12px;\n          padding: 16px;\n          margin-bottom: 24px;\n          display: flex;\n          align-items: center;\n          gap: 12px;\n          color: #c53030;\n        }\n\n        .error-icon {\n          font-size: 20px;\n        }\n\n        .error-text {\n          flex: 1;\n          font-weight: 500;\n        }\n\n        .error-close {\n          background: none;\n          border: none;\n          font-size: 20px;\n          cursor: pointer;\n          color: #c53030;\n          padding: 0;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .groups-section {\n          background: white;\n          border-radius: 16px;\n          padding: 32px;\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n        }\n\n        .section-title {\n          font-size: 24px;\n          font-weight: 600;\n          color: #2d3748;\n          margin: 0 0 24px 0;\n        }\n\n        .empty-state {\n          text-align: center;\n          padding: 60px 20px;\n          color: #718096;\n        }\n\n        .empty-icon {\n          font-size: 64px;\n          margin-bottom: 16px;\n          display: block;\n        }\n\n        .empty-state h3 {\n          font-size: 20px;\n          font-weight: 600;\n          margin: 0 0 8px 0;\n          color: #4a5568;\n        }\n\n        .empty-state p {\n          margin: 0 0 24px 0;\n          font-size: 16px;\n        }\n\n        .empty-btn {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          padding: 12px 24px;\n          border-radius: 12px;\n          font-size: 16px;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.3s ease;\n        }\n\n        .groups-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n          gap: 24px;\n        }\n\n        .group-card {\n          background: #f7fafc;\n          border: 1px solid #e2e8f0;\n          border-radius: 12px;\n          padding: 24px;\n          transition: all 0.3s ease;\n        }\n\n        .group-card:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n        }\n\n        .card-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          margin-bottom: 16px;\n        }\n\n        .card-title {\n          font-size: 18px;\n          font-weight: 600;\n          color: #2d3748;\n          margin: 0;\n          flex: 1;\n        }\n\n        .card-actions {\n          display: flex;\n          gap: 8px;\n        }\n\n        .action-btn {\n          background: none;\n          border: none;\n          font-size: 16px;\n          cursor: pointer;\n          padding: 8px;\n          border-radius: 8px;\n          transition: all 0.2s ease;\n        }\n\n        .edit-btn:hover {\n          background: #ebf8ff;\n        }\n\n        .delete-btn:hover {\n          background: #fed7d7;\n        }\n\n        .card-description {\n          color: #718096;\n          font-size: 14px;\n          margin: 0 0 16px 0;\n          line-height: 1.5;\n        }\n\n        .card-content {\n          display: flex;\n          flex-direction: column;\n          gap: 12px;\n        }\n\n        .info-item {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n\n        .info-label {\n          font-size: 12px;\n          font-weight: 600;\n          color: #718096;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n        }\n\n        .info-value {\n          font-size: 14px;\n          color: #2d3748;\n          font-weight: 500;\n        }\n\n        .parameters-list {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 6px;\n        }\n\n        .parameter-tag {\n          background: #e6fffa;\n          color: #234e52;\n          padding: 4px 8px;\n          border-radius: 6px;\n          font-size: 12px;\n          font-weight: 500;\n        }\n\n        .required-mark {\n          color: #e53e3e;\n          margin-left: 2px;\n        }\n\n        .variants-count {\n          font-size: 14px;\n          color: #2d3748;\n          font-weight: 500;\n        }\n\n        .modal-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.6);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 1000;\n          padding: 20px;\n        }\n\n        .modal-content {\n          background: white;\n          border-radius: 16px;\n          max-width: 900px;\n          max-height: 90vh;\n          overflow-y: auto;\n          width: 100%;\n          box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n        }\n\n        .modal-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 24px 32px;\n          border-bottom: 1px solid #e2e8f0;\n        }\n\n        .modal-title {\n          font-size: 24px;\n          font-weight: 600;\n          color: #2d3748;\n          margin: 0;\n        }\n\n        .modal-close {\n          background: none;\n          border: none;\n          font-size: 24px;\n          cursor: pointer;\n          color: #718096;\n          padding: 8px;\n          border-radius: 8px;\n          transition: all 0.2s ease;\n        }\n\n        .modal-close:hover {\n          background: #f7fafc;\n          color: #2d3748;\n        }\n\n        .variations-form {\n          padding: 32px;\n        }\n\n        .form-section {\n          margin-bottom: 32px;\n        }\n\n        .section-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 20px;\n        }\n\n        .add-btn {\n          background: #48bb78;\n          color: white;\n          border: none;\n          padding: 8px 16px;\n          border-radius: 8px;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          transition: all 0.2s ease;\n        }\n\n        .add-btn:hover {\n          background: #38a169;\n        }\n\n        .form-grid {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 20px;\n        }\n\n        .form-group {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .form-label {\n          font-size: 14px;\n          font-weight: 600;\n          color: #4a5568;\n        }\n\n        .required {\n          color: #e53e3e;\n        }\n\n        .form-input,\n        .form-select,\n        .form-textarea {\n          padding: 12px 16px;\n          border: 2px solid #e2e8f0;\n          border-radius: 8px;\n          font-size: 14px;\n          transition: all 0.2s ease;\n          background: white;\n        }\n\n        .form-input:focus,\n        .form-select:focus,\n        .form-textarea:focus {\n          outline: none;\n          border-color: #667eea;\n          box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n        }\n\n        .form-textarea {\n          resize: vertical;\n          min-height: 80px;\n        }\n\n        .parameter-card,\n        .variant-card {\n          background: #f7fafc;\n          border: 1px solid #e2e8f0;\n          border-radius: 12px;\n          padding: 20px;\n          margin-bottom: 16px;\n        }\n\n        .parameter-header,\n        .variant-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          margin-bottom: 16px;\n          gap: 16px;\n        }\n\n        .parameter-inputs,\n        .variant-inputs {\n          display: flex;\n          gap: 12px;\n          flex: 1;\n        }\n\n        .parameter-inputs .form-input {\n          flex: 2;\n        }\n\n        .parameter-inputs .form-select {\n          flex: 1;\n        }\n\n        .variant-inputs .form-select {\n          flex: 2;\n        }\n\n        .variant-inputs .form-input {\n          flex: 1;\n        }\n\n        .parameter-options,\n        .variant-options {\n          display: flex;\n          align-items: center;\n          gap: 12px;\n        }\n\n        .checkbox-label {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          font-size: 14px;\n          color: #4a5568;\n          cursor: pointer;\n        }\n\n        .checkbox-label input[type=\"checkbox\"] {\n          width: 16px;\n          height: 16px;\n          accent-color: #667eea;\n        }\n\n        .remove-btn {\n          background: #fed7d7;\n          color: #c53030;\n          border: none;\n          padding: 8px;\n          border-radius: 6px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: all 0.2s ease;\n        }\n\n        .remove-btn:hover {\n          background: #feb2b2;\n        }\n\n        .remove-btn.small {\n          padding: 4px 8px;\n          font-size: 12px;\n        }\n\n        .parameter-values {\n          margin-top: 16px;\n        }\n\n        .values-list {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          margin-top: 8px;\n        }\n\n        .value-item {\n          display: flex;\n          gap: 8px;\n          align-items: center;\n        }\n\n        .value-item .form-input {\n          flex: 1;\n        }\n\n        .add-value-btn {\n          background: #ebf8ff;\n          color: #2b6cb0;\n          border: 1px dashed #90cdf4;\n          padding: 8px 16px;\n          border-radius: 8px;\n          font-size: 14px;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          text-align: center;\n        }\n\n        .add-value-btn:hover {\n          background: #bee3f8;\n          border-color: #63b3ed;\n        }\n\n        .variant-parameters {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: 16px;\n          margin-top: 16px;\n        }\n\n        .variant-param {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .radio-group {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .radio-label {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          cursor: pointer;\n        }\n\n        .radio-label input[type=\"radio\"] {\n          accent-color: #667eea;\n        }\n\n        .radio-text {\n          font-size: 14px;\n          color: #4a5568;\n        }\n\n        .form-actions {\n          display: flex;\n          justify-content: flex-end;\n          gap: 16px;\n          margin-top: 32px;\n          padding-top: 24px;\n          border-top: 1px solid #e2e8f0;\n        }\n\n        .cancel-btn {\n          background: #e2e8f0;\n          color: #4a5568;\n          border: none;\n          padding: 12px 24px;\n          border-radius: 8px;\n          font-size: 16px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.2s ease;\n        }\n\n        .cancel-btn:hover {\n          background: #cbd5e0;\n        }\n\n        .submit-btn {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          padding: 12px 24px;\n          border-radius: 8px;\n          font-size: 16px;\n          font-weight: 600;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          transition: all 0.3s ease;\n        }\n\n        .submit-btn:hover:not(:disabled) {\n          transform: translateY(-1px);\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\n        }\n\n        .submit-btn:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n\n        .loading-spinner {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          height: 200px;\n          color: white;\n        }\n\n        .spinner {\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.3);\n          border-top: 4px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 16px;\n        }\n\n        .spinner-small {\n          width: 16px;\n          height: 16px;\n          border: 2px solid rgba(255, 255, 255, 0.3);\n          border-top: 2px solid white;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n\n        /* Стили для загрузки изображения обложки */\n        .variant-cover-image {\n          margin: 16px 0;\n          padding: 16px;\n          background: #f8f9fa;\n          border-radius: 8px;\n          border: 1px dashed #dee2e6;\n        }\n\n        .image-upload-section {\n          margin-top: 8px;\n        }\n\n        .image-preview {\n          position: relative;\n          display: inline-block;\n        }\n\n        .preview-image {\n          width: 120px;\n          height: 80px;\n          object-fit: cover;\n          border-radius: 6px;\n          border: 2px solid #e2e8f0;\n        }\n\n        .remove-image-btn {\n          position: absolute;\n          top: -8px;\n          right: -8px;\n          background: #e53e3e;\n          color: white;\n          border: none;\n          border-radius: 50%;\n          width: 24px;\n          height: 24px;\n          font-size: 14px;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: all 0.2s ease;\n        }\n\n        .remove-image-btn:hover {\n          background: #c53030;\n        }\n\n        .image-upload-placeholder {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          min-height: 80px;\n          border: 2px dashed #cbd5e0;\n          border-radius: 6px;\n          background: #f7fafc;\n          transition: all 0.2s ease;\n        }\n\n        .image-upload-placeholder:hover {\n          border-color: #667eea;\n          background: #ebf8ff;\n        }\n\n        .image-upload-input {\n          display: none;\n        }\n\n        .image-upload-label {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 8px;\n          cursor: pointer;\n          color: #4a5568;\n          font-size: 14px;\n          padding: 16px;\n        }\n\n        .upload-icon {\n          font-size: 24px;\n        }\n\n        @media (max-width: 768px) {\n          .variations-container {\n            padding: 16px;\n          }\n\n          .variations-header {\n            flex-direction: column;\n            gap: 20px;\n            text-align: center;\n          }\n\n          .form-grid {\n            grid-template-columns: 1fr;\n          }\n\n          .parameter-inputs,\n          .variant-inputs {\n            flex-direction: column;\n          }\n\n          .parameter-options,\n          .variant-options {\n            flex-direction: column;\n            align-items: flex-start;\n          }\n\n          .variant-parameters {\n            grid-template-columns: 1fr;\n          }\n\n          .groups-grid {\n            grid-template-columns: 1fr;\n          }\n\n          .modal-content {\n            margin: 20px;\n            max-height: calc(100vh - 40px);\n          }\n\n          .variations-form {\n            padding: 20px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default ProductVariations;\n\n/* lightweight styles for SearchableProductSelect */\n/* These are scoped by class names used above */\n<style jsx>{`\n.sp-select { position: relative; width: 100%; }\n.sp-control { display: flex; align-items: center; justify-content: space-between; gap: 8px; border: 2px solid #e2e8f0; border-radius: 8px; padding: 10px 12px; background: #fff; cursor: pointer; }\n.sp-placeholder { color: #a0aec0; }\n.sp-value { color: #2d3748; font-weight: 500; }\n.sp-caret { color: #718096; }\n.sp-dropdown { position: absolute; top: calc(100% + 6px); left: 0; right: 0; background: #fff; border: 1px solid #e2e8f0; border-radius: 10px; box-shadow: 0 12px 30px rgba(0,0,0,0.12); z-index: 20; padding: 10px; }\n.sp-search { width: 100%; padding: 10px 12px; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 8px; }\n.sp-list { max-height: 260px; overflow: auto; display: flex; flex-direction: column; gap: 4px; }\n.sp-item { display: flex; align-items: center; gap: 8px; padding: 8px 10px; border-radius: 8px; border: 1px solid transparent; background: #f9fafb; cursor: pointer; text-align: left; }\n.sp-item.selected { background: #ebf8ff; border-color: #bee3f8; }\n.sp-item:hover { background: #edf2f7; }\n.sp-empty { padding: 10px; color: #718096; text-align: center; }\n.sp-chips { display: flex; flex-wrap: wrap; gap: 6px; }\n.sp-chip { background: #ebf8ff; color: #2b6cb0; border: 1px solid #90cdf4; padding: 4px 8px; border-radius: 999px; font-size: 12px; cursor: pointer; }\n.sp-chip .sp-x { margin-left: 6px; }\n`}</style>\n"],"names":["API_URL","PRODUCTS_URL","concat","GROUPS_URL","SearchableProductSelect","_ref","products","value","onChange","multiple","placeholder","open","setOpen","useState","query","setQuery","getLabel","p","name","article","price","filtered","Array","isArray","filter","q","trim","toLowerCase","includes","isSelected","id","map","String","selectedProducts","find","_id","Boolean","_jsxs","className","onBlur","e","currentTarget","contains","relatedTarget","children","onClick","_jsx","length","stopPropagation","current","v","removeChip","target","autoFocus","type","idStr","next","toggleId","readOnly","checked","setProducts","groups","setGroups","loading","setLoading","error","setError","showForm","setShowForm","editingGroup","setEditingGroup","setSelectedProducts","formData","setFormData","description","baseProductId","coverImage","parameters","variants","navigate","useNavigate","useEffect","fetchData","async","productsRes","groupsRes","Promise","all","fetch","ok","errorText","text","Error","status","productsData","groupsData","json","console","log","err","message","handleCreateGroup","newFormData","updateParameter","index","field","prev","_objectSpread","param","i","updateVariant","variant","updateVariantParameter","variantIndex","paramName","group","_group$baseProductId","processedVariants","productId","toString","handleEditGroup","title","window","confirm","groupId","method","handleDeleteGroup","required","onSubmit","preventDefault","submitData","JSON","stringify","response","headers","body","process","rows","product","src","alt","accept","files","from","event","FormData","append","errorData","result","webp","_result$variants","_result$variants$thum","_result$variants2","_result$variants2$med","_result$variants3","_result$variants3$lar","imageUrl","path","imageVariants","original","thumb","url","medium","large","localStorage","setItem","setTimeout","alert","filename","Math","round","size","htmlFor","addParameter","values","visibleByDefault","visibleForProductIds","_param$visibleByDefau","_","removeParameter","valueIndex","updateParameterValue","paramIndex","vi","removeParameterValue","addParameterValue","ids","style","fontSize","color","marginTop","addVariant","isActive","removeVariant","disabled","_Fragment","jsx"],"sourceRoot":""}