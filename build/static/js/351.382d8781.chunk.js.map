{"version":3,"file":"static/js/351.382d8781.chunk.js","mappings":"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","sources":["pages/AdminAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAnalyticsStats, getAnalyticsEvents } from '../utils/analytics';\r\nimport '../styles/AdminAnalytics.css';\r\n\r\nconst AdminAnalytics = () => {\r\n  const [stats, setStats] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [period, setPeriod] = useState('7d');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState({});\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n    loadEvents();\r\n  }, [period, currentPage, filters]);\r\n\r\n  const loadStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getAnalyticsStats(period);\r\n      setStats(response.data);\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки статистики:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadEvents = async () => {\r\n    try {\r\n      const response = await getAnalyticsEvents(currentPage, 50, filters);\r\n      setEvents(response.data.events);\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки событий:', error);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString('ru-RU');\r\n  };\r\n\r\n  const getEventTypeLabel = (eventType) => {\r\n    const labels = {\r\n      'phone_click': 'Клик на телефон',\r\n      'product_view': 'Просмотр товара',\r\n      'form_submit': 'Отправка формы',\r\n      'button_click': 'Клик на кнопку',\r\n      'page_view': 'Просмотр страницы'\r\n    };\r\n    return labels[eventType] || eventType;\r\n  };\r\n\r\n  const getEventIcon = (eventType) => {\r\n    const icons = {\r\n      'phone_click': '📞',\r\n      'product_view': '👁️',\r\n      'form_submit': '📝',\r\n      'button_click': '🖱️',\r\n      'page_view': '📄'\r\n    };\r\n    return icons[eventType] || '❓';\r\n  };\r\n\r\n  const calculateConversionRate = () => {\r\n    if (!stats) return 0;\r\n    const formSubmits = stats.eventStats.find(s => s.eventType === 'form_submit')?.count || 0;\r\n    const totalViews = stats.eventStats.find(s => s.eventType === 'page_view')?.count || 0;\r\n    return totalViews > 0 ? ((formSubmits / totalViews) * 100).toFixed(2) : 0;\r\n  };\r\n\r\n  const calculateEngagementRate = () => {\r\n    if (!stats) return 0;\r\n    const totalEngagements = stats.eventStats\r\n      .filter(s => s.eventType !== 'page_view')\r\n      .reduce((sum, stat) => sum + stat.count, 0);\r\n    const totalViews = stats.eventStats.find(s => s.eventType === 'page_view')?.count || 0;\r\n    return totalViews > 0 ? ((totalEngagements / totalViews) * 100).toFixed(2) : 0;\r\n  };\r\n\r\n  if (loading && !stats) {\r\n    return <div className=\"admin-analytics-loading\">Загрузка аналитики...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-analytics\">\r\n      <div className=\"admin-analytics-header\">\r\n        <h1>📊 Аналитика сайта</h1>\r\n        <div className=\"header-controls\">\r\n          <div className=\"period-selector\">\r\n            <label>Период:</label>\r\n            <select value={period} onChange={(e) => setPeriod(e.target.value)}>\r\n              <option value=\"24h\">Последние 24 часа</option>\r\n              <option value=\"7d\">Последние 7 дней</option>\r\n              <option value=\"30d\">Последние 30 дней</option>\r\n              <option value=\"90d\">Последние 90 дней</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"mobile-menu-toggle\" onClick={() => setActiveTab(activeTab === 'overview' ? 'events' : 'overview')}>\r\n            <span>☰</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Навигационные табы */}\r\n      <div className=\"analytics-tabs\">\r\n        <button \r\n          className={`tab-btn ${activeTab === 'overview' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('overview')}\r\n        >\r\n          📈 Обзор\r\n        </button>\r\n        <button \r\n          className={`tab-btn ${activeTab === 'events' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('events')}\r\n        >\r\n          📋 События\r\n        </button>\r\n        <button \r\n          className={`tab-btn ${activeTab === 'insights' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('insights')}\r\n        >\r\n          💡 Инсайты\r\n        </button>\r\n      </div>\r\n\r\n      {/* Вкладка \"Обзор\" */}\r\n      {activeTab === 'overview' && stats && (\r\n        <>\r\n          <div className=\"stats-overview\">\r\n            <div className=\"stats-card total-events\">\r\n              <h3>Всего событий</h3>\r\n              <div className=\"stats-number\">{stats.summary.totalEvents}</div>\r\n              <div className=\"stats-trend\">+12% с прошлой недели</div>\r\n            </div>\r\n            <div className=\"stats-card unique-sessions\">\r\n              <h3>Уникальных сессий</h3>\r\n              <div className=\"stats-number\">{stats.summary.uniqueSessions}</div>\r\n              <div className=\"stats-trend\">+8% с прошлой недели</div>\r\n            </div>\r\n            <div className=\"stats-card conversion-rate\">\r\n              <h3>Конверсия</h3>\r\n              <div className=\"stats-number\">{calculateConversionRate()}%</div>\r\n              <div className=\"stats-trend\">Формы / Просмотры</div>\r\n            </div>\r\n            <div className=\"stats-card engagement-rate\">\r\n              <h3>Вовлеченность</h3>\r\n              <div className=\"stats-number\">{calculateEngagementRate()}%</div>\r\n              <div className=\"stats-trend\">Действия / Просмотры</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"stats-details\">\r\n            <div className=\"stats-section\">\r\n              <h3>📊 Статистика по типам событий</h3>\r\n              <div className=\"stats-grid\">\r\n                {stats.eventStats.map((stat, index) => (\r\n                  <div key={index} className=\"stat-item\">\r\n                    <div className=\"stat-icon\">{getEventIcon(stat.eventType)}</div>\r\n                    <div className=\"stat-info\">\r\n                      <div className=\"stat-label\">{getEventTypeLabel(stat.eventType)}</div>\r\n                      <div className=\"stat-count\">{stat.count.toLocaleString()}</div>\r\n                      <div className=\"stat-unique\">Уникальных: {stat.uniqueSessions}</div>\r\n                      <div className=\"stat-percentage\">\r\n                        {((stat.count / stats.summary.totalEvents) * 100).toFixed(1)}%\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"stats-section\">\r\n              <h3>🏆 Топ товаров по просмотрам</h3>\r\n              <div className=\"top-products\">\r\n                {stats.topProducts.map((product, index) => (\r\n                  <div key={index} className=\"product-stat\">\r\n                    <div className=\"product-rank\">#{index + 1}</div>\r\n                    <div className=\"product-info\">\r\n                      <div className=\"product-name\">{product.productName || 'Неизвестный товар'}</div>\r\n                      <div className=\"product-views\">\r\n                        Просмотров: {product.views.toLocaleString()} | Уникальных: {product.uniqueViews.toLocaleString()}\r\n                      </div>\r\n                      <div className=\"product-engagement\">\r\n                        Вовлеченность: {((product.uniqueViews / product.views) * 100).toFixed(1)}%\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"stats-section\">\r\n              <h3>📄 Статистика по страницам</h3>\r\n              <div className=\"page-stats\">\r\n                {stats.pageStats.map((page, index) => (\r\n                  <div key={index} className=\"page-stat\">\r\n                    <div className=\"page-name\">{page.page || 'Главная'}</div>\r\n                    <div className=\"page-views\">\r\n                      Просмотров: {page.views.toLocaleString()} | Уникальных: {page.uniqueViews.toLocaleString()}\r\n                    </div>\r\n                    <div className=\"page-bounce\">\r\n                      Отказы: {((page.views - page.uniqueViews) / page.views * 100).toFixed(1)}%\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Вкладка \"Инсайты\" */}\r\n      {activeTab === 'insights' && stats && (\r\n        <div className=\"insights-section\">\r\n          <div className=\"insights-grid\">\r\n            <div className=\"insight-card\">\r\n              <h3>🎯 Рекомендации</h3>\r\n              <ul>\r\n                <li>Увеличьте контент на самых популярных страницах</li>\r\n                <li>Добавьте больше CTA на страницы с высокой вовлеченностью</li>\r\n                <li>Оптимизируйте страницы с высоким процентом отказов</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"insight-card\">\r\n              <h3>📈 Тренды</h3>\r\n              <ul>\r\n                <li>Пик активности: 14:00 - 18:00</li>\r\n                <li>Самый популярный день: Среда</li>\r\n                <li>Мобильные пользователи: 65%</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"insight-card\">\r\n              <h3>🚀 Возможности роста</h3>\r\n              <ul>\r\n                <li>Улучшите UX на мобильных устройствах</li>\r\n                <li>Добавьте push-уведомления</li>\r\n                <li>Создайте персонализированные рекомендации</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Вкладка \"События\" */}\r\n      {activeTab === 'events' && (\r\n        <div className=\"events-section\">\r\n          <h3>📋 Детальные события</h3>\r\n          <div className=\"events-filters\">\r\n            <select \r\n              value={filters.eventType || ''} \r\n              onChange={(e) => setFilters({...filters, eventType: e.target.value || undefined})}\r\n            >\r\n              <option value=\"\">Все типы событий</option>\r\n              <option value=\"phone_click\">Клик на телефон</option>\r\n              <option value=\"product_view\">Просмотр товара</option>\r\n              <option value=\"form_submit\">Отправка формы</option>\r\n              <option value=\"button_click\">Клик на кнопку</option>\r\n              <option value=\"page_view\">Просмотр страницы</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"events-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Время</th>\r\n                  <th>Тип</th>\r\n                  <th>Данные</th>\r\n                  <th>Страница</th>\r\n                  <th>IP</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {events.map((event, index) => (\r\n                  <tr key={index}>\r\n                    <td>{formatDate(event.timestamp)}</td>\r\n                    <td>\r\n                      <span className=\"event-type\">\r\n                        {getEventIcon(event.eventType)} {getEventTypeLabel(event.eventType)}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"event-data\">\r\n                        {event.eventData && Object.keys(event.eventData).length > 0 ? (\r\n                          Object.entries(event.eventData).map(([key, value]) => (\r\n                            <div key={key} className=\"event-data-item\">\r\n                              <strong>{key}:</strong> {String(value)}\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <span className=\"no-data\">Нет данных</span>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>{event.page || '-'}</td>\r\n                    <td>{event.ipAddress || '-'}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"pagination\">\r\n            <button \r\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n              disabled={currentPage === 1}\r\n            >\r\n              ← Назад\r\n            </button>\r\n            <span>Страница {currentPage}</span>\r\n            <button \r\n              onClick={() => setCurrentPage(currentPage + 1)}\r\n              disabled={events.length < 50}\r\n            >\r\n              Вперед →\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAnalytics;\r\n"],"names":["AdminAnalytics","stats","setStats","useState","events","setEvents","loading","setLoading","period","setPeriod","currentPage","setCurrentPage","filters","setFilters","activeTab","setActiveTab","useEffect","loadStats","loadEvents","async","response","getAnalyticsStats","data","error","console","getAnalyticsEvents","getEventTypeLabel","eventType","getEventIcon","_jsx","className","children","_jsxs","value","onChange","e","target","onClick","concat","_Fragment","summary","totalEvents","uniqueSessions","calculateConversionRate","_stats$eventStats$fin","_stats$eventStats$fin2","formSubmits","eventStats","find","s","count","totalViews","toFixed","calculateEngagementRate","_stats$eventStats$fin3","totalEngagements","filter","reduce","sum","stat","map","index","toLocaleString","topProducts","product","productName","views","uniqueViews","pageStats","page","_objectSpread","undefined","event","dateString","timestamp","Date","eventData","Object","keys","length","entries","_ref","key","String","ipAddress","Math","max","disabled"],"sourceRoot":""}