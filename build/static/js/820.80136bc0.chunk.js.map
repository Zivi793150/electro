{"version":3,"file":"static/js/820.80136bc0.chunk.js","mappings":"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","sources":["components/Modal.js","utils/telegram.js","pages/Product.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData);\r\n      \r\n      if (result.success) {\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n// В реальном проекте здесь будет интеграция с Telegram Bot API\r\n\r\nexport const sendToTelegram = async (formData) => {\r\n  try {\r\n    // Здесь будет реальная отправка в Telegram\r\n    // Пока что просто логируем данные\r\n    \r\n    const message = `\r\n🔔 Новая заявка с сайта!\r\n\r\n👤 Имя: ${formData.name}\r\n📞 Телефон: ${formData.phone}\r\n💬 Сообщение: ${formData.message || 'Не указано'}\r\n⏰ Время: ${new Date().toLocaleString('ru-RU')}\r\n    `;\r\n\r\n    console.log('Отправка в Telegram:', message);\r\n    \r\n    // В реальном проекте здесь будет fetch запрос к Telegram Bot API\r\n    // const response = await fetch('/api/send-telegram', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     chat_id: 'YOUR_CHAT_ID',\r\n    //     text: message,\r\n    //     parse_mode: 'HTML'\r\n    //   })\r\n    // });\r\n    \r\n    return { success: true, message: 'Заявка успешно отправлена!' };\r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport DeliveryInfo from '../components/DeliveryInfo';\nimport '../styles/Product.css';\nimport '../styles/ProductVariations.css';\n\nconst categories = [\n  { id: 'grinders', name: 'Болгарки' },\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\n  { id: 'hammers', name: 'Перфораторы' },\n  { id: 'drills', name: 'Дрели' },\n  { id: 'jigsaws', name: 'Лобзики' },\n  { id: 'levels', name: 'Лазерные уровни' },\n  { id: 'generators', name: 'Генераторы' },\n  { id: 'measuring', name: 'Измерители' }\n];\n\nconst Product = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [siteSettings, setSiteSettings] = useState({\n    city: 'Алматы',\n    deliveryInfo: {\n      freeDelivery: 'Бесплатная доставка по городу',\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\n      pickupAddress: 'ул. Толе би 216Б',\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\n    }\n  });\n  \n  const [selectedCity, setSelectedCity] = useState(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    return savedCity || 'Алматы';\n  });\n  \n  const [selectedDelivery, setSelectedDelivery] = useState(null);\n  const [deliveryInfo, setDeliveryInfo] = useState(null);\n  const [isCityChanging, setIsCityChanging] = useState(false);\n  \n  // Состояние для вариаций товара\n  const [productGroup, setProductGroup] = useState(null);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n  const [selectedParameters, setSelectedParameters] = useState({});\n  \n\n  \n  const [detectingCity, setDetectingCity] = useState(false);\n  \n  // Функция для автоматического определения города\n  const detectUserCity = () => {\n    if (navigator.geolocation) {\n      setDetectingCity(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Используем обратное геокодирование для определения города\n          fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&addressdetails=1`)\n            .then(response => response.json())\n            .then(data => {\n              if (data.address && data.address.city) {\n                const detectedCity = data.address.city;\n                // Проверяем, есть ли этот город в нашем списке\n                if (cities.includes(detectedCity)) {\n                  setSelectedCity(detectedCity);\n                  localStorage.setItem('selectedCity', detectedCity);\n                }\n              }\n              setDetectingCity(false);\n            })\n            .catch(error => {\n              console.log('Ошибка определения города:', error);\n              setDetectingCity(false);\n            });\n        },\n        (error) => {\n          console.log('Ошибка получения геолокации:', error);\n          setDetectingCity(false);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000 // 5 минут\n        }\n      );\n    }\n  };\n  \n  // Список городов Казахстана\n  const cities = [\n    'Алматы',\n    'Астана',\n    'Шымкент',\n    'Актобе',\n    'Караганда',\n    'Тараз',\n    'Павлодар',\n    'Семей',\n    'Усть-Каменогорск',\n    'Уральск',\n    'Кызылорда',\n    'Костанай',\n    'Петропавловск',\n    'Атырау',\n    'Актау',\n    'Темиртау',\n    'Туркестан',\n    'Кокшетау',\n    'Талдыкорган',\n    'Экибастуз',\n    'Рудный',\n    'Жанаозен',\n    'Жезказган',\n    'Балхаш',\n    'Кентау',\n    'Сатпаев',\n    'Капчагай',\n    'Риддер',\n    'Степногорск',\n    'Аральск',\n    'Аркалык',\n    'Житикара',\n    'Кандыагаш',\n    'Лисаковск',\n    'Шахтинск',\n    'Абай',\n    'Аягоз',\n    'Зайсан',\n    'Курчатов',\n    'Приозерск',\n    'Серебрянск',\n    'Текели',\n    'Уштобе',\n    'Чарск',\n    'Шемонаиха',\n    'Щучинск'\n  ];\n  \n  // Объединяем все изображения из разных полей\n  const getAllImages = () => {\n    const currentProduct = getCurrentProduct();\n    const images = [];\n    \n    // Добавляем основное изображение из поля image (если есть)\n    if (currentProduct?.image) {\n      images.push(currentProduct.image);\n    }\n    \n    // Добавляем изображения из поля images\n    if (Array.isArray(currentProduct?.images)) {\n      images.push(...currentProduct.images);\n    }\n    \n    // Добавляем изображения из поля images2\n    if (Array.isArray(currentProduct?.images2)) {\n      images.push(...currentProduct.images2);\n    }\n    \n    // Добавляем изображения из поля images3\n    if (Array.isArray(currentProduct?.images3)) {\n      images.push(...currentProduct.images3);\n    }\n    \n    // Если нет изображений, добавляем placeholder\n    if (images.length === 0) {\n      images.push('/images/products/placeholder.png');\n    }\n    \n    return images;\n  };\n  \n  const allImages = getAllImages();\n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-a8bl.onrender.com/api/products';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    const fetchProductAndGroup = async () => {\n      try {\n        // Загружаем товар\n        const productRes = await fetch(`${API_URL}/${id}`);\n        const productData = await productRes.json();\n        \n        if (productData.error) {\n          setError(productData.error);\n          setProduct(null);\n          setLoading(false);\n          return;\n        }\n        \n        setProduct(productData);\n        \n        // Загружаем группу вариаций для этого товара\n        try {\n          const groupRes = await fetch(`https://electro-a8bl.onrender.com/api/product-groups/by-product/${id}`);\n          if (groupRes.ok) {\n            const groupData = await groupRes.json();\n            setProductGroup(groupData);\n            \n            // Если это базовый товар группы, устанавливаем его как выбранную вариацию\n            if (groupData.baseProductId?._id === id) {\n              setSelectedVariant({\n                productId: groupData.baseProductId,\n                parameters: {},\n                price: productData.price\n              });\n            }\n          }\n        } catch (groupError) {\n          console.log('Группа вариаций не найдена для товара:', groupError);\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        setError('Ошибка загрузки товара');\n        setLoading(false);\n      }\n    };\n    \n    fetchProductAndGroup();\n  }, [id]);\n\n  useEffect(() => {\n    fetch(`${API_URL}?limit=4`)\n      .then(res => res.json())\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Загружаем информацию сайта\n  useEffect(() => {\n    fetch('https://electro-a8bl.onrender.com/api/information')\n      .then(res => res.json())\n      .then(data => {\n        if (data.information) {\n          setSiteSettings(data.information);\n        }\n      })\n      .catch(error => {\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\n      });\n  }, []);\n  \n  // Инициализируем выбранный город из localStorage и автоматически определяем город\n  useEffect(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    \n    // Если есть сохраненный город, используем его\n    if (savedCity) {\n      setSelectedCity(savedCity);\n    } else {\n      // Если нет сохраненного города, пытаемся определить автоматически\n      detectUserCity();\n    }\n  }, []);\n\n  if (loading) {\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\n  }\n  if (error || !product) {\n    return (\n      <div className=\"product\">\n        <Header />\n        <main className=\"product-main\">\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\n            <h1>Товар не найден</h1>\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/catalog\">каталог</a>.</p>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Найти категорию для хлебных крошек\n  const categoryObj = categories.find(cat => cat.id === product.category);\n  const categoryName = categoryObj ? categoryObj.name : '';\n\n  // Преимущества — если есть в product, иначе дефолтные\n  const productAdvantages = product.advantages || [\n    'Высокий крутящий момент и мощность',\n    'Долговечный литий-ионный аккумулятор',\n    'Компактный и лёгкий корпус для работы одной рукой'\n  ];\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = (formData) => {\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\n    alert('Спасибо! Ваша заявка отправлена. Мы свяжемся с вами в ближайшее время.');\n  };\n\n  const handleBuy = () => {\n    const currentProduct = getCurrentProduct();\n    const currentPrice = getCurrentPrice();\n    \n    navigate('/checkout', { \n      state: { \n        product: currentProduct,\n        selectedVariant,\n        selectedParameters,\n        originalPrice: product.price,\n        currentPrice\n      } \n    });\n  };\n\n  // Функции для работы с вариациями\n  const handleParameterChange = (paramName, value) => {\n    const newParameters = { ...selectedParameters, [paramName]: value };\n    setSelectedParameters(newParameters);\n    \n    // Находим подходящую вариацию\n    if (productGroup) {\n      const matchingVariant = productGroup.variants.find(variant => {\n        if (!variant.isActive) return false;\n        \n        // Проверяем, что все выбранные параметры совпадают\n        return Object.entries(newParameters).every(([key, val]) => \n          variant.parameters[key] === val\n        );\n      });\n      \n      if (matchingVariant) {\n        setSelectedVariant(matchingVariant);\n      }\n    }\n  };\n\n  // Получаем текущий товар для отображения (с учетом выбранной вариации)\n  const getCurrentProduct = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      return selectedVariant.productId;\n    }\n    return product;\n  };\n\n  // Получаем текущую цену\n  const getCurrentPrice = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      return selectedVariant.productId.price;\n    }\n    return product?.price;\n  };\n\n  // Модалка фото\n  const handleImageClick = () => setShowImageModal(true);\n  const handleCloseImageModal = () => setShowImageModal(false);\n  const handlePrevImage = (e) => {\n    e.stopPropagation();\n    setActiveImage((prev) => (prev - 1 + allImages.length) % allImages.length);\n  };\n  const handleNextImage = (e) => {\n    e.stopPropagation();\n    setActiveImage((prev) => (prev + 1) % allImages.length);\n  };\n  \n  const handleCityChange = (e) => {\n    const newCity = e.target.value;\n    setIsCityChanging(true);\n    setSelectedCity(newCity);\n    localStorage.setItem('selectedCity', newCity);\n    // Сбрасываем выбранную доставку при смене города\n    setSelectedDelivery(null);\n    // Загружаем информацию о доставке для нового города\n    fetchDeliveryInfo(newCity);\n    \n    // Убираем анимацию через 500мс\n    setTimeout(() => {\n      setIsCityChanging(false);\n    }, 500);\n  };\n\n  const fetchDeliveryInfo = async (cityName) => {\n    try {\n      const response = await fetch(`https://electro-a8bl.onrender.com/api/pickup-points/delivery/${encodeURIComponent(cityName)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setDeliveryInfo(data);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки информации о доставке:', error);\n    }\n  };\n  \n\n\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  return (\n    <div className=\"product-page\">\n      <Header />\n      <main className=\"product-main\">\n        <div className=\"product-container\">\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n            <a href=\"/\">Главная</a>\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <a href=\"/catalog\">Каталог</a>\n            {categoryName && (\n              <>\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                <a href={`/catalog?category=${product.category}`}>{categoryName}</a>\n              </>\n            )}\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <span style={{color:'#1a2236', fontWeight:500}}>{product.name}</span>\n          </nav>\n          <div className=\"product-flex\">\n            {/* Фото и миниатюры */}\n            <div className=\"product-gallery\">\n              <div className=\"product-gallery-inner\">\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\n                  <img \n                    src={product.image || allImages[activeImage]} \n                    alt={product.name} \n                    loading=\"lazy\"\n                    width=\"400\"\n                    height=\"400\"\n                    style={{width: '100%', height: 'auto', maxWidth: '400px'}}\n                  />\n                </div>\n                {allImages.length > 1 && (\n                  <>\n                    <div style={{textAlign:'center', color:'#888', fontSize:'1.05rem', marginTop: 20, marginBottom: 8, border:'none'}}>\n                      Чтобы увеличить, нажмите на картинку\n                    </div>\n                    <div className=\"product-thumbs\">\n                      {allImages.map((img, idx) => (\n                        <img \n                          key={idx} \n                          src={img} \n                          alt={product.name + idx} \n                          className={activeImage === idx ? \"active\" : \"\"} \n                          onClick={() => setActiveImage(idx)} \n                          loading=\"lazy\"\n                          width=\"80\"\n                          height=\"80\"\n                        />\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Инфо и цена справа */}\n            <div className=\"product-info-block\">\n              <>\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 6, wordBreak: 'break-word', marginTop: 28, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 8, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\n                <div className=\"product-divider\"></div>\n                {/* Компонент выбора вариаций */}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-variations\" style={{\n                    marginBottom: '20px',\n                    padding: '15px',\n                    border: '1px solid #e0e0e0',\n                    borderRadius: '8px',\n                    backgroundColor: '#f9f9f9'\n                  }}>\n                    <h3 style={{ margin: '0 0 15px 0', fontSize: '1.1rem', fontWeight: '600' }}>\n                      Выберите параметры\n                    </h3>\n                    {productGroup.parameters.map((param, index) => (\n                      <div key={index} style={{ marginBottom: '15px' }}>\n                        <label style={{ \n                          display: 'block', \n                          marginBottom: '8px', \n                          fontWeight: '500',\n                          color: '#333'\n                        }}>\n                          {param.name}\n                          {param.required && <span style={{ color: '#e74c3c' }}> *</span>}\n                        </label>\n                        \n                        {param.type === 'select' && (\n                          <select\n                            value={selectedParameters[param.name] || ''}\n                            onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                            required={param.required}\n                            style={{\n                              width: '100%',\n                              padding: '8px 12px',\n                              border: '1px solid #ddd',\n                              borderRadius: '4px',\n                              fontSize: '14px'\n                            }}\n                          >\n                            <option value=\"\">Выберите {param.name.toLowerCase()}</option>\n                            {param.values.map((value, valueIndex) => (\n                              <option key={valueIndex} value={value}>\n                                {value}\n                              </option>\n                            ))}\n                          </select>\n                        )}\n                        \n                        {param.type === 'radio' && (\n                          <div style={{ display: 'flex', gap: '15px', flexWrap: 'wrap' }}>\n                            {param.values.map((value, valueIndex) => (\n                              <label key={valueIndex} style={{ \n                                display: 'flex', \n                                alignItems: 'center', \n                                cursor: 'pointer',\n                                fontSize: '14px'\n                              }}>\n                                <input\n                                  type=\"radio\"\n                                  name={param.name}\n                                  value={value}\n                                  checked={selectedParameters[param.name] === value}\n                                  onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                                  required={param.required}\n                                  style={{ marginRight: '6px' }}\n                                />\n                                {value}\n                              </label>\n                            ))}\n                          </div>\n                        )}\n                        \n                        {param.type === 'checkbox' && (\n                          <label style={{ \n                            display: 'flex', \n                            alignItems: 'center', \n                            cursor: 'pointer',\n                            fontSize: '14px'\n                          }}>\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedParameters[param.name] === 'true'}\n                              onChange={(e) => handleParameterChange(param.name, e.target.checked ? 'true' : 'false')}\n                              style={{ marginRight: '6px' }}\n                            />\n                            {param.name}\n                          </label>\n                        )}\n                      </div>\n                    ))}\n                    \n                    {selectedVariant && (\n                      <div style={{\n                        marginTop: '15px',\n                        padding: '10px',\n                        backgroundColor: '#e8f5e8',\n                        border: '1px solid #4caf50',\n                        borderRadius: '4px'\n                      }}>\n                        <strong>Выбрана вариация:</strong> {selectedVariant.productId?.name}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                <div className=\"product-buy-row\">\n                  <div className=\"product-price-block\">\n                    <div className=\"product-price-label-value\">\n                      <div className=\"product-price-label\">Цена</div>\n                      <div className=\"product-price-value\">\n                        {Number(getCurrentPrice()).toLocaleString('ru-RU')}\n                        <span className=\"product-currency\">₸</span>\n                      </div>\n                    </div>\n\n                    {getCurrentProduct().article && (\n                      <div style={{\n                        fontSize: '0.85rem', \n                        color: '#666', \n                        marginTop: 6, \n                        textAlign: 'left',\n                        wordBreak: 'break-word',\n                        width: '140px',\n                        minWidth: '140px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start'\n                      }}>\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\n                        <span style={{marginTop: 2}}>{getCurrentProduct().article}</span>\n                      </div>\n                    )}\n                  </div>\n                  <span className=\"product-price-divider\"></span>\n                  <div className=\"product-buy-btns\">\n                    <button className=\"product-btn-ask\" onClick={handleOpenModal}>Задать вопрос</button>\n                    <div className=\"product-btns-divider\"></div>\n                    <button className=\"product-btn-buy\" onClick={handleBuy}>Купить</button>\n                  </div>\n                </div>\n                <div className=\"product-divider\"></div>\n                <div style={{\n                  marginTop: 14, \n                  background: '#f5f7fa', \n                  borderRadius: 10, \n                  padding: '10px 12px 8px 12px', \n                  fontSize: '0.98rem', \n                  color: '#222', \n                  boxShadow: 'none', \n                  maxWidth: 320,\n                  transition: 'all 0.3s ease',\n                  transform: isCityChanging ? 'scale(0.98)' : 'scale(1)',\n                  opacity: isCityChanging ? 0.8 : 1\n                }}>\n                  <div style={{fontWeight: 600, color: '#1e88e5', marginBottom: 8, fontSize: '1.01rem', display: 'flex', alignItems: 'center', gap: '8px'}}>\n                    <span>Ваш город:</span>\n                    {detectingCity ? (\n                      <span style={{color: '#666', fontSize: '0.9rem'}}>📍 Определяем...</span>\n                    ) : (\n                      <select \n                        value={selectedCity} \n                        onChange={handleCityChange}\n                        className=\"city-select\"\n                      >\n                        {cities.map(city => (\n                          <option key={city} value={city}>{city}</option>\n                        ))}\n                      </select>\n                    )}\n                  </div>\n                  \n                  {/* Заменяем статичный блок на динамический компонент */}\n                  <DeliveryInfo \n                    city={selectedCity} \n                    onDeliverySelect={setSelectedDelivery}\n                    compact={true}\n                    selectedDelivery={selectedDelivery}\n                  />\n                  \n                  <div style={{background:'#f0f1f4', borderRadius:7, padding:'7px 10px', marginTop:8, color:'#222', fontSize:'0.93rem', display:'flex', alignItems:'center', gap:6}}>\n                    <span style={{fontSize:15, color:'#888'}}>ⓘ</span>\n                    <span>\n                      {selectedCity === 'Алматы' \n                        ? 'Срок доставки рассчитывается менеджером после оформления заказа'\n                        : selectedDelivery \n                          ? `Доставка в ${selectedCity} через ${selectedDelivery.name.toLowerCase()}. ${selectedDelivery.type === 'pickup' ? 'Самовывоз из наших пунктов' : selectedDelivery.type === 'indriver' ? 'В течение дня' : selectedDelivery.type === 'yandex' ? '1-2 дня' : selectedDelivery.type === 'kazpost' ? '3-5 дней' : selectedDelivery.type === 'cdek' ? '1-2 дня' : selectedDelivery.type === 'air' ? '1-3 дня' : '1-3 дня'}.`\n                          : `Доставка в ${selectedCity} осуществляется через курьерские службы. Срок доставки 1-3 дня.`\n                      }\n                    </span>\n                  </div>\n                </div>\n              </>\n            </div>\n          </div>\n          {/* Вкладки снизу */}\n          <div className=\"product-tabs-wrap\">\n            <Tabs product={getCurrentProduct()} />\n                </div>\n            </div>\n      </main>\n      {/* Мини-каталог популярных товаров */}\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Популярные товары</h2>\n        </div>\n        <div className=\"mini-catalog-slider-wrapper\">\n          <div className=\"mini-catalog-slider\">\n            {/* Первый набор карточек */}\n            {miniProducts.map(product => (\n              <div\n                key={`first-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? product.price + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\n            {miniProducts.map(product => (\n              <div\n                key={`second-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? product.price + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} />\n    {/* Модальное окно для увеличенного фото */}\n    {showImageModal && (\n      <div className=\"image-modal-overlay\" onClick={handleCloseImageModal} style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'rgba(0,0,0,0.55)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>\n        <div className=\"image-modal-content\" style={{background:'#fff',padding:0,borderRadius:'8px',boxShadow:'0 8px 32px rgba(0,0,0,0.18)',position:'relative',maxWidth:'90vw',maxHeight:'90vh',display:'flex',flexDirection:'column',alignItems:'center'}} onClick={e=>e.stopPropagation()}>\n          <img src={allImages[activeImage]} alt={getCurrentProduct().name} style={{maxWidth:'80vw',maxHeight:'80vh',objectFit:'contain',background:'#fff'}} width=\"800\" height=\"600\" />\n          {allImages.length > 1 && (\n            <>\n              <button \n                onClick={handlePrevImage} \n                style={{\n                  position: 'absolute',\n                  left: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ‹\n              </button>\n              <button \n                onClick={handleNextImage} \n                style={{\n                  position: 'absolute',\n                  right: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ›\n              </button>\n              <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                <span style={{color:'#666', fontSize:'14px'}}>{activeImage + 1} из {allImages.length}</span>\n              </div>\n            </>\n          )}\n          <button onClick={handleCloseImageModal} style={{position:'absolute',top:8,right:12,fontSize:32,background:'none',border:'none',color:'#222',cursor:'pointer',lineHeight:1}}>&times;</button>\n        </div>\n      </div>\n    )}\n    </div>\n  );\n};\n\nfunction Tabs({product}) {\n  const [tab,setTab]=React.useState('desc');\n  \n  // Функция для парсинга характеристик из строки\n  const parseCharacteristics = (characteristicsStr) => {\n    if (!characteristicsStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(characteristicsStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\n        const [name, value] = line.split(':').map(s => s.trim());\n        return { name, value };\n      });\n    }\n  };\n  \n  // Функция для парсинга комплектации из строки\n  const parseEquipment = (equipmentStr) => {\n    if (!equipmentStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(equipmentStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам или запятым\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\n    }\n  };\n  \n  const characteristics = parseCharacteristics(product.characteristics);\n  const equipment = parseEquipment(product.equipment);\n  return (\n    <div className=\"product-tabs\">\n      <div className=\"product-tabs-header\">\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\n      </div>\n      <div className=\"product-tabs-content\">\n        {tab==='desc' && (\n          <div className=\"product-desc-kaspi-block\">\n            {product.description ? (\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='specs' && (\n          <div className=\"product-specs-kaspi-block\">\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\n            {characteristics.length > 0 ? (\n              <div className=\"product-specs-group\">\n                <div className=\"product-specs-flex-table\">\n                  {characteristics.map((spec, i) => (\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\n                      <span className=\"product-specs-flex-dots\"></span>\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\n            )}\n          </div>\n        )}\n        {tab==='equip' && (\n          <div className=\"product-desc-kaspi-block\">\n            {equipment.length > 0 ? (\n              <ul style={{margin: 0, paddingLeft: 20}}>\n                {equipment.map((item, idx) => (\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Product; "],"names":["_ref","isOpen","onClose","onSubmit","formData","setFormData","useState","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","value","target","_jsx","className","onClick","children","_jsxs","stopPropagation","async","preventDefault","validation","trim","test","isValid","Object","keys","length","validateForm","result","Date","toLocaleString","console","log","success","error","sendToTelegram","alert","htmlFor","type","id","onChange","placeholder","rows","disabled","categories","Tabs","_ref2","product","tab","setTab","React","characteristics","characteristicsStr","JSON","parse","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","item","parseEquipment","description","dangerouslySetInnerHTML","__html","replace","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","Product","_selectedVariant$prod","useParams","setProduct","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","setSelectedCity","localStorage","getItem","selectedDelivery","setSelectedDelivery","setDeliveryInfo","isCityChanging","setIsCityChanging","productGroup","setProductGroup","selectedVariant","setSelectedVariant","selectedParameters","setSelectedParameters","detectingCity","setDetectingCity","cities","allImages","getAllImages","currentProduct","getCurrentProduct","images","image","push","Array","isArray","images2","images3","navigate","useNavigate","API_URL","useEffect","productRes","fetch","productData","json","groupRes","ok","_groupData$baseProduc","groupData","baseProductId","_id","productId","parameters","price","groupError","fetchProductAndGroup","then","res","data","information","catch","savedCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","address","detectedCity","includes","setItem","enableHighAccuracy","timeout","maximumAge","textAlign","Header","href","Footer","categoryObj","find","cat","category","categoryName","handleParameterChange","advantages","paramName","newParameters","matchingVariant","variants","variant","isActive","entries","every","key","val","getCurrentPrice","handleCloseImageModal","fetchDeliveryInfo","encodeURIComponent","cityName","shortDesc","getOptimalImage","preferredSize","arguments","undefined","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","fontSize","_Fragment","fontWeight","handleImageClick","cursor","src","alt","width","height","maxWidth","marginTop","border","img","wordBreak","subtitle","borderRadius","backgroundColor","param","index","required","toLowerCase","values","valueIndex","checked","marginRight","Number","article","minWidth","flexDirection","handleOpenModal","handleBuy","currentPrice","state","originalPrice","background","boxShadow","transition","transform","opacity","newCity","setTimeout","DeliveryInfo","onDeliverySelect","compact","window","location","minHeight","fontFamily","justifyContent","srcSet","objectFit","borderTop","alignSelf","textDecoration","letterSpacing","verticalAlign","Modal","handleCloseModal","top","left","zIndex","maxHeight","prev","right"],"sourceRoot":""}