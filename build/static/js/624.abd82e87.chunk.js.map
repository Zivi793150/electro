{"version":3,"file":"static/js/624.abd82e87.chunk.js","mappings":"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","sources":["utils/price.js","utils/cache.js","components/Modal.js","utils/telegram.js","pages/Product.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { validateForm, sendToTelegram } from '../utils/telegram';\nimport { trackFormSubmit } from '../utils/analytics';\nimport '../styles/Modal.css';\n\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Очищаем ошибку при вводе\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: ''\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Валидация формы\n    const validation = validateForm(formData);\n    if (!validation.isValid) {\n      setErrors(validation.errors);\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Отправка в Telegram\n      const result = await sendToTelegram(formData, product);\n      \n      if (result.success) {\n        // Отслеживаем успешную отправку формы\n        trackFormSubmit('contact_form', product?.id || null);\n        onSubmit(formData);\n        setFormData({ name: '', phone: '', message: '' });\n        setErrors({});\n        onClose();\n        navigate('/thanks');\n      } else {\n        alert('Ошибка отправки заявки. Попробуйте позже.');\n      }\n    } catch (error) {\n      console.error('Ошибка отправки:', error);\n      alert('Ошибка отправки заявки. Попробуйте позже.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Оставить заявку</h3>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"modal-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Имя *</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className={errors.name ? 'error' : ''}\n            />\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Телефон *</label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              value={formData.phone}\n              onChange={handleChange}\n              className={errors.phone ? 'error' : ''}\n              placeholder=\"+7 (777) 777-77-77\"\n            />\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Сообщение</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              rows=\"4\"\n              placeholder=\"Опишите ваш запрос...\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn-submit\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal; ","// Утилита для отправки форм в Telegram\n\nexport const sendToTelegram = async (formData, product = null) => {\n  try {\n    // Определяем базовый URL API (локально шлём на порт сервера)\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\n    const API_BASE = 'https://electro-1-vjdu.onrender.com';\n\n    // Отправляем данные на наш API endpoint\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        phone: formData.phone,\n        message: formData.message,\n        product: product\n      })\n    });\n    \n    const result = await response.json();\n    \n    if (result.success) {\n      return { success: true, message: 'Заявка успешно отправлена!' };\n    } else {\n      console.error('Ошибка API:', result.error);\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\n    }\n    \n  } catch (error) {\n    console.error('Ошибка отправки в Telegram:', error);\n    return { success: false, message: 'Ошибка отправки заявки' };\n  }\n};\n\n// Функция для валидации формы\nexport const validateForm = (formData) => {\n  const errors = {};\n  \n  if (!formData.name.trim()) {\n    errors.name = 'Имя обязательно для заполнения';\n  }\n  \n  if (!formData.phone.trim()) {\n    errors.phone = 'Телефон обязателен для заполнения';\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\n    errors.phone = 'Введите корректный номер телефона';\n  }\n  \n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n}; ","import React, { useState, useEffect } from 'react';\nimport { formatTenge } from '../utils/price';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\n// import DeliveryInfo from '../components/DeliveryInfo';\nimport { trackProductView, trackButtonClick, trackPurchaseStart } from '../utils/analytics';\nimport { fetchWithCache } from '../utils/cache';\nimport '../styles/Product.css';\nimport '../styles/ProductVariations.css';\nimport '../components/ImageModal.css';\n\n// Надёжный fetch с повторами и таймаутом\nconst fetchWithRetry = async (url, options = {}, retries = 2, backoffMs = 800, timeoutMs = 12000) => {\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers: { 'Accept': 'application/json', ...(options.headers || {}) },\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (attempt === retries) throw error;\n      await new Promise(r => setTimeout(r, backoffMs * Math.pow(2, attempt)));\n    }\n  }\n};\n\nconst categories = [\n  { id: 'bolgarki', name: 'Болгарки' },\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\n  { id: 'hammers', name: 'Перфораторы' },\n  { id: 'drills', name: 'Дрели' },\n  { id: 'jigsaws', name: 'Лобзики' },\n  { id: 'levels', name: 'Лазерные уровни' },\n  { id: 'generators', name: 'Генераторы' },\n  { id: 'measuring', name: 'Измерители' }\n];\n\nconst Product = () => {\n  const { id, slug } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [siteSettings, setSiteSettings] = useState({\n    city: 'Алматы',\n    productPageText: '',\n    deliveryInfo: {\n      freeDelivery: 'Бесплатная доставка по городу',\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\n      pickupAddress: 'ул. Толе би 216Б',\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\n    }\n  });\n  \n  // Раздел доставки отключён по требованию — связанные состояния скрыты\n  const [selectedCity] = useState('Алматы');\n  const [selectedDelivery] = useState(null);\n  const [deliveryInfo] = useState(null);\n  const [isCityChanging] = useState(false);\n  \n  // Состояние для вариаций товара\n  const [productGroup, setProductGroup] = useState(null);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n  const [selectedParameters, setSelectedParameters] = useState({});\n  \n\n  \n  const [detectingCity, setDetectingCity] = useState(false);\n  \n  // Функция для автоматического определения города\n  const detectUserCity = () => {};\n  \n  // Список городов Казахстана\n  const cities = [\n    'Алматы',\n    'Астана',\n    'Шымкент',\n    'Актобе',\n    'Караганда',\n    'Тараз',\n    'Павлодар',\n    'Семей',\n    'Усть-Каменогорск',\n    'Уральск',\n    'Кызылорда',\n    'Костанай',\n    'Петропавловск',\n    'Атырау',\n    'Актау',\n    'Темиртау',\n    'Туркестан',\n    'Кокшетау',\n    'Талдыкорган',\n    'Экибастуз',\n    'Рудный',\n    'Жанаозен',\n    'Жезказган',\n    'Балхаш',\n    'Кентау',\n    'Сатпаев',\n    'Капчагай',\n    'Риддер',\n    'Степногорск',\n    'Аральск',\n    'Аркалык',\n    'Житикара',\n    'Кандыагаш',\n    'Лисаковск',\n    'Шахтинск',\n    'Абай',\n    'Аягоз',\n    'Зайсан',\n    'Курчатов',\n    'Приозерск',\n    'Серебрянск',\n    'Текели',\n    'Уштобе',\n    'Чарск',\n    'Шемонаиха',\n    'Щучинск'\n  ];\n  \n  // Объединяем все изображения из разных полей\n  const getAllImages = () => {\n    const currentProduct = getCurrentProduct();\n    const images = [];\n    \n    // Добавляем основное изображение из поля image (если есть)\n    if (currentProduct?.image) {\n      images.push(currentProduct.image);\n    }\n    \n    // Добавляем изображения из поля images\n    if (Array.isArray(currentProduct?.images)) {\n      images.push(...currentProduct.images);\n    }\n    \n    // Добавляем изображения из поля images2\n    if (Array.isArray(currentProduct?.images2)) {\n      images.push(...currentProduct.images2);\n    }\n    \n    // Добавляем изображения из поля images3\n    if (Array.isArray(currentProduct?.images3)) {\n      images.push(...currentProduct.images3);\n    }\n    \n    // Если нет изображений, добавляем placeholder\n    if (images.length === 0) {\n      images.push('/images/products/placeholder.png');\n    }\n    \n    return images;\n  };\n  \n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    const fetchProductAndGroup = async () => {\n      try {\n        // Загружаем товар: по id или по slug\n        let productData;\n        if (id) {\n          productData = await fetchWithCache(`${API_URL}/${id}`, {}, 5 * 60 * 1000);\n        } else if (slug) {\n          // Загружаем все товары и ищем по slug\n          try {\n            const allProducts = await fetchWithCache(`${API_URL}`, {}, 5 * 60 * 1000);\n            productData = allProducts.find(p => p.slug === slug);\n            if (!productData) {\n              productData = { error: 'Товар не найден' };\n            }\n          } catch (error) {\n            productData = { error: 'Ошибка при загрузке товара' };\n          }\n        }\n        \n        if (productData.error) {\n          setError(productData.error);\n          setProduct(null);\n          setLoading(false);\n          return;\n        }\n        \n        setProduct(productData);\n        \n        // Отслеживаем просмотр товара с дополнительными данными\n        trackProductView(\n          productData._id, \n          productData.name, \n          productData.price,\n          productData.category\n        );\n        \n        // Загружаем группу вариаций для этого товара\n        try {\n         const groupRes = await fetchWithRetry(`https://electro-1-vjdu.onrender.com/api/product-groups/by-product/${productData._id}`);\n          if (groupRes.ok) {\n            const groupData = await groupRes.json();\n            setProductGroup(groupData);\n            \n             // Инициализация выбранной вариации\n            if (groupData.baseProductId?._id === productData._id) {\n               // Открыли страницу базового товара\n               setSelectedVariant(null);\n               setSelectedParameters({});\n             } else {\n               // Открыли страницу вариации — находим её и выставляем параметры\n               const currentVariant = (groupData.variants || []).find(v => v.productId && (v.productId._id === id));\n               if (currentVariant) {\n                 setSelectedVariant(currentVariant);\n                 setSelectedParameters(currentVariant.parameters || {});\n               }\n            }\n          }\n        } catch (groupError) {\n          console.log('Группа вариаций не найдена для товара:', groupError);\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        setError('Ошибка загрузки товара');\n        setLoading(false);\n      }\n    };\n    \n    fetchProductAndGroup();\n  }, [id, slug]);\n\n  useEffect(() => {\n    fetchWithCache(`${API_URL}?limit=4`, {}, 5 * 60 * 1000) // Кэш на 5 минут\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Загружаем информацию сайта\n  useEffect(() => {\n   fetchWithRetry('https://electro-1-vjdu.onrender.com/api/information')\n      .then(res => res.json())\n      .then(data => {\n        if (data.information) {\n          setSiteSettings(data.information);\n        }\n      })\n      .catch(error => {\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\n      });\n  }, []);\n  \n  // Инициализируем выбранный город из localStorage и автоматически определяем город\n  // Блок определения города более не используется на странице товара\n\n  // Сбрасываем активное изображение при смене товара\n  useEffect(() => {\n    setActiveImage(0);\n  }, [selectedVariant]);\n\n  if (loading) {\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\n  }\n  if (error || !product) {\n    return (\n      <div className=\"product\">\n        <Header />\n        <main className=\"product-main\">\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\n            <h1>Товар не найден</h1>\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/catalog\">каталог</a>.</p>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Найти категорию для хлебных крошек\n  const categoryObj = categories.find(cat => cat.id === product.category);\n  const categoryName = categoryObj ? categoryObj.name : '';\n\n  // Преимущества — если есть в product, иначе дефолтные\n  const productAdvantages = product.advantages || [\n    'Высокий крутящий момент и мощность',\n    'Долговечный литий-ионный аккумулятор',\n    'Компактный и лёгкий корпус для работы одной рукой'\n  ];\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = (formData) => {\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\n  };\n\n  const handleBuy = () => {\n    const currentProduct = getCurrentProduct();\n    const currentPrice = getCurrentPrice();\n    \n    // Отслеживаем начало покупки\n    trackPurchaseStart(\n      currentProduct._id, \n      currentProduct.name, \n      currentPrice, \n      'product_page'\n    );\n    \n    navigate('/checkout', { \n      state: { \n        product: currentProduct,\n        selectedVariant,\n        selectedParameters,\n        originalPrice: product.price,\n        currentPrice\n      } \n    });\n  };\n\n  // Функции для работы с вариациями\n  const normalize = (val) => {\n    if (val === undefined || val === null) return '';\n    return String(val).trim();\n  };\n\n  const handleParameterChange = (paramName, value) => {\n    const newParameters = { ...selectedParameters, [paramName]: value };\n    setSelectedParameters(newParameters);\n    \n    // Находим подходящую вариацию\n    if (productGroup) {\n      // Удаляем параметр из поиска, если значение пустое или false\n      const filteredParameters = {};\n      Object.entries(newParameters).forEach(([key, val]) => {\n        if (val && val !== 'false') {\n          filteredParameters[key] = val;\n        }\n      });\n      \n      // Если нет выбранных параметров, сбрасываем на базовый товар\n      if (Object.keys(filteredParameters).length === 0) {\n        setSelectedVariant(null);\n        return;\n      }\n      \n      // Ищем вариацию с точным совпадением всех параметров\n      let matchingVariant = productGroup.variants.find(variant => {\n        if (!variant.isActive) return false;\n        \n        // Проверяем, что все выбранные параметры совпадают\n        return Object.entries(filteredParameters).every(([key, val]) => {\n          return normalize(variant.parameters[key]) === normalize(val);\n        });\n      });\n      \n      if (matchingVariant) {\n        setSelectedVariant(matchingVariant);\n      } else {\n        // Нет точной комбинации — не подставляем другой товар\n        setSelectedVariant(null);\n      }\n    }\n  };\n\n  // Получаем текущий товар для отображения (с учетом выбранной вариации)\n  const getCurrentProduct = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      // Убеждаемся, что у нас есть полная информация о товаре\n      return selectedVariant.productId;\n    }\n    return product;\n  };\n\n  // Получаем текущую цену\n  const getCurrentPrice = () => {\n    if (selectedVariant && selectedVariant.productId) {\n      return selectedVariant.productId.price;\n    }\n    return product?.price;\n  };\n\n  // Проверяем, есть ли вариации с определенным параметром\n  const hasVariationsWithParameter = (paramName) => {\n    if (!productGroup) return false;\n    return productGroup.variants.some(variant => \n      variant.isActive && variant.parameters[paramName]\n    );\n  };\n\n  // Получаем доступные значения для параметра\n  const getAvailableValuesForParameter = (paramName) => {\n    if (!productGroup) return [];\n    // Учитываем другие выбранные параметры, чтобы не предлагать невозможные комбинации\n    const otherParams = { ...selectedParameters };\n    delete otherParams[paramName];\n    const values = new Set();\n    productGroup.variants.forEach(variant => {\n      if (!variant.isActive) return;\n      // Совпадает ли вариант по всем другим выбранным параметрам?\n      const matchesOthers = Object.entries(otherParams).every(([k, v]) => {\n        if (!v || v === 'false') return true;\n        return normalize(variant.parameters[k]) === normalize(v);\n      });\n      if (!matchesOthers) return;\n      const val = variant.parameters[paramName];\n      if (val) values.add(val);\n    });\n    return Array.from(values);\n  };\n\n  // Все возможные значения параметра (без учёта выбранных других параметров)\n  const getAllValuesForParameter = (param) => {\n    if (Array.isArray(param.values) && param.values.length > 0) return param.values;\n    if (!productGroup) return [];\n    const values = new Set();\n    productGroup.variants.forEach(variant => {\n      const val = variant.parameters[param.name];\n      if (val) values.add(val);\n    });\n    return Array.from(values);\n  };\n\n  // Модалка фото\n  const handleImageClick = () => setShowImageModal(true);\n  const handleCloseImageModal = () => setShowImageModal(false);\n  const handlePrevImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev - 1 + images.length) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  const handleNextImage = (e) => {\n    e.stopPropagation();\n    const images = getAllImages();\n    setActiveImage((prev) => {\n      const newIndex = (prev + 1) % images.length;\n      return newIndex >= 0 && newIndex < images.length ? newIndex : 0;\n    });\n  };\n  \n  const handleCityChange = () => {};\n\n  const fetchDeliveryInfo = async () => {};\n  \n\n\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\n    if (product.productGroup && product.productGroup.coverImage) {\n      return product.productGroup.coverImage;\n    }\n    \n    // Затем проверяем обычные изображения товара\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  return (\n    <div className=\"product-page\">\n      <Header />\n      <main className=\"product-main\">\n        <div className=\"product-container\">\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n            <a href=\"/\">Главная</a>\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <a href=\"/catalog\">Каталог</a>\n            {categoryName && (\n              <>\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                <a href={`/catalog?category=${product.category}`}>{categoryName}</a>\n              </>\n            )}\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <span style={{color:'#1a2236', fontWeight:500}}>{product.name}</span>\n          </nav>\n          <div className=\"product-flex\">\n            {/* Фото и миниатюры */}\n            <div className=\"product-gallery\">\n              <div className=\"product-gallery-inner\">\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\n                  <img \n                    src={getAllImages()[activeImage]} \n                    alt={product.name} \n                    loading=\"lazy\"\n                    style={{maxWidth: '100%', maxHeight: '100%', objectFit: 'contain'}}\n                  />\n                </div>\n                {getAllImages().length > 1 && (\n                  <>\n                    <div className=\"product-thumbs\">\n                      {getAllImages().map((img, idx) => (\n                        <img \n                          key={idx} \n                          src={img} \n                          alt={product.name + idx} \n                          className={activeImage === idx ? \"active\" : \"\"} \n                          onClick={() => setActiveImage(idx)} \n                          loading=\"lazy\"\n                          width=\"80\"\n                          height=\"80\"\n                        />\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Инфо и цена справа */}\n            <div className=\"product-info-block\">\n              <>\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 4, wordBreak: 'break-word', marginTop: 0, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 6, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\n                <div className=\"product-divider\"></div>\n                {/* Компонент выбора вариаций */}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-variations\" style={{\n                    marginTop: '4px',\n                    marginBottom: '4px'\n                  }}>\n                    {productGroup.parameters\n                      .filter(param => {\n                        const paramNameLower = (param.name || '').toLowerCase();\n                        const isModelParam = paramNameLower.includes('модель');\n\n                        // Требуем, чтобы для «модель» были выбраны и мощность, и регулятор\n                        if (isModelParam) {\n                          const powerParam = (productGroup.parameters.find(p => (p.name || '').toLowerCase().includes('мощ')) || {}).name;\n                          const regulatorParam = (productGroup.parameters.find(p => (p.name || '').toLowerCase().includes('регуля')) || {}).name;\n                          const powerSelected = powerParam ? !!selectedParameters[powerParam] : false;\n                          const regulatorSelected = regulatorParam ? !!selectedParameters[regulatorParam] : false;\n                          if (!powerSelected || !regulatorSelected) return false;\n                        }\n\n                        const visibleByDefault = param.visibleByDefault !== false;\n                        if (visibleByDefault) return true;\n\n                        const allowed = new Set((Array.isArray(param.visibleForProductIds) ? param.visibleForProductIds : []).map(String));\n                        if (allowed.size === 0) return false;\n\n                        const currentId = getCurrentProduct()?._id ? String(getCurrentProduct()._id) : '';\n                        if (currentId && allowed.has(currentId)) return true;\n\n                        // If a variant from the allowed list is still possible given the selected parameters (excluding this param), show it\n                        const otherParams = { ...selectedParameters };\n                        delete otherParams[param.name];\n                        // Если другие параметры ещё не выбраны, изначально скрываем\n                        const hasAnyOther = Object.values(otherParams).some(v => v && v !== 'false' && String(v).trim() !== '');\n                        if (!hasAnyOther) return false;\n                        const matchesOtherParams = (variant) => {\n                          return Object.entries(otherParams).every(([k, v]) => {\n                            if (!v || v === 'false') return true;\n                            return normalize(variant.parameters[k]) === normalize(v);\n                          });\n                        };\n                        const hasCandidate = (productGroup.variants || []).some(v => {\n                          if (!v.isActive || !v.productId) return false;\n                          const vid = typeof v.productId === 'string' ? v.productId : (v.productId._id || v.productId);\n                          if (!vid) return false;\n                          if (!allowed.has(String(vid))) return false;\n                          return matchesOtherParams(v);\n                        });\n                        return hasCandidate;\n                      })\n                      .map((param, index) => {\n                      // Для чекбоксов проверяем, есть ли вариации с этим параметром\n                      if (param.type === 'checkbox' && !hasVariationsWithParameter(param.name)) {\n                        return null; // Не показываем чекбокс, если нет вариаций с этим параметром\n                      }\n                      \n                      // Для select и radio показываем все возможные значения, но недоступные отключаем\n                      const allValues = param.type === 'select' || param.type === 'radio'\n                        ? getAllValuesForParameter(param)\n                        : param.values;\n                      const availableValues = param.type === 'select' || param.type === 'radio' \n                        ? getAvailableValuesForParameter(param.name)\n                        : param.values;\n                      \n                      return (\n                        <div key={index} style={{ marginBottom: '2px' }}>\n                          <label style={{ \n                            display: 'block', \n                            marginBottom: '4px', \n                            fontWeight: '500',\n                            color: '#333'\n                          }}>\n                            {param.name}\n                            {param.required && <span style={{ color: '#e74c3c' }}> *</span>}\n                          </label>\n                          \n                          {param.type === 'select' && (\n                            <select\n                              value={selectedParameters[param.name] || ''}\n                              onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                              required={param.required}\n                              style={{\n                                width: '100%',\n                                padding: '8px 12px',\n                                border: 'none',\n                                borderRadius: '4px',\n                                fontSize: '14px',\n                                background: 'transparent'\n                              }}\n                            >\n                              <option value=\"\">Выберите {param.name.toLowerCase()}</option>\n                              {allValues.map((value, valueIndex) => (\n                                <option key={valueIndex} value={value} disabled={!availableValues.includes(value)}>\n                                  {value}\n                                </option>\n                              ))}\n                            </select>\n                          )}\n                          \n                          {param.type === 'radio' && (\n                            <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n                              {allValues.map((value, valueIndex) => (\n                                <label key={valueIndex} style={{ \n                                  display: 'flex', \n                                  alignItems: 'center', \n                                  cursor: 'pointer',\n                                  fontSize: '14px'\n                                }}>\n                                  <input\n                                    type=\"radio\"\n                                    name={param.name}\n                                    value={value}\n                                    checked={selectedParameters[param.name] === value}\n                                    onChange={(e) => handleParameterChange(param.name, e.target.value)}\n                                    required={param.required}\n                                    style={{ marginRight: '6px' }}\n                                    disabled={!availableValues.includes(value)}\n                                  />\n                                  {value}\n                                </label>\n                              ))}\n                            </div>\n                          )}\n                          \n                          {param.type === 'checkbox' && (\n                            <label style={{ \n                              display: 'flex', \n                              alignItems: 'center', \n                              cursor: 'pointer',\n                              fontSize: '14px'\n                            }}>\n                              <input\n                                type=\"checkbox\"\n                                checked={selectedParameters[param.name] === 'true'}\n                                onChange={(e) => handleParameterChange(param.name, e.target.checked ? 'true' : 'false')}\n                                style={{ marginRight: '6px' }}\n                              />\n                              {param.name}\n                            </label>\n                          )}\n                        </div>\n                      );\n                    })}\n                    \n\n                  </div>\n                )}\n                {productGroup && productGroup.parameters.length > 0 && (\n                  <div className=\"product-divider\"></div>\n                )}\n\n                <div className=\"product-buy-row\">\n                  <div className=\"product-price-block\">\n                    <div className=\"product-price-label-value\">\n                      <div className=\"product-price-label\">Цена</div>\n                      <div className=\"product-price-value\">\n                        {formatTenge(getCurrentPrice())}\n                        <span className=\"product-currency\">₸</span>\n                      </div>\n                    </div>\n\n                    {getCurrentProduct().article && (\n                      <div style={{\n                        fontSize: '0.85rem', \n                        color: '#666', \n                        marginTop: 6, \n                        textAlign: 'left',\n                        wordBreak: 'break-word',\n                        width: '140px',\n                        minWidth: '140px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start'\n                      }}>\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\n                        <span style={{marginTop: 2}}>{getCurrentProduct().article}</span>\n                      </div>\n                    )}\n                  </div>\n                  <span className=\"product-price-divider\"></span>\n                  <div className=\"product-buy-btns\">\n                    <button \n                      className=\"product-btn-ask\" \n                      onClick={() => {\n                        trackButtonClick('Задать вопрос', 'product_page', id);\n                        handleOpenModal();\n                      }}\n                      data-analytics-context=\"product_page\"\n                    >\n                      Задать вопрос\n                    </button>\n                    <div className=\"product-btns-divider\"></div>\n                    <button \n                      className=\"product-btn-buy\" \n                      onClick={handleBuy}\n                      data-analytics-context=\"product_page\"\n                    >\n                      Купить\n                    </button>\n                  </div>\n                </div>\n                <div className=\"product-divider\"></div>\n                {siteSettings.productPageText && (\n                  <div className=\"product-page-text\" style={{\n                    fontSize: '1rem',\n                    color: '#222',\n                    marginBottom: 6,\n                    fontWeight: 500,\n                    marginTop: 12,\n                    lineHeight: 1.3,\n                    wordWrap: 'break-word',\n                    wordBreak: 'break-word',\n                    overflowWrap: 'break-word',\n                    whiteSpace: 'normal',\n                    maxWidth: '100%',\n                    width: '100%'\n                  }}>\n                    {siteSettings.productPageText}\n                  </div>\n                )}\n                {/* Блок доставки скрыт по требованию */}\n              </>\n            </div>\n          </div>\n          {/* Вкладки снизу */}\n          <div className=\"product-tabs-wrap\">\n            <Tabs product={getCurrentProduct()} />\n                </div>\n            </div>\n      </main>\n      {/* Мини-каталог популярных товаров */}\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Популярные товары</h2>\n        </div>\n        <div className=\"mini-catalog-slider-wrapper\">\n          <div className=\"mini-catalog-slider\">\n            {/* Первый набор карточек */}\n            {miniProducts.map(product => (\n              <div\n                key={`first-${product._id}`}\n                className=\"product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"product-image\">\n                  <picture>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"160\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"product-info\">\n                  <div className=\"product-name\">{product.name}</div>\n                  <div className=\"product-price\">{product.price ? formatTenge(product.price) + ' ₸' : ''}</div>\n                </div>\n              </div>\n            ))}\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\n            {miniProducts.map(product => (\n              <div\n                key={`second-${product._id}`}\n                className=\"product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"product-image\">\n                  <picture>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"160\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"product-info\">\n                  <div className=\"product-name\">{product.name}</div>\n                  <div className=\"product-price\">{product.price ? formatTenge(product.price) + ' ₸' : ''}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} product={getCurrentProduct().name} />\n      {/* Модальное окно для увеличенного фото */}\n      {showImageModal && (\n        <div className=\"image-modal-overlay\" onClick={handleCloseImageModal}>\n          <div className=\"image-modal-content\" onClick={e=>e.stopPropagation()}>\n            <img \n              src={getAllImages()[activeImage]} \n              alt={getCurrentProduct().name} \n              className=\"image-modal-img\"\n              style={{objectFit:'contain'}}\n            />\n            {getAllImages().length > 1 && (\n              <>\n                <button \n                  onClick={handlePrevImage} \n                  className=\"image-modal-arrow left\"\n                >\n                  ‹\n                </button>\n                <button \n                  onClick={handleNextImage} \n                  className=\"image-modal-arrow right\"\n                >\n                  ›\n                </button>\n                <div style={{position:'absolute',bottom:'20px',left:'50%',transform:'translateX(-50%)',color:'#666',fontSize:'14px',background:'rgba(255,255,255,0.9)',padding:'4px 12px',borderRadius:'16px'}}>\n                  {activeImage + 1} из {getAllImages().length}\n                </div>\n              </>\n            )}\n            <button onClick={handleCloseImageModal} className=\"image-modal-close\">&times;</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction Tabs({product}) {\n  const [tab,setTab]=React.useState('desc');\n  \n  // Функция для парсинга характеристик из строки\n  const parseCharacteristics = (characteristicsStr) => {\n    if (!characteristicsStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(characteristicsStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\n        const [name, value] = line.split(':').map(s => s.trim());\n        return { name, value };\n      });\n    }\n  };\n  \n  // Функция для парсинга комплектации из строки\n  const parseEquipment = (equipmentStr) => {\n    if (!equipmentStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(equipmentStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам или запятым\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\n    }\n  };\n  \n  const characteristics = parseCharacteristics(product.characteristics);\n  const equipment = parseEquipment(product.equipment);\n  return (\n    <div className=\"product-tabs\">\n      <div className=\"product-tabs-header\">\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\n        <button className={tab==='warranty'?'active':''} onClick={()=>setTab('warranty')}>Гарантия</button>\n      </div>\n      <div className=\"product-tabs-content\">\n        {tab==='desc' && (\n          <div className=\"product-desc-kaspi-block\">\n            {product.description ? (\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='specs' && (\n          <div className=\"product-specs-kaspi-block\">\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\n            {characteristics.length > 0 ? (\n              <div className=\"product-specs-group\">\n                <div className=\"product-specs-flex-table\">\n                  {characteristics.map((spec, i) => (\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\n                      <span className=\"product-specs-flex-dots\"></span>\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\n            )}\n          </div>\n        )}\n        {tab==='equip' && (\n          <div className=\"product-desc-kaspi-block\">\n            {equipment.length > 0 ? (\n              <ul style={{margin: 0, paddingLeft: 20}}>\n                {equipment.map((item, idx) => (\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='warranty' && (\n          <div className=\"product-desc-kaspi-block\">\n            <div className=\"warranty-content\">\n              <p style={{margin: '0 0 20px 0', lineHeight: '1.6', color: '#4b5563', fontSize: '1.05rem'}}>\n                Мы уверены в качестве каждого инструмента, который продаём. Поэтому предоставляем\n                официальную гарантию на 12 месяцев со дня покупки без скрытых условий и мелкого шрифта.\n                Если ваш электроинструмент перестал работать не по вашей вине, вы защищены: мы вернём деньги,\n                отремонтируем бесплатно или заменим на новый.\n              </p>\n              \n              <div className=\"warranty-divider\"></div>\n              \n              <div style={{marginBottom: '20px'}}>\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Что покрывает гарантия?</h4>\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\n                  Гарантия распространяется на все случаи, когда неисправность возникла по вине производителя —\n                  из-за заводского брака или скрытых дефектов.\n                </p>\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\n                  Она действует на протяжении всего года после покупки, включая 11-й и последний месяц. До\n                  последнего дня срока вы можете рассчитывать на нашу поддержку и полное выполнение\n                  обязательств.\n                </p>\n              </div>\n\n              <div className=\"warranty-divider\"></div>\n\n              <div style={{marginBottom: '20px'}}>\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Условия гарантийного обслуживания</h4>\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\n                  Чтобы воспользоваться гарантией, необходимо:\n                </p>\n                <ol style={{margin: '0 0 8px 0', paddingLeft: '20px', lineHeight: '1.6', color: '#4b5563'}}>\n                  <li style={{marginBottom: '6px'}}>Сохранить товарный вид, комплектность и упаковку изделия.</li>\n                  <li style={{marginBottom: '6px'}}>Убедиться в отсутствии следов неправильной эксплуатации, падений или вскрытия корпуса.</li>\n                  <li style={{marginBottom: '6px'}}>Подтвердить, что неисправность возникла по причине заводского дефекта.</li>\n                  <li style={{marginBottom: '6px'}}>Иметь документ, подтверждающий покупку (чек или накладную).</li>\n                  <li style={{marginBottom: '6px'}}>Обратиться в течение 12 месяцев с момента покупки.</li>\n                </ol>\n              </div>\n\n              <div className=\"warranty-divider\"></div>\n\n              <div style={{marginBottom: '20px'}}>\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Порядок обращения по гарантии</h4>\n                <ol style={{margin: '0 0 8px 0', paddingLeft: '20px', lineHeight: '1.6', color: '#4b5563'}}>\n                  <li style={{marginBottom: '6px'}}>Сообщите о неисправности любым удобным способом.</li>\n                  <li style={{marginBottom: '6px'}}>Мы проведём диагностику — по фото, видео или при осмотре изделия.</li>\n                  <li style={{marginBottom: '6px'}}>Если случай подтверждён как гарантийный, предоставляем одно из решений:</li>\n                </ol>\n                <ul style={{margin: '0 0 8px 0', paddingLeft: '40px', lineHeight: '1.6', color: '#4b5563'}}>\n                  <li style={{marginBottom: '4px'}}>возврат денежных средств в полном объёме;</li>\n                  <li style={{marginBottom: '4px'}}>бесплатный ремонт в сервисном отделе;</li>\n                  <li style={{marginBottom: '4px'}}>замену товара на новый аналогичной модели.</li>\n                </ul>\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\n                  Все процессы прозрачны и без лишней бюрократии — мы ценим ваше время и доверие.\n                </p>\n              </div>\n\n              <div className=\"warranty-divider\"></div>\n\n              <div style={{marginBottom: '0'}}>\n                <h4 style={{fontSize: '1rem', fontWeight: '600', margin: '0 0 12px 0', color: '#374151'}}>Когда гарантия не действует</h4>\n                <p style={{margin: '0 0 8px 0', lineHeight: '1.6', color: '#4b5563'}}>\n                  Гарантия не распространяется на:\n                </p>\n                <ul style={{margin: '0 0 0 0', paddingLeft: '20px', lineHeight: '1.6', color: '#4b5563'}}>\n                  <li style={{marginBottom: '6px'}}>механические повреждения, удары, падения, перегрузку или попадание влаги;</li>\n                  <li style={{marginBottom: '6px'}}>неисправности, возникшие из-за неправильного подключения или нарушения правил эксплуатации;</li>\n                  <li style={{marginBottom: '6px'}}>случаи самостоятельного вскрытия или ремонта;</li>\n                  <li style={{marginBottom: '6px'}}>естественный износ деталей и расходных материалов (щётки, кабели, патроны, аккумуляторы и т. д.).</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Product; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","_ref","isOpen","onClose","onSubmit","product","navigate","useNavigate","formData","setFormData","useState","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","target","_objectSpread","_jsx","className","onClick","children","_jsxs","stopPropagation","preventDefault","validation","isValid","Object","keys","validateForm","result","API_BASE","method","headers","body","success","sendToTelegram","trackFormSubmit","id","alert","htmlFor","type","onChange","placeholder","rows","disabled","fetchWithRetry","retries","backoffMs","timeoutMs","attempt","controller","AbortController","timeoutId","setTimeout","abort","signal","clearTimeout","Promise","r","pow","categories","Tabs","_ref5","tab","setTab","React","characteristics","characteristicsStr","parse","_unused","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","_unused2","parseEquipment","description","dangerouslySetInnerHTML","__html","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","fontSize","fontWeight","Product","slug","useParams","setProduct","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","productPageText","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","selectedDelivery","isCityChanging","productGroup","setProductGroup","selectedVariant","setSelectedVariant","selectedParameters","setSelectedParameters","detectingCity","setDetectingCity","getAllImages","currentProduct","getCurrentProduct","images","image","push","Array","isArray","images2","images3","API_URL","useEffect","productData","find","p","trackProductView","_id","price","category","groupRes","_groupData$baseProduc","groupData","baseProductId","currentVariant","variants","v","productId","parameters","groupError","fetchProductAndGroup","then","res","information","catch","textAlign","Header","href","Footer","categoryObj","cat","categoryName","normalize","advantages","val","handleParameterChange","paramName","newParameters","filteredParameters","entries","forEach","matchingVariant","variant","isActive","every","_ref2","getCurrentPrice","handleCloseImageModal","shortDesc","getOptimalImage","preferredSize","coverImage","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","_Fragment","handleImageClick","cursor","src","alt","maxWidth","maxHeight","objectFit","img","width","height","wordBreak","marginTop","subtitle","param","_getCurrentProduct","toLowerCase","powerParam","regulatorParam","powerSelected","regulatorSelected","visibleByDefault","allowed","Set","visibleForProductIds","currentId","has","otherParams","values","some","vid","_ref4","k","index","allValues","add","from","getAllValuesForParameter","availableValues","_ref3","getAvailableValuesForParameter","required","border","borderRadius","background","valueIndex","checked","marginRight","article","minWidth","flexDirection","trackButtonClick","handleBuy","currentPrice","trackPurchaseStart","state","originalPrice","wordWrap","overflowWrap","whiteSpace","window","location","srcSet","Modal","handleCloseModal","prev","newIndex","position","bottom","left","transform"],"sourceRoot":""}