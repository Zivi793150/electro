{"version":3,"file":"static/js/624.9efc03aa.chunk.js","mappings":"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","sources":["components/Modal.js","utils/telegram.js","pages/Product.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { validateForm, sendToTelegram } from '../utils/telegram';\r\nimport '../styles/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Очищаем ошибку при вводе\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Валидация формы\r\n    const validation = validateForm(formData);\r\n    if (!validation.isValid) {\r\n      setErrors(validation.errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Отправка в Telegram\r\n      const result = await sendToTelegram(formData);\r\n      \r\n      if (result.success) {\r\n        onSubmit(formData);\r\n        setFormData({ name: '', phone: '', message: '' });\r\n        setErrors({});\r\n        onClose();\r\n      } else {\r\n        alert('Ошибка отправки заявки. Попробуйте позже.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n      alert('Ошибка отправки заявки. Попробуйте позже.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>Оставить заявку</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Имя *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={errors.name ? 'error' : ''}\r\n            />\r\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Телефон *</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={errors.phone ? 'error' : ''}\r\n              placeholder=\"+7 (777) 777-77-77\"\r\n            />\r\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Сообщение</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"4\"\r\n              placeholder=\"Опишите ваш запрос...\"\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn-submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal; ","// Утилита для отправки форм в Telegram\r\n// В реальном проекте здесь будет интеграция с Telegram Bot API\r\n\r\nexport const sendToTelegram = async (formData) => {\r\n  try {\r\n    // Здесь будет реальная отправка в Telegram\r\n    // Пока что просто логируем данные\r\n    \r\n    const message = `\r\n🔔 Новая заявка с сайта!\r\n\r\n👤 Имя: ${formData.name}\r\n📞 Телефон: ${formData.phone}\r\n💬 Сообщение: ${formData.message || 'Не указано'}\r\n⏰ Время: ${new Date().toLocaleString('ru-RU')}\r\n    `;\r\n\r\n    console.log('Отправка в Telegram:', message);\r\n    \r\n    // В реальном проекте здесь будет fetch запрос к Telegram Bot API\r\n    // const response = await fetch('/api/send-telegram', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     chat_id: 'YOUR_CHAT_ID',\r\n    //     text: message,\r\n    //     parse_mode: 'HTML'\r\n    //   })\r\n    // });\r\n    \r\n    return { success: true, message: 'Заявка успешно отправлена!' };\r\n  } catch (error) {\r\n    console.error('Ошибка отправки в Telegram:', error);\r\n    return { success: false, message: 'Ошибка отправки заявки' };\r\n  }\r\n};\r\n\r\n// Функция для валидации формы\r\nexport const validateForm = (formData) => {\r\n  const errors = {};\r\n  \r\n  if (!formData.name.trim()) {\r\n    errors.name = 'Имя обязательно для заполнения';\r\n  }\r\n  \r\n  if (!formData.phone.trim()) {\r\n    errors.phone = 'Телефон обязателен для заполнения';\r\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\r\n    errors.phone = 'Введите корректный номер телефона';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Modal from '../components/Modal';\nimport DeliveryInfo from '../components/DeliveryInfo';\nimport '../styles/Product.css';\n\nconst categories = [\n  { id: 'grinders', name: 'Болгарки' },\n  { id: 'screwdrivers', name: 'Шуруповёрты' },\n  { id: 'hammers', name: 'Перфораторы' },\n  { id: 'drills', name: 'Дрели' },\n  { id: 'jigsaws', name: 'Лобзики' },\n  { id: 'levels', name: 'Лазерные уровни' },\n  { id: 'generators', name: 'Генераторы' },\n  { id: 'measuring', name: 'Измерители' }\n];\n\nconst Product = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [miniProducts, setMiniProducts] = useState([]);\n  const [siteSettings, setSiteSettings] = useState({\n    city: 'Алматы',\n    deliveryInfo: {\n      freeDelivery: 'Бесплатная доставка по городу',\n      freeDeliveryNote: 'Сегодня — БЕСПЛАТНО',\n      pickupAddress: 'ул. Толе би 216Б',\n      pickupInfo: 'Сегодня с 9:00 до 18:00 — больше 5',\n      deliveryNote: 'Срок доставки рассчитывается менеджером после оформления заказа'\n    }\n  });\n  \n  const [selectedCity, setSelectedCity] = useState(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    return savedCity || 'Алматы';\n  });\n  \n  const [selectedDelivery, setSelectedDelivery] = useState(null);\n  const [deliveryInfo, setDeliveryInfo] = useState(null);\n  const [isCityChanging, setIsCityChanging] = useState(false);\n  \n  // Состояния для вариаций товара\n  const [productWithVariations, setProductWithVariations] = useState(null);\n  const [selectedVariation, setSelectedVariation] = useState(null);\n  const [variationType, setVariationType] = useState('');\n  const [selectedParameters, setSelectedParameters] = useState({});\n  \n\n  \n  const [detectingCity, setDetectingCity] = useState(false);\n  \n  // Функция для автоматического определения города\n  const detectUserCity = () => {\n    if (navigator.geolocation) {\n      setDetectingCity(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Используем обратное геокодирование для определения города\n          fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&addressdetails=1`)\n            .then(response => response.json())\n            .then(data => {\n              if (data.address && data.address.city) {\n                const detectedCity = data.address.city;\n                // Проверяем, есть ли этот город в нашем списке\n                if (cities.includes(detectedCity)) {\n                  setSelectedCity(detectedCity);\n                  localStorage.setItem('selectedCity', detectedCity);\n                }\n              }\n              setDetectingCity(false);\n            })\n            .catch(error => {\n              console.log('Ошибка определения города:', error);\n              setDetectingCity(false);\n            });\n        },\n        (error) => {\n          console.log('Ошибка получения геолокации:', error);\n          setDetectingCity(false);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000 // 5 минут\n        }\n      );\n    }\n  };\n  \n  // Список городов Казахстана\n  const cities = [\n    'Алматы',\n    'Астана',\n    'Шымкент',\n    'Актобе',\n    'Караганда',\n    'Тараз',\n    'Павлодар',\n    'Семей',\n    'Усть-Каменогорск',\n    'Уральск',\n    'Кызылорда',\n    'Костанай',\n    'Петропавловск',\n    'Атырау',\n    'Актау',\n    'Темиртау',\n    'Туркестан',\n    'Кокшетау',\n    'Талдыкорган',\n    'Экибастуз',\n    'Рудный',\n    'Жанаозен',\n    'Жезказган',\n    'Балхаш',\n    'Кентау',\n    'Сатпаев',\n    'Капчагай',\n    'Риддер',\n    'Степногорск',\n    'Аральск',\n    'Аркалык',\n    'Житикара',\n    'Кандыагаш',\n    'Лисаковск',\n    'Шахтинск',\n    'Абай',\n    'Аягоз',\n    'Зайсан',\n    'Курчатов',\n    'Приозерск',\n    'Серебрянск',\n    'Текели',\n    'Уштобе',\n    'Чарск',\n    'Шемонаиха',\n    'Щучинск'\n  ];\n  \n  // Объединяем все изображения из разных полей\n  const getAllImages = () => {\n    const images = [];\n    const currentProduct = getCurrentProduct();\n    \n    // Добавляем основное изображение из поля image (если есть)\n    if (currentProduct?.image) {\n      images.push(currentProduct.image);\n    }\n    \n    // Добавляем изображения из поля images\n    if (Array.isArray(currentProduct?.images)) {\n      images.push(...currentProduct.images);\n    }\n    \n    // Добавляем изображения из поля images2\n    if (Array.isArray(currentProduct?.images2)) {\n      images.push(...currentProduct.images2);\n    }\n    \n    // Добавляем изображения из поля images3\n    if (Array.isArray(currentProduct?.images3)) {\n      images.push(...currentProduct.images3);\n    }\n    \n    // Если есть вариация с изображениями, добавляем их\n    if (selectedVariation?.images && Array.isArray(selectedVariation.images)) {\n      images.push(...selectedVariation.images);\n    }\n    \n    // Если нет изображений, добавляем placeholder\n    if (images.length === 0) {\n      images.push('/images/products/placeholder.png');\n    }\n    \n    return images;\n  };\n  \n  const navigate = useNavigate();\n\n  const API_URL = 'https://electro-a8bl.onrender.com/api/products';\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    // Сначала проверяем, есть ли у товара вариации\n    fetch(`${API_URL}/${id}/with-variations`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          // Если ошибка, загружаем обычный товар\n          return fetch(`${API_URL}/${id}`);\n        }\n        return Promise.resolve(data);\n      })\n      .then(data => {\n        if (data.error) {\n          setError(data.error);\n          setProduct(null);\n          setProductWithVariations(null);\n        } else if (data.isVariation || data.isMasterProduct) {\n          // Товар с вариациями\n          setProductWithVariations(data);\n          if (data.isVariation) {\n            setProduct(data.currentVariation.productId);\n            setSelectedVariation(data.currentVariation);\n            setVariationType(data.currentVariation.variationType);\n            \n            // Инициализируем выбранные параметры для вариации\n            if (data.currentVariation.variationOptions) {\n              setSelectedParameters(data.currentVariation.variationOptions);\n            }\n          } else {\n            setProduct(data.masterProduct);\n            setVariationType(data.masterProduct.variationTypes[0] || 'power');\n            // Выбираем первую вариацию по умолчанию\n            if (data.variations && data.variations.length > 0) {\n              const firstVariation = data.variations[0];\n              setSelectedVariation(firstVariation);\n              \n              // Инициализируем выбранные параметры\n              if (firstVariation.variationOptions) {\n                setSelectedParameters(firstVariation.variationOptions);\n              } else if (firstVariation.variationType && firstVariation.variationValue) {\n                setSelectedParameters({ [firstVariation.variationType]: firstVariation.variationValue });\n              }\n            }\n          }\n        } else {\n          // Обычный товар без вариаций\n          setProduct(data.product);\n          setProductWithVariations(null);\n        }\n        setLoading(false);\n      })\n      .catch(() => {\n        setError('Ошибка загрузки товара');\n        setLoading(false);\n      });\n  }, [id]);\n\n  useEffect(() => {\n    fetch(`${API_URL}?limit=4`)\n      .then(res => res.json())\n      .then(data => {\n        if (Array.isArray(data)) setMiniProducts(data);\n      });\n  }, []);\n\n  // Загружаем информацию сайта\n  useEffect(() => {\n    fetch('https://electro-a8bl.onrender.com/api/information')\n      .then(res => res.json())\n      .then(data => {\n        if (data.information) {\n          setSiteSettings(data.information);\n        }\n      })\n      .catch(error => {\n        console.log('Ошибка загрузки информации, используются значения по умолчанию:', error);\n      });\n  }, []);\n  \n  // Инициализируем выбранный город из localStorage и автоматически определяем город\n  useEffect(() => {\n    const savedCity = localStorage.getItem('selectedCity');\n    \n    // Если есть сохраненный город, используем его\n    if (savedCity) {\n      setSelectedCity(savedCity);\n    } else {\n      // Если нет сохраненного города, пытаемся определить автоматически\n      detectUserCity();\n    }\n  }, []);\n\n  if (loading) {\n    return <div style={{padding: 48, textAlign: 'center'}}>Загрузка...</div>;\n  }\n  if (error || !product) {\n    return (\n      <div className=\"product\">\n        <Header />\n        <main className=\"product-main\">\n          <div className=\"container\" style={{padding: '48px 0', textAlign: 'center'}}>\n            <h1>Товар не найден</h1>\n            <p>Проверьте правильность ссылки или вернитесь в <a href=\"/catalog\">каталог</a>.</p>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  // Найти категорию для хлебных крошек\n  const categoryObj = categories.find(cat => cat.id === getCurrentProduct().category);\n  const categoryName = categoryObj ? categoryObj.name : '';\n\n  // Преимущества — если есть в product, иначе дефолтные\n  const productAdvantages = getCurrentProduct().advantages || [\n    'Высокий крутящий момент и мощность',\n    'Долговечный литий-ионный аккумулятор',\n    'Компактный и лёгкий корпус для работы одной рукой'\n  ];\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n  const handleSubmitForm = (formData) => {\n    console.log('Заявка на товар:', { ...formData, product: getCurrentProduct().name });\n    alert('Спасибо! Ваша заявка отправлена. Мы свяжемся с вами в ближайшее время.');\n  };\n\n  const handleBuy = () => {\n    // Если есть выбранная вариация, используем её данные\n    const productToBuy = selectedVariation ? selectedVariation.productId : product;\n    navigate('/checkout', { state: { product: productToBuy } });\n  };\n\n  // Обработчик выбора вариации\n  const handleVariationSelect = (variation) => {\n    setSelectedVariation(variation);\n    setProduct(variation.productId);\n  };\n\n  // Обработчик выбора параметра\n  const handleParameterSelect = (parameter, value) => {\n    const newSelectedParams = { ...selectedParameters, [parameter]: value };\n    setSelectedParameters(newSelectedParams);\n    \n    // Находим вариацию по выбранным параметрам\n    const variation = getVariationByParameters(newSelectedParams);\n    if (variation) {\n      setSelectedVariation(variation);\n      setProduct(variation.productId);\n    }\n  };\n\n  // Получение доступных вариаций\n  const getAvailableVariations = () => {\n    if (!productWithVariations) return [];\n    \n    if (productWithVariations.isVariation) {\n      return productWithVariations.variations || [];\n    } else if (productWithVariations.isMasterProduct) {\n      return productWithVariations.variations || [];\n    }\n    \n    return [];\n  };\n\n  // Получение уникальных параметров вариаций\n  const getVariationParameters = () => {\n    const variations = getAvailableVariations();\n    if (variations.length === 0) return [];\n\n    // Проверяем, есть ли вариации с произвольными параметрами\n    const hasCustomOptions = variations.some(v => v.variationOptions && Object.keys(v.variationOptions).length > 0);\n    \n    if (hasCustomOptions) {\n      // Получаем все уникальные параметры из variationOptions\n      const allParams = new Set();\n      variations.forEach(v => {\n        if (v.variationOptions) {\n          Object.keys(v.variationOptions).forEach(param => allParams.add(param));\n        }\n      });\n      return Array.from(allParams);\n    } else {\n      // Старый способ - один параметр\n      return [variationType];\n    }\n  };\n\n  // Получение уникальных значений для параметра\n  const getParameterValues = (parameter) => {\n    const variations = getAvailableVariations();\n    const values = new Set();\n    \n    variations.forEach(v => {\n      if (v.variationOptions && v.variationOptions[parameter]) {\n        values.add(v.variationOptions[parameter]);\n      } else if (parameter === variationType && v.variationValue) {\n        values.add(v.variationValue);\n      }\n    });\n    \n    return Array.from(values);\n  };\n\n  // Получение вариации по выбранным параметрам\n  const getVariationByParameters = (selectedParams) => {\n    const variations = getAvailableVariations();\n    \n    return variations.find(v => {\n      if (v.variationOptions && Object.keys(v.variationOptions).length > 0) {\n        // Новый способ - проверяем все выбранные параметры\n        return Object.keys(selectedParams).every(param => \n          v.variationOptions[param] === selectedParams[param]\n        );\n      } else {\n        // Старый способ - проверяем только variationType\n        const paramValue = selectedParams[variationType];\n        return v.variationType === variationType && v.variationValue === paramValue;\n      }\n    });\n  };\n\n  // Получение текущего товара для отображения\n  const getCurrentProduct = () => {\n    if (selectedVariation) {\n      return selectedVariation.productId;\n    }\n    return product;\n  };\n\n  // Модалка фото\n  const handleImageClick = () => setShowImageModal(true);\n  const handleCloseImageModal = () => setShowImageModal(false);\n  const handlePrevImage = (e) => {\n    e.stopPropagation();\n    setActiveImage((prev) => (prev - 1 + getAllImages().length) % getAllImages().length);\n  };\n  const handleNextImage = (e) => {\n    e.stopPropagation();\n    setActiveImage((prev) => (prev + 1) % getAllImages().length);\n  };\n  \n  const handleCityChange = (e) => {\n    const newCity = e.target.value;\n    setIsCityChanging(true);\n    setSelectedCity(newCity);\n    localStorage.setItem('selectedCity', newCity);\n    // Сбрасываем выбранную доставку при смене города\n    setSelectedDelivery(null);\n    // Загружаем информацию о доставке для нового города\n    fetchDeliveryInfo(newCity);\n    \n    // Убираем анимацию через 500мс\n    setTimeout(() => {\n      setIsCityChanging(false);\n    }, 500);\n  };\n\n  const fetchDeliveryInfo = async (cityName) => {\n    try {\n      const response = await fetch(`https://electro-a8bl.onrender.com/api/pickup-points/delivery/${encodeURIComponent(cityName)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setDeliveryInfo(data);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки информации о доставке:', error);\n    }\n  };\n  \n\n\n  const shortDesc = getCurrentProduct()['Short description'] || 'краткое описание';\n\n  // Функция для получения оптимального размера изображения\n  const getOptimalImage = (product, preferredSize = 'medium') => {\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\n      return product.imageVariants[preferredSize];\n    }\n    if (product.imageVariants && product.imageVariants.webp) {\n      return product.imageVariants.webp;\n    }\n    return product.image || '/images/products/placeholder.png';\n  };\n\n  return (\n    <div className=\"product-page\">\n      <Header />\n      <main className=\"product-main\">\n        <div className=\"product-container\">\n          <nav className=\"breadcrumbs\" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\n            <a href=\"/\">Главная</a>\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <a href=\"/catalog\">Каталог</a>\n            {categoryName && (\n              <>\n                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n                <a href={`/catalog?category=${getCurrentProduct().category}`}>{categoryName}</a>\n              </>\n            )}\n            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\n            <span style={{color:'#1a2236', fontWeight:500}}>{getCurrentProduct().name}</span>\n          </nav>\n          <div className=\"product-flex\">\n            {/* Фото и миниатюры */}\n            <div className=\"product-gallery\">\n              <div className=\"product-gallery-inner\">\n                <div className=\"product-image-main\" onClick={handleImageClick} style={{cursor:'zoom-in'}}>\n                  <img \n                    src={getCurrentProduct().image || getAllImages()[activeImage]} \n                    alt={getCurrentProduct().name} \n                    loading=\"lazy\"\n                    width=\"400\"\n                    height=\"400\"\n                    style={{width: '100%', height: 'auto', maxWidth: '400px'}}\n                  />\n                </div>\n                {getAllImages().length > 1 && (\n                  <>\n                    <div style={{textAlign:'center', color:'#888', fontSize:'1.05rem', marginTop: 20, marginBottom: 8, border:'none'}}>\n                      Чтобы увеличить, нажмите на картинку\n                    </div>\n                    <div className=\"product-thumbs\">\n                      {getAllImages().map((img, idx) => (\n                        <img \n                          key={idx} \n                          src={img} \n                          alt={getCurrentProduct().name + idx} \n                          className={activeImage === idx ? \"active\" : \"\"} \n                          onClick={() => setActiveImage(idx)} \n                          loading=\"lazy\"\n                          width=\"80\"\n                          height=\"80\"\n                        />\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            {/* Инфо и цена справа */}\n            <div className=\"product-info-block\">\n              <>\n                <h1 className=\"product-title\" style={{fontWeight: 700, fontSize: '1.4rem', maxWidth: 320, marginBottom: 6, wordBreak: 'break-word', marginTop: 28, lineHeight: 1.2}}>{getCurrentProduct().name}</h1>\n                \n                {/* Селектор вариаций */}\n                {productWithVariations && getAvailableVariations().length > 0 && (\n                  <div className=\"product-variations\" style={{marginBottom: 15}}>\n                    {getVariationParameters().map((parameter) => (\n                      <div key={parameter} style={{marginBottom: 15}}>\n                        <div style={{fontSize: '0.9rem', color: '#666', marginBottom: 8, fontWeight: 500}}>\n                          {parameter}:\n                        </div>\n                        <div className=\"variations-list\" style={{display: 'flex', gap: 8, flexWrap: 'wrap'}}>\n                          {getParameterValues(parameter).map((value) => (\n                            <button\n                              key={value}\n                              onClick={() => handleParameterSelect(parameter, value)}\n                              className={`variation-option ${selectedParameters[parameter] === value ? 'selected' : ''}`}\n                              style={{\n                                padding: '8px 16px',\n                                border: selectedParameters[parameter] === value ? '2px solid #1976d2' : '1px solid #ddd',\n                                borderRadius: '6px',\n                                background: selectedParameters[parameter] === value ? '#e3f2fd' : '#fff',\n                                color: selectedParameters[parameter] === value ? '#1976d2' : '#333',\n                                cursor: 'pointer',\n                                fontSize: '14px',\n                                fontWeight: selectedParameters[parameter] === value ? '600' : '400',\n                                transition: 'all 0.2s ease'\n                              }}\n                            >\n                              {value}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n                \n                <div className=\"product-short-desc\" style={{fontSize: '1rem', color: '#222', marginBottom: 8, fontWeight: 500, marginTop: 0, lineHeight: 1.3}}>{shortDesc}</div>\n                <div className=\"product-subtitle\" style={{width: '100%', maxWidth: 'none'}}>{getCurrentProduct().subtitle}</div>\n                <div className=\"product-divider\"></div>\n                <div className=\"product-buy-row\">\n                  <div className=\"product-price-block\">\n                    <div className=\"product-price-label-value\">\n                      <div className=\"product-price-label\">Цена</div>\n                      <div className=\"product-price-value\">\n                        {Number(selectedVariation ? selectedVariation.price : product.price).toLocaleString('ru-RU')}\n                        <span className=\"product-currency\">₸</span>\n                      </div>\n                    </div>\n\n                    {(selectedVariation ? selectedVariation.article : product.article) && (\n                      <div style={{\n                        fontSize: '0.85rem', \n                        color: '#666', \n                        marginTop: 6, \n                        textAlign: 'left',\n                        wordBreak: 'break-word',\n                        width: '140px',\n                        minWidth: '140px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'flex-start'\n                      }}>\n                        <span style={{fontWeight: 500, color: '#495057'}}>Артикул</span>\n                        <span style={{marginTop: 2}}>{selectedVariation ? selectedVariation.article : product.article}</span>\n                      </div>\n                    )}\n                  </div>\n                  <span className=\"product-price-divider\"></span>\n                  <div className=\"product-buy-btns\">\n                    <button className=\"product-btn-ask\" onClick={handleOpenModal}>Задать вопрос</button>\n                    <div className=\"product-btns-divider\"></div>\n                    <button className=\"product-btn-buy\" onClick={handleBuy}>Купить</button>\n                  </div>\n                </div>\n                <div className=\"product-divider\"></div>\n                <div style={{\n                  marginTop: 14, \n                  background: '#f5f7fa', \n                  borderRadius: 10, \n                  padding: '10px 12px 8px 12px', \n                  fontSize: '0.98rem', \n                  color: '#222', \n                  boxShadow: 'none', \n                  maxWidth: 320,\n                  transition: 'all 0.3s ease',\n                  transform: isCityChanging ? 'scale(0.98)' : 'scale(1)',\n                  opacity: isCityChanging ? 0.8 : 1\n                }}>\n                  <div style={{fontWeight: 600, color: '#1e88e5', marginBottom: 8, fontSize: '1.01rem', display: 'flex', alignItems: 'center', gap: '8px'}}>\n                    <span>Ваш город:</span>\n                    {detectingCity ? (\n                      <span style={{color: '#666', fontSize: '0.9rem'}}>📍 Определяем...</span>\n                    ) : (\n                      <select \n                        value={selectedCity} \n                        onChange={handleCityChange}\n                        className=\"city-select\"\n                      >\n                        {cities.map(city => (\n                          <option key={city} value={city}>{city}</option>\n                        ))}\n                      </select>\n                    )}\n                  </div>\n                  \n                  {/* Заменяем статичный блок на динамический компонент */}\n                  <DeliveryInfo \n                    city={selectedCity} \n                    onDeliverySelect={setSelectedDelivery}\n                    compact={true}\n                    selectedDelivery={selectedDelivery}\n                  />\n                  \n                  <div style={{background:'#f0f1f4', borderRadius:7, padding:'7px 10px', marginTop:8, color:'#222', fontSize:'0.93rem', display:'flex', alignItems:'center', gap:6}}>\n                    <span style={{fontSize:15, color:'#888'}}>ⓘ</span>\n                    <span>\n                      {selectedCity === 'Алматы' \n                        ? 'Срок доставки рассчитывается менеджером после оформления заказа'\n                        : selectedDelivery \n                          ? `Доставка в ${selectedCity} через ${selectedDelivery.name.toLowerCase()}. ${selectedDelivery.type === 'pickup' ? 'Самовывоз из наших пунктов' : selectedDelivery.type === 'indriver' ? 'В течение дня' : selectedDelivery.type === 'yandex' ? '1-2 дня' : selectedDelivery.type === 'kazpost' ? '3-5 дней' : selectedDelivery.type === 'cdek' ? '1-2 дня' : selectedDelivery.type === 'air' ? '1-3 дня' : '1-3 дня'}.`\n                          : `Доставка в ${selectedCity} осуществляется через курьерские службы. Срок доставки 1-3 дня.`\n                      }\n                    </span>\n                  </div>\n                </div>\n              </>\n            </div>\n          </div>\n          {/* Вкладки снизу */}\n          <div className=\"product-tabs-wrap\">\n                            <Tabs product={getCurrentProduct()} selectedVariation={selectedVariation} />\n                </div>\n            </div>\n      </main>\n      {/* Мини-каталог популярных товаров */}\n      <section className=\"mini-catalog-section\">\n        <div className=\"mini-catalog-header\">\n          <h2>Популярные товары</h2>\n        </div>\n        <div className=\"mini-catalog-slider-wrapper\">\n          <div className=\"mini-catalog-slider\">\n            {/* Первый набор карточек */}\n            {miniProducts.map(product => (\n              <div\n                key={`first-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? product.price + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Дублированный набор карточек для бесконечной прокрутки */}\n            {miniProducts.map(product => (\n              <div\n                key={`second-${product._id}`}\n                className=\"product-card catalog-mini-product-card\"\n                onClick={() => window.location.href = `/product/${product._id}`}\n                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}\n              >\n                <div className=\"product-image\" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                  <picture style={{width: '100%', height: '100%'}}>\n                    <source \n                      srcSet={getOptimalImage(product, 'thumb')} \n                      type=\"image/webp\"\n                    />\n                    <img \n                      src={getOptimalImage(product, 'thumb')} \n                      alt={product.name} \n                      style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \n                      loading=\"lazy\"\n                      width=\"200\"\n                      height=\"120\"\n                    />\n                  </picture>\n                </div>\n                <div className=\"catalog-mini-product-divider\" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>\n                <div className=\"product-info\" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>\n                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>\n                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>\n                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>Цена</span>\n                  </div>\n                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>\n                    <span className=\"product-price\" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? product.price + ' ₸' : ''}</span>\n                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n      <Footer />\n    <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} />\n    {/* Модальное окно для увеличенного фото */}\n    {showImageModal && (\n      <div className=\"image-modal-overlay\" onClick={handleCloseImageModal} style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'rgba(0,0,0,0.55)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>\n        <div className=\"image-modal-content\" style={{background:'#fff',padding:0,borderRadius:'8px',boxShadow:'0 8px 32px rgba(0,0,0,0.18)',position:'relative',maxWidth:'90vw',maxHeight:'90vh',display:'flex',flexDirection:'column',alignItems:'center'}} onClick={e=>e.stopPropagation()}>\n                          <img src={getAllImages()[activeImage]} alt={getCurrentProduct().name} style={{maxWidth:'80vw',maxHeight:'80vh',objectFit:'contain',background:'#fff'}} width=\"800\" height=\"600\" />\n                {getAllImages().length > 1 && (\n            <>\n              <button \n                onClick={handlePrevImage} \n                style={{\n                  position: 'absolute',\n                  left: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ‹\n              </button>\n              <button \n                onClick={handleNextImage} \n                style={{\n                  position: 'absolute',\n                  right: -25,\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  border: 'none',\n                  borderRadius: '50%',\n                  width: 50,\n                  height: 50,\n                  fontSize: 24,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                  zIndex: 10,\n                  color: '#222'\n                }}\n              >\n                ›\n              </button>\n              <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                <span style={{color:'#666', fontSize:'14px'}}>{activeImage + 1} из {getAllImages().length}</span>\n              </div>\n            </>\n          )}\n          <button onClick={handleCloseImageModal} style={{position:'absolute',top:8,right:12,fontSize:32,background:'none',border:'none',color:'#222',cursor:'pointer',lineHeight:1}}>&times;</button>\n        </div>\n      </div>\n    )}\n    </div>\n  );\n};\n\nfunction Tabs({product, selectedVariation}) {\n  const [tab,setTab]=React.useState('desc');\n  \n  // Функция для парсинга характеристик из строки\n  const parseCharacteristics = (characteristicsStr) => {\n    if (!characteristicsStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(characteristicsStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам\n      return characteristicsStr.split('\\n').filter(line => line.trim()).map(line => {\n        const [name, value] = line.split(':').map(s => s.trim());\n        return { name, value };\n      });\n    }\n  };\n  \n  // Функция для парсинга комплектации из строки\n  const parseEquipment = (equipmentStr) => {\n    if (!equipmentStr) return [];\n    \n    try {\n      // Пытаемся распарсить как JSON\n      return JSON.parse(equipmentStr);\n    } catch {\n      // Если не JSON, разбиваем по строкам или запятым\n      return equipmentStr.split(/[\\n,]/).filter(item => item.trim()).map(item => item.trim());\n    }\n  };\n  \n  // Если есть выбранная вариация, используем её характеристики и комплектацию\n  const characteristics = parseCharacteristics(\n    selectedVariation && selectedVariation.characteristics ? selectedVariation.characteristics : product.characteristics\n  );\n  const equipment = parseEquipment(\n    selectedVariation && selectedVariation.equipment ? selectedVariation.equipment : product.equipment\n  );\n  return (\n    <div className=\"product-tabs\">\n      <div className=\"product-tabs-header\">\n        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>Описание</button>\n        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>Характеристики</button>\n        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>Комплектация</button>\n      </div>\n      <div className=\"product-tabs-content\">\n        {tab==='desc' && (\n          <div className=\"product-desc-kaspi-block\">\n            {product.description ? (\n              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\\n/g, '<br/>') }} />\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Описание товара отсутствует</div>\n            )}\n          </div>\n        )}\n        {tab==='specs' && (\n          <div className=\"product-specs-kaspi-block\">\n            <h2 className=\"product-specs-title\">Характеристики {product.name}</h2>\n            {characteristics.length > 0 ? (\n              <div className=\"product-specs-group\">\n                <div className=\"product-specs-flex-table\">\n                  {characteristics.map((spec, i) => (\n                    <div className={\"product-specs-flex-row\" + (!spec.value ? \" no-value\" : \"\")} key={i}>\n                      <span className=\"product-specs-flex-name\">{spec.name}</span>\n                      <span className=\"product-specs-flex-dots\"></span>\n                      {spec.value && <span className=\"product-specs-flex-value\">{spec.value}</span>}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>Характеристики товара отсутствуют</div>\n            )}\n          </div>\n        )}\n        {tab==='equip' && (\n          <div className=\"product-desc-kaspi-block\">\n            {equipment.length > 0 ? (\n              <ul style={{margin: 0, paddingLeft: 20}}>\n                {equipment.map((item, idx) => (\n                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>\n                ))}\n              </ul>\n            ) : (\n              <div style={{color: '#888', fontStyle: 'italic'}}>Информация о комплектации отсутствует</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Product; "],"names":["_ref","isOpen","onClose","onSubmit","formData","setFormData","useState","name","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","value","target","_jsx","className","onClick","children","_jsxs","stopPropagation","async","preventDefault","validation","trim","test","isValid","Object","keys","length","validateForm","result","Date","toLocaleString","console","log","success","error","sendToTelegram","alert","htmlFor","type","id","onChange","placeholder","rows","disabled","categories","Tabs","product","selectedVariation","tab","setTab","React","characteristics","characteristicsStr","JSON","parse","split","filter","line","map","s","parseCharacteristics","equipment","equipmentStr","item","parseEquipment","description","dangerouslySetInnerHTML","__html","replace","style","color","fontStyle","spec","i","padding","margin","paddingLeft","idx","marginBottom","lineHeight","Product","useParams","setProduct","loading","setLoading","setError","isModalOpen","setIsModalOpen","activeImage","setActiveImage","showImageModal","setShowImageModal","miniProducts","setMiniProducts","siteSettings","setSiteSettings","city","deliveryInfo","freeDelivery","freeDeliveryNote","pickupAddress","pickupInfo","deliveryNote","selectedCity","setSelectedCity","localStorage","getItem","selectedDelivery","setSelectedDelivery","setDeliveryInfo","isCityChanging","setIsCityChanging","productWithVariations","setProductWithVariations","setSelectedVariation","variationType","setVariationType","selectedParameters","setSelectedParameters","detectingCity","setDetectingCity","cities","getAllImages","images","currentProduct","getCurrentProduct","image","push","Array","isArray","images2","images3","navigate","useNavigate","API_URL","useEffect","fetch","then","res","json","data","Promise","resolve","isVariation","isMasterProduct","currentVariation","productId","variationOptions","masterProduct","variationTypes","variations","firstVariation","variationValue","catch","information","savedCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","address","detectedCity","includes","setItem","enableHighAccuracy","timeout","maximumAge","textAlign","Header","href","Footer","categoryObj","find","cat","category","categoryName","getAvailableVariations","advantages","getParameterValues","parameter","values","Set","forEach","v","add","from","getVariationByParameters","selectedParams","every","param","paramValue","handleCloseImageModal","fetchDeliveryInfo","encodeURIComponent","cityName","ok","shortDesc","getOptimalImage","preferredSize","arguments","undefined","imageVariants","webp","paddingBottom","display","alignItems","flexWrap","gap","fontSize","_Fragment","fontWeight","handleImageClick","cursor","src","alt","width","height","maxWidth","marginTop","border","img","wordBreak","getVariationParameters","some","allParams","handleParameterSelect","newSelectedParams","variation","borderRadius","background","transition","subtitle","Number","price","article","minWidth","flexDirection","handleOpenModal","handleBuy","productToBuy","state","boxShadow","transform","opacity","newCity","setTimeout","DeliveryInfo","onDeliverySelect","compact","toLowerCase","window","location","_id","minHeight","fontFamily","justifyContent","srcSet","objectFit","borderTop","alignSelf","textDecoration","letterSpacing","verticalAlign","Modal","handleCloseModal","top","left","zIndex","maxHeight","prev","right"],"sourceRoot":""}