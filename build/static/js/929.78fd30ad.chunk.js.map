{"version":3,"file":"static/js/929.78fd30ad.chunk.js","mappings":"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","sources":["admin/ProductVariations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = 'https://electro-a8bl.onrender.com/api';\r\nconst PRODUCTS_URL = `${API_URL}/products`;\r\nconst GROUPS_URL = `${API_URL}/product-groups`;\r\n\r\nfunction ProductVariations() {\r\n  const [products, setProducts] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingGroup, setEditingGroup] = useState(null);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    baseProductId: '',\r\n    parameters: [],\r\n    variants: []\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(''); // Очищаем предыдущие ошибки\r\n      \r\n      const [productsRes, groupsRes] = await Promise.all([\r\n        fetch(PRODUCTS_URL),\r\n        fetch(GROUPS_URL)\r\n      ]);\r\n\r\n      if (!productsRes.ok) {\r\n        const errorText = await productsRes.text();\r\n        throw new Error(`Ошибка загрузки товаров: ${productsRes.status} - ${errorText}`);\r\n      }\r\n\r\n      if (!groupsRes.ok) {\r\n        const errorText = await groupsRes.text();\r\n        throw new Error(`Ошибка загрузки групп: ${groupsRes.status} - ${errorText}`);\r\n      }\r\n\r\n      const [productsData, groupsData] = await Promise.all([\r\n        productsRes.json(),\r\n        groupsRes.json()\r\n      ]);\r\n\r\n      setProducts(productsData);\r\n      setGroups(groupsData);\r\n    } catch (err) {\r\n      console.error('Ошибка загрузки данных:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    setEditingGroup(null);\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      baseProductId: '',\r\n      parameters: [],\r\n      variants: []\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleEditGroup = (group) => {\r\n    setEditingGroup(group);\r\n    setFormData({\r\n      name: group.name,\r\n      description: group.description || '',\r\n      baseProductId: group.baseProductId?._id || '',\r\n      parameters: group.parameters || [],\r\n      variants: group.variants || []\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDeleteGroup = async (groupId) => {\r\n    if (!window.confirm('Вы уверены, что хотите удалить эту группу вариаций?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${GROUPS_URL}/${groupId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка удаления группы');\r\n      }\r\n\r\n      await fetchData();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const addParameter = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: [...prev.parameters, {\r\n        name: '',\r\n        type: 'select',\r\n        values: [''],\r\n        required: false\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeParameter = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateParameter = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === index ? { ...param, [field]: value } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addParameterValue = (paramIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { ...param, values: [...param.values, ''] } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeParameterValue = (paramIndex, valueIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.filter((_, vi) => vi !== valueIndex) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateParameterValue = (paramIndex, valueIndex, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.map((v, vi) => vi === valueIndex ? value : v) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addVariant = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: [...prev.variants, {\r\n        productId: '',\r\n        parameters: new Map(),\r\n        isActive: true\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeVariant = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateVariant = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === index ? { ...variant, [field]: value } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateVariantParameter = (variantIndex, paramName, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === variantIndex ? { \r\n          ...variant, \r\n          parameters: new Map(variant.parameters).set(paramName, value) \r\n        } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(''); // Очищаем предыдущие ошибки\r\n      \r\n      // Преобразуем Map в обычный объект для отправки\r\n      const submitData = {\r\n        ...formData,\r\n        variants: formData.variants.map(variant => ({\r\n          ...variant,\r\n          parameters: Object.fromEntries(variant.parameters)\r\n        }))\r\n      };\r\n\r\n      const response = await fetch(\r\n        editingGroup ? `${GROUPS_URL}/${editingGroup._id}` : GROUPS_URL,\r\n        {\r\n          method: editingGroup ? 'PUT' : 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(submitData)\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Ошибка сохранения группы вариаций: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      await fetchData();\r\n      setShowForm(false);\r\n      setEditingGroup(null);\r\n    } catch (err) {\r\n      console.error('Ошибка сохранения:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading && !showForm) {\r\n    return (\r\n      <div className=\"variations-container\">\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Загрузка данных...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"variations-container\">\r\n      {/* Заголовок */}\r\n      <div className=\"variations-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"header-title\">\r\n            <span className=\"icon\">🔄</span>\r\n            Управление вариациями товаров\r\n          </h1>\r\n          <p className=\"header-subtitle\">\r\n            Создавайте группы товаров с различными параметрами и ценами\r\n          </p>\r\n        </div>\r\n        <button onClick={handleCreateGroup} className=\"create-btn\">\r\n          <span className=\"btn-icon\">+</span>\r\n          Создать группу\r\n        </button>\r\n      </div>\r\n\r\n      {/* Ошибки */}\r\n      {error && (\r\n        <div className=\"error-alert\">\r\n          <span className=\"error-icon\">⚠️</span>\r\n          <span className=\"error-text\">{error}</span>\r\n          <button onClick={() => setError('')} className=\"error-close\">×</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Список групп */}\r\n      <div className=\"groups-section\">\r\n        <h2 className=\"section-title\">Существующие группы вариаций</h2>\r\n        \r\n        {groups.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">📦</div>\r\n            <h3>Группы вариаций не найдены</h3>\r\n            <p>Создайте первую группу вариаций для ваших товаров</p>\r\n            <button onClick={handleCreateGroup} className=\"empty-btn\">\r\n              Создать группу\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"groups-grid\">\r\n            {groups.map(group => (\r\n              <div key={group._id} className=\"group-card\">\r\n                <div className=\"card-header\">\r\n                  <h3 className=\"card-title\">{group.name}</h3>\r\n                  <div className=\"card-actions\">\r\n                    <button \r\n                      onClick={() => handleEditGroup(group)} \r\n                      className=\"action-btn edit-btn\"\r\n                      title=\"Редактировать\"\r\n                    >\r\n                      ✏️\r\n                    </button>\r\n                    <button \r\n                      onClick={() => handleDeleteGroup(group._id)} \r\n                      className=\"action-btn delete-btn\"\r\n                      title=\"Удалить\"\r\n                    >\r\n                      🗑️\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {group.description && (\r\n                  <p className=\"card-description\">{group.description}</p>\r\n                )}\r\n                \r\n                <div className=\"card-content\">\r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Базовый товар:</span>\r\n                    <span className=\"info-value\">{group.baseProductId?.name || 'Не указан'}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Параметры:</span>\r\n                    <div className=\"parameters-list\">\r\n                      {group.parameters.map((param, index) => (\r\n                        <span key={index} className=\"parameter-tag\">\r\n                          {param.name} ({param.type})\r\n                          {param.required && <span className=\"required-mark\">*</span>}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Вариации:</span>\r\n                    <span className=\"variants-count\">{group.variants.length} шт.</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Модальное окно формы */}\r\n      {showForm && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowForm(false)}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h2 className=\"modal-title\">\r\n                {editingGroup ? 'Редактировать группу' : 'Создать группу вариаций'}\r\n              </h2>\r\n              <button onClick={() => setShowForm(false)} className=\"modal-close\">\r\n                <span>×</span>\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"variations-form\">\r\n              {/* Основная информация */}\r\n              <div className=\"form-section\">\r\n                <h3 className=\"section-title\">Основная информация</h3>\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">\r\n                      Название группы <span className=\"required\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.name}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                      className=\"form-input\"\r\n                      placeholder=\"Например: Болгарки Tanker TK12501\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Описание</label>\r\n                    <textarea\r\n                      value={formData.description}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                      className=\"form-textarea\"\r\n                      placeholder=\"Краткое описание группы\"\r\n                      rows=\"3\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">\r\n                      Базовый товар <span className=\"required\">*</span>\r\n                    </label>\r\n                    <select\r\n                      value={formData.baseProductId}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, baseProductId: e.target.value }))}\r\n                      className=\"form-select\"\r\n                      required\r\n                    >\r\n                      <option value=\"\">Выберите товар</option>\r\n                      {products.map(product => (\r\n                        <option key={product._id} value={product._id}>\r\n                          {product.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Параметры */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3 className=\"section-title\">Параметры вариаций</h3>\r\n                  <button type=\"button\" onClick={addParameter} className=\"add-btn\">\r\n                    <span>+</span> Добавить параметр\r\n                  </button>\r\n                </div>\r\n                \r\n                {formData.parameters.map((param, index) => (\r\n                  <div key={index} className=\"parameter-card\">\r\n                    <div className=\"parameter-header\">\r\n                      <div className=\"parameter-inputs\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Название параметра (например: Вольты)\"\r\n                          value={param.name}\r\n                          onChange={(e) => updateParameter(index, 'name', e.target.value)}\r\n                          className=\"form-input\"\r\n                          required\r\n                        />\r\n                        <select\r\n                          value={param.type}\r\n                          onChange={(e) => updateParameter(index, 'type', e.target.value)}\r\n                          className=\"form-select\"\r\n                        >\r\n                          <option value=\"select\">Выпадающий список</option>\r\n                          <option value=\"radio\">Радио кнопки</option>\r\n                          <option value=\"checkbox\">Чекбокс</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"parameter-options\">\r\n                        <label className=\"checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={param.required}\r\n                            onChange={(e) => updateParameter(index, 'required', e.target.checked)}\r\n                          />\r\n                          <span>Обязательный</span>\r\n                        </label>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeParameter(index)}\r\n                          className=\"remove-btn\"\r\n                          title=\"Удалить параметр\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"parameter-values\">\r\n                      <label className=\"form-label\">Возможные значения:</label>\r\n                      <div className=\"values-list\">\r\n                        {param.values.map((value, valueIndex) => (\r\n                          <div key={valueIndex} className=\"value-item\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value={value}\r\n                              onChange={(e) => updateParameterValue(index, valueIndex, e.target.value)}\r\n                              className=\"form-input\"\r\n                              placeholder=\"Значение\"\r\n                            />\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeParameterValue(index, valueIndex)}\r\n                              className=\"remove-btn small\"\r\n                              title=\"Удалить значение\"\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => addParameterValue(index)}\r\n                          className=\"add-value-btn\"\r\n                        >\r\n                          + Добавить значение\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Вариации */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3 className=\"section-title\">Вариации товаров</h3>\r\n                  <button type=\"button\" onClick={addVariant} className=\"add-btn\">\r\n                    <span>+</span> Добавить вариацию\r\n                  </button>\r\n                </div>\r\n                \r\n                {formData.variants.map((variant, index) => (\r\n                  <div key={index} className=\"variant-card\">\r\n                    <div className=\"variant-header\">\r\n                                             <div className=\"variant-inputs\">\r\n                         <select\r\n                           value={variant.productId}\r\n                           onChange={(e) => updateVariant(index, 'productId', e.target.value)}\r\n                           className=\"form-select\"\r\n                           required\r\n                         >\r\n                           <option value=\"\">Выберите товар</option>\r\n                           {products.map(product => (\r\n                             <option key={product._id} value={product._id}>\r\n                               {product.name} - {product.price} ₸\r\n                             </option>\r\n                           ))}\r\n                         </select>\r\n                       </div>\r\n                      <div className=\"variant-options\">\r\n                        <label className=\"checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={variant.isActive}\r\n                            onChange={(e) => updateVariant(index, 'isActive', e.target.checked)}\r\n                          />\r\n                          <span>Активен</span>\r\n                        </label>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeVariant(index)}\r\n                          className=\"remove-btn\"\r\n                          title=\"Удалить вариацию\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"variant-parameters\">\r\n                      {formData.parameters.map((param, paramIndex) => (\r\n                        <div key={paramIndex} className=\"variant-param\">\r\n                          <label className=\"form-label\">{param.name}:</label>\r\n                          {param.type === 'select' && (\r\n                            <select\r\n                              value={variant.parameters.get(param.name) || ''}\r\n                              onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                              className=\"form-select\"\r\n                              required={param.required}\r\n                            >\r\n                              <option value=\"\">Выберите</option>\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <option key={valueIndex} value={value}>\r\n                                  {value}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          )}\r\n                          {param.type === 'radio' && (\r\n                            <div className=\"radio-group\">\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <label key={valueIndex} className=\"radio-label\">\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    name={`${index}-${param.name}`}\r\n                                    value={value}\r\n                                    checked={variant.parameters.get(param.name) === value}\r\n                                    onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                                    required={param.required}\r\n                                  />\r\n                                  <span className=\"radio-text\">{value}</span>\r\n                                </label>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                          {param.type === 'checkbox' && (\r\n                            <label className=\"checkbox-label\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={variant.parameters.get(param.name) === 'true'}\r\n                                onChange={(e) => updateVariantParameter(index, param.name, e.target.checked ? 'true' : 'false')}\r\n                              />\r\n                              <span>{param.name}</span>\r\n                            </label>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Кнопки действий */}\r\n              <div className=\"form-actions\">\r\n                <button type=\"button\" onClick={() => setShowForm(false)} className=\"cancel-btn\">\r\n                  Отмена\r\n                </button>\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n                  {loading ? (\r\n                    <>\r\n                      <span className=\"spinner-small\"></span>\r\n                      Сохранение...\r\n                    </>\r\n                  ) : (\r\n                    editingGroup ? 'Обновить группу' : 'Создать группу'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style jsx>{`\r\n        .variations-container {\r\n          min-height: 100vh;\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          padding: 20px;\r\n        }\r\n\r\n        .variations-header {\r\n          background: white;\r\n          border-radius: 16px;\r\n          padding: 32px;\r\n          margin-bottom: 24px;\r\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .header-content {\r\n          flex: 1;\r\n        }\r\n\r\n        .header-title {\r\n          font-size: 28px;\r\n          font-weight: 700;\r\n          color: #2d3748;\r\n          margin: 0 0 8px 0;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n        }\r\n\r\n        .icon {\r\n          font-size: 32px;\r\n        }\r\n\r\n        .header-subtitle {\r\n          color: #718096;\r\n          font-size: 16px;\r\n          margin: 0;\r\n        }\r\n\r\n        .create-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 12px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: all 0.3s ease;\r\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\r\n        }\r\n\r\n        .create-btn:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);\r\n        }\r\n\r\n        .btn-icon {\r\n          font-size: 20px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .error-alert {\r\n          background: #fed7d7;\r\n          border: 1px solid #feb2b2;\r\n          border-radius: 12px;\r\n          padding: 16px;\r\n          margin-bottom: 24px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n          color: #c53030;\r\n        }\r\n\r\n        .error-icon {\r\n          font-size: 20px;\r\n        }\r\n\r\n        .error-text {\r\n          flex: 1;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .error-close {\r\n          background: none;\r\n          border: none;\r\n          font-size: 20px;\r\n          cursor: pointer;\r\n          color: #c53030;\r\n          padding: 0;\r\n          width: 24px;\r\n          height: 24px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .groups-section {\r\n          background: white;\r\n          border-radius: 16px;\r\n          padding: 32px;\r\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .section-title {\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0 0 24px 0;\r\n        }\r\n\r\n        .empty-state {\r\n          text-align: center;\r\n          padding: 60px 20px;\r\n          color: #718096;\r\n        }\r\n\r\n        .empty-icon {\r\n          font-size: 64px;\r\n          margin-bottom: 16px;\r\n          display: block;\r\n        }\r\n\r\n        .empty-state h3 {\r\n          font-size: 20px;\r\n          font-weight: 600;\r\n          margin: 0 0 8px 0;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .empty-state p {\r\n          margin: 0 0 24px 0;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .empty-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 12px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .groups-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n          gap: 24px;\r\n        }\r\n\r\n        .group-card {\r\n          background: #f7fafc;\r\n          border: 1px solid #e2e8f0;\r\n          border-radius: 12px;\r\n          padding: 24px;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .group-card:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .card-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .card-title {\r\n          font-size: 18px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0;\r\n          flex: 1;\r\n        }\r\n\r\n        .card-actions {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .action-btn {\r\n          background: none;\r\n          border: none;\r\n          font-size: 16px;\r\n          cursor: pointer;\r\n          padding: 8px;\r\n          border-radius: 8px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .edit-btn:hover {\r\n          background: #ebf8ff;\r\n        }\r\n\r\n        .delete-btn:hover {\r\n          background: #fed7d7;\r\n        }\r\n\r\n        .card-description {\r\n          color: #718096;\r\n          font-size: 14px;\r\n          margin: 0 0 16px 0;\r\n          line-height: 1.5;\r\n        }\r\n\r\n        .card-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 12px;\r\n        }\r\n\r\n        .info-item {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 4px;\r\n        }\r\n\r\n        .info-label {\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          color: #718096;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.5px;\r\n        }\r\n\r\n        .info-value {\r\n          font-size: 14px;\r\n          color: #2d3748;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .parameters-list {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 6px;\r\n        }\r\n\r\n        .parameter-tag {\r\n          background: #e6fffa;\r\n          color: #234e52;\r\n          padding: 4px 8px;\r\n          border-radius: 6px;\r\n          font-size: 12px;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .required-mark {\r\n          color: #e53e3e;\r\n          margin-left: 2px;\r\n        }\r\n\r\n        .variants-count {\r\n          font-size: 14px;\r\n          color: #2d3748;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 1000;\r\n          padding: 20px;\r\n        }\r\n\r\n        .modal-content {\r\n          background: white;\r\n          border-radius: 16px;\r\n          max-width: 900px;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n          width: 100%;\r\n          box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n        }\r\n\r\n        .modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          padding: 24px 32px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .modal-title {\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0;\r\n        }\r\n\r\n        .modal-close {\r\n          background: none;\r\n          border: none;\r\n          font-size: 24px;\r\n          cursor: pointer;\r\n          color: #718096;\r\n          padding: 8px;\r\n          border-radius: 8px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .modal-close:hover {\r\n          background: #f7fafc;\r\n          color: #2d3748;\r\n        }\r\n\r\n        .variations-form {\r\n          padding: 32px;\r\n        }\r\n\r\n        .form-section {\r\n          margin-bottom: 32px;\r\n        }\r\n\r\n        .section-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .add-btn {\r\n          background: #48bb78;\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .add-btn:hover {\r\n          background: #38a169;\r\n        }\r\n\r\n        .form-grid {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr;\r\n          gap: 20px;\r\n        }\r\n\r\n        .form-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .form-label {\r\n          font-size: 14px;\r\n          font-weight: 600;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .required {\r\n          color: #e53e3e;\r\n        }\r\n\r\n        .form-input,\r\n        .form-select,\r\n        .form-textarea {\r\n          padding: 12px 16px;\r\n          border: 2px solid #e2e8f0;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          transition: all 0.2s ease;\r\n          background: white;\r\n        }\r\n\r\n        .form-input:focus,\r\n        .form-select:focus,\r\n        .form-textarea:focus {\r\n          outline: none;\r\n          border-color: #667eea;\r\n          box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n        }\r\n\r\n        .form-textarea {\r\n          resize: vertical;\r\n          min-height: 80px;\r\n        }\r\n\r\n        .parameter-card,\r\n        .variant-card {\r\n          background: #f7fafc;\r\n          border: 1px solid #e2e8f0;\r\n          border-radius: 12px;\r\n          padding: 20px;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .parameter-header,\r\n        .variant-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n          margin-bottom: 16px;\r\n          gap: 16px;\r\n        }\r\n\r\n        .parameter-inputs,\r\n        .variant-inputs {\r\n          display: flex;\r\n          gap: 12px;\r\n          flex: 1;\r\n        }\r\n\r\n        .parameter-inputs .form-input {\r\n          flex: 2;\r\n        }\r\n\r\n        .parameter-inputs .form-select {\r\n          flex: 1;\r\n        }\r\n\r\n        .variant-inputs .form-select {\r\n          flex: 2;\r\n        }\r\n\r\n        .variant-inputs .form-input {\r\n          flex: 1;\r\n        }\r\n\r\n        .parameter-options,\r\n        .variant-options {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n        }\r\n\r\n        .checkbox-label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          font-size: 14px;\r\n          color: #4a5568;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .checkbox-label input[type=\"checkbox\"] {\r\n          width: 16px;\r\n          height: 16px;\r\n          accent-color: #667eea;\r\n        }\r\n\r\n        .remove-btn {\r\n          background: #fed7d7;\r\n          color: #c53030;\r\n          border: none;\r\n          padding: 8px;\r\n          border-radius: 6px;\r\n          cursor: pointer;\r\n          font-size: 14px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .remove-btn:hover {\r\n          background: #feb2b2;\r\n        }\r\n\r\n        .remove-btn.small {\r\n          padding: 4px 8px;\r\n          font-size: 12px;\r\n        }\r\n\r\n        .parameter-values {\r\n          margin-top: 16px;\r\n        }\r\n\r\n        .values-list {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n          margin-top: 8px;\r\n        }\r\n\r\n        .value-item {\r\n          display: flex;\r\n          gap: 8px;\r\n          align-items: center;\r\n        }\r\n\r\n        .value-item .form-input {\r\n          flex: 1;\r\n        }\r\n\r\n        .add-value-btn {\r\n          background: #ebf8ff;\r\n          color: #2b6cb0;\r\n          border: 1px dashed #90cdf4;\r\n          padding: 8px 16px;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n          text-align: center;\r\n        }\r\n\r\n        .add-value-btn:hover {\r\n          background: #bee3f8;\r\n          border-color: #63b3ed;\r\n        }\r\n\r\n        .variant-parameters {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n          gap: 16px;\r\n          margin-top: 16px;\r\n        }\r\n\r\n        .variant-param {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .radio-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .radio-label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .radio-label input[type=\"radio\"] {\r\n          accent-color: #667eea;\r\n        }\r\n\r\n        .radio-text {\r\n          font-size: 14px;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .form-actions {\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          gap: 16px;\r\n          margin-top: 32px;\r\n          padding-top: 24px;\r\n          border-top: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .cancel-btn {\r\n          background: #e2e8f0;\r\n          color: #4a5568;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 8px;\r\n          font-size: 16px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .cancel-btn:hover {\r\n          background: #cbd5e0;\r\n        }\r\n\r\n        .submit-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 8px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .submit-btn:hover:not(:disabled) {\r\n          transform: translateY(-1px);\r\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\r\n        }\r\n\r\n        .submit-btn:disabled {\r\n          opacity: 0.6;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        .loading-spinner {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n          height: 200px;\r\n          color: white;\r\n        }\r\n\r\n        .spinner {\r\n          width: 40px;\r\n          height: 40px;\r\n          border: 4px solid rgba(255, 255, 255, 0.3);\r\n          border-top: 4px solid white;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .spinner-small {\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid rgba(255, 255, 255, 0.3);\r\n          border-top: 2px solid white;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n        }\r\n\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .variations-container {\r\n            padding: 16px;\r\n          }\r\n\r\n          .variations-header {\r\n            flex-direction: column;\r\n            gap: 20px;\r\n            text-align: center;\r\n          }\r\n\r\n          .form-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .parameter-inputs,\r\n          .variant-inputs {\r\n            flex-direction: column;\r\n          }\r\n\r\n          .parameter-options,\r\n          .variant-options {\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n          }\r\n\r\n          .variant-parameters {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .groups-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .modal-content {\r\n            margin: 20px;\r\n            max-height: calc(100vh - 40px);\r\n          }\r\n\r\n          .variations-form {\r\n            padding: 20px;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductVariations;\r\n"],"names":["API_URL","PRODUCTS_URL","GROUPS_URL","products","setProducts","useState","groups","setGroups","loading","setLoading","error","setError","showForm","setShowForm","editingGroup","setEditingGroup","selectedProducts","setSelectedProducts","formData","setFormData","name","description","baseProductId","parameters","variants","useNavigate","useEffect","fetchData","async","productsRes","groupsRes","Promise","all","fetch","ok","errorText","text","Error","status","productsData","groupsData","json","err","console","message","handleCreateGroup","updateParameter","index","field","value","prev","map","param","i","updateVariant","variant","updateVariantParameter","variantIndex","paramName","Map","set","_jsx","className","children","_jsxs","onClick","length","group","_group$baseProductId2","_group$baseProductId","_id","handleEditGroup","title","window","confirm","groupId","method","handleDeleteGroup","type","required","e","stopPropagation","onSubmit","preventDefault","submitData","Object","fromEntries","response","headers","body","JSON","stringify","onChange","target","placeholder","rows","product","addParameter","values","checked","filter","_","removeParameter","valueIndex","updateParameterValue","paramIndex","v","vi","removeParameterValue","addParameterValue","addVariant","productId","isActive","price","removeVariant","get","disabled","_Fragment","jsx"],"sourceRoot":""}