{"version":3,"file":"static/js/46.2b339875.chunk.js","mappings":"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","sources":["pages/opt/Catalog.js","utils/cache.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { trackPageView } from '../../utils/analytics';\r\nimport { fetchWithCache } from '../../utils/cache';\r\nimport '../../styles/Catalog.css';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst OptCatalog = () => {\r\n  // Функция для получения оптимального размера изображения\r\n  const getOptimalImage = (product, preferredSize = 'medium') => {\r\n    // Сначала проверяем обложку вариации, если товар является базовым для группы\r\n    if (product.productGroup && product.productGroup.coverImage) {\r\n      return product.productGroup.coverImage;\r\n    }\r\n    \r\n    // Затем проверяем coverPhoto или обычное фото\r\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\r\n      return product.imageVariants[preferredSize];\r\n    }\r\n    if (product.imageVariants && product.imageVariants.webp) {\r\n      return product.imageVariants[preferredSize];\r\n    }\r\n    return product.image || '/images/products/placeholder.png';\r\n  };\r\n\r\n  // Функция для преобразования кириллического названия категории в латинский ID\r\n  const categoryToId = (categoryName) => {\r\n    const categoryMap = {\r\n      'дрели': 'drills',\r\n      'болгарки': 'bolgarki',\r\n      'шуруповёрты': 'screwdrivers',\r\n      'перфораторы': 'hammers',\r\n      'лобзики': 'jigsaws',\r\n      'лазерные уровни': 'levels',\r\n      'генераторы': 'generators',\r\n      'генераторы для дома': 'generators',\r\n      'дизельные генераторы': 'diesel-generators',\r\n      'дизельные генератор': 'diesel-generators',\r\n      'дизельный генератор': 'diesel-generators',\r\n      'аргонно-дуговая сварка': 'argon-arc-welding',\r\n      'бензиновый триммер': 'gasoline-trimmer',\r\n      'глубинный насос': 'deep-pump',\r\n      'отбойный молоток': 'jackhammer',\r\n      'плазморезы': 'plasma-cutter',\r\n      'редукционный клапан': 'reduction-valve',\r\n      'сварочный аппарат': 'welding',\r\n      'сварочный аппараты': 'welding',\r\n      'струйный насос': 'jet-pump',\r\n      'струйный самовсасывающий насос': 'jet-pump',\r\n      'точильный станок': 'bench-grinder',\r\n      'ударная дрель': 'impact-drill',\r\n      'фекальный насос': 'fecal-pump',\r\n      'периферийные насосы': 'peripheral-pump',\r\n      'периферийный насос': 'peripheral-pump',\r\n      'центробежные насосы': 'centrifugal-pump',\r\n      'центробежный насос': 'centrifugal-pump',\r\n      'насосы': 'nasosy',\r\n      'насос': 'nasosy',\r\n      'измерители': 'measuring',\r\n      'дрель': 'drills',\r\n      'дрель-шуруповёрты': 'drills',\r\n      'дрели-шуруповёрты': 'drills',\r\n      'болгарка': 'bolgarki',\r\n      'шуруповёрт': 'screwdrivers',\r\n      'перфоратор': 'hammers',\r\n      'лобзик': 'jigsaws',\r\n      'лазерный уровень': 'levels',\r\n      'генератор': 'generators',\r\n      'измеритель': 'measuring',\r\n      // Новые категории\r\n      'гайковерт ударный': 'impact-wrench',\r\n      'кусторезы': 'hedge-trimmers',\r\n      'миксеры': 'mixers',\r\n      'наборный электроинструмент': 'power-tool-sets',\r\n      'ножовки': 'hacksaws',\r\n      'пила': 'saws',\r\n      'пила цепная': 'chainsaws',\r\n      'полировальные машины': 'polishing-machines',\r\n      'пчёлки': 'bees',\r\n      'сабельная пила': 'reciprocating-saws',\r\n      'секаторы': 'pruners',\r\n      'фрезер': 'routers',\r\n      'электрорубанок': 'electric-planers'\r\n    };\r\n    \r\n    // Нормализуем название: убираем лишние пробелы, приводим к нижнему регистру\r\n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\s+/g, ' ');\r\n    \r\n    // Сначала ищем точное совпадение\r\n    if (categoryMap[normalizedName]) {\r\n      return categoryMap[normalizedName];\r\n    }\r\n    \r\n    // Спец-правило: любые варианты с \"дизель\" + \"генератор\"\r\n    if (normalizedName.includes('дизель') && normalizedName.includes('генератор')) {\r\n      return 'diesel-generators';\r\n    }\r\n    // Если точного совпадения нет, ищем по частичному совпадению, \r\n    // предпочитая более длинные (более специфичные) ключи\r\n    const entriesByLength = Object.entries(categoryMap).sort((a, b) => b[0].length - a[0].length);\r\n    for (const [key, value] of entriesByLength) {\r\n      if (normalizedName.includes(key)) {\r\n        return value;\r\n      }\r\n    }\r\n    \r\n    // Если ничего не найдено, создаем ID из названия\r\n    return normalizedName.replace(/[^a-z0-9]/g, '-');\r\n  };\r\n\r\n  // Функция для получения названия категории по ID\r\n  const idToCategory = (categoryId) => {\r\n    const idMap = {\r\n      'drills': 'Дрели',\r\n      'grinders': 'Болгарки',\r\n      'screwdrivers': 'Шуруповёрты',\r\n      'hammers': 'Перфораторы',\r\n      'jigsaws': 'Лобзики',\r\n      'levels': 'Лазерные уровни',\r\n      'generators': 'Генераторы',\r\n      'diesel-generators': 'Дизельные генераторы',\r\n      'argon-arc-welding': 'Аргонно-дуговая сварка',\r\n      'gasoline-trimmer': 'Бензиновый триммер',\r\n      'deep-pump': 'Глубинный насос',\r\n      'jackhammer': 'Отбойный молоток',\r\n      'plasma-cutter': 'Плазморезы',\r\n      'reduction-valve': 'Редукционный клапан',\r\n      'welding': 'Сварочные аппараты',\r\n      'jet-pump': 'Струйный насос',\r\n      'bench-grinder': 'Точильный станок',\r\n      'impact-drill': 'Ударная дрель',\r\n      'fecal-pump': 'Фекальный насос',\r\n      'nasosy': 'Насосы',\r\n      'peripheral-pump': 'Периферийный насос',\r\n      'centrifugal-pump': 'Центробежный насос',\r\n      'measuring': 'Измерители',\r\n      // Новые категории\r\n      'impact-wrench': 'Гайковерт ударный',\r\n      'hedge-trimmers': 'Кусторезы',\r\n      'mixers': 'Миксеры',\r\n      'power-tool-sets': 'Наборный электроинструмент',\r\n      'hacksaws': 'Ножовки',\r\n      'saws': 'Пила',\r\n      'chainsaws': 'Пила цепная',\r\n      'polishing-machines': 'Полировальные машины',\r\n      'bees': 'Пчёлки',\r\n      'reciprocating-saws': 'Сабельная пила',\r\n      'pruners': 'Секаторы',\r\n      'routers': 'Фрезер',\r\n      'electric-planers': 'Электрорубанок'\r\n    };\r\n    \r\n    // Если есть точное совпадение в маппинге, возвращаем его\r\n    if (idMap[categoryId]) {\r\n      return idMap[categoryId];\r\n    }\r\n    \r\n    // Если нет точного совпадения, ищем по частичному совпадению\r\n    const foundCategory = categories.find(cat => cat.id === categoryId);\r\n    if (foundCategory) {\r\n      return foundCategory.name;\r\n    }\r\n    \r\n    // Если ничего не найдено, возвращаем ID как есть\r\n    return categoryId;\r\n  };\r\n\r\n  // Статические категории для fallback (без \"Все товары\")\r\n  const staticCategories = [\r\n    { id: 'drills', name: 'Дрели' },\r\n    { id: 'grinders', name: 'Болгарки' },\r\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\r\n    { id: 'hammers', name: 'Перфораторы' },\r\n    { id: 'jigsaws', name: 'Лобзики' },\r\n    { id: 'levels', name: 'Лазерные уровни' },\r\n    { id: 'generators', name: 'Генераторы' },\r\n    { id: 'diesel-generators', name: 'Дизельные генераторы' },\r\n    { id: 'nasosy', name: 'Насосы' },\r\n    { id: 'peripheral-pump', name: 'Периферийный насос' },\r\n    { id: 'centrifugal-pump', name: 'Центробежный насос' },\r\n    { id: 'measuring', name: 'Измерители' },\r\n    // Новые категории\r\n    { id: 'impact-wrench', name: 'Гайковерт ударный' },\r\n    { id: 'hedge-trimmers', name: 'Кусторезы' },\r\n    { id: 'mixers', name: 'Миксеры' },\r\n    { id: 'power-tool-sets', name: 'Наборный электроинструмент' },\r\n    { id: 'hacksaws', name: 'Ножовки' },\r\n    { id: 'saws', name: 'Пила' },\r\n    { id: 'chainsaws', name: 'Пила цепная' },\r\n    { id: 'polishing-machines', name: 'Полировальные машины' },\r\n    { id: 'bees', name: 'Пчёлки' },\r\n    { id: 'reciprocating-saws', name: 'Сабельная пила' },\r\n    { id: 'pruners', name: 'Секаторы' },\r\n    { id: 'routers', name: 'Фрезер' },\r\n    { id: 'electric-planers', name: 'Электрорубанок' }\r\n  ];\r\n\r\n  const location = useLocation();\r\n  // На мобильных при переходе иногда сохраняется старая позиция — принудительно поднимаем наверх\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'auto' });\r\n  }, []);\r\n  const getCategoryFromQuery = () => {\r\n    // Извлекаем категорию из URL пути\r\n    const pathParts = location.pathname.split('/');\r\n    if (pathParts.length > 3 && pathParts[1] === 'opt' && pathParts[2] === 'catalog') {\r\n      return pathParts[3]; // Возвращаем название категории из URL\r\n    }\r\n    return null; // По умолчанию не выбрана категория - показываем все\r\n  };\r\n  const [selectedCategory, setSelectedCategory] = useState(getCategoryFromQuery());\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(24);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\r\n\r\n  // Отслеживаем изменения URL для определения активной категории\r\n  useEffect(() => {\r\n    const categoryFromUrl = getCategoryFromQuery();\r\n    setSelectedCategory(categoryFromUrl);\r\n  }, [location.search, location.pathname]);\r\n\r\n  // Закрытие выпадающего списка при клике вне его\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (!event.target.closest('.category-dropdown')) {\r\n        setIsDropdownOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isDropdownOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isDropdownOpen]);\r\n\r\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\r\n\r\n  // Загрузка товаров с кэшированием\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    fetchWithCache(API_URL, {}, 10 * 60 * 1000) // Кэш на 10 минут\r\n      .then(data => {\r\n        setProducts(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError('Ошибка загрузки товаров');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Отслеживаем просмотр страницы каталога\r\n  useEffect(() => {\r\n    trackPageView('opt_catalog');\r\n  }, []);\r\n\r\n  // Извлечение категорий из товаров\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      setCategoriesLoading(true);\r\n      \r\n      // Извлекаем уникальные категории из товаров, используя готовые categorySlug\r\n      const categoryMap = new Map();\r\n      \r\n      products.forEach(product => {\r\n        if (product.categorySlug && product.category) {\r\n          // Используем готовый categorySlug как ID и оригинальное название категории\r\n          const categorySlug = product.categorySlug.trim();\r\n          const originalCategory = product.category.trim();\r\n          \r\n          // Если такой categorySlug еще нет, добавляем её\r\n          if (!categoryMap.has(categorySlug)) {\r\n            categoryMap.set(categorySlug, originalCategory);\r\n          }\r\n        }\r\n      });\r\n      \r\n      const uniqueCategories = Array.from(categoryMap.entries()).map(([slug, name]) => ({\r\n        id: slug,\r\n        name: name\r\n      })).sort((a, b) => a.name.localeCompare(b.name, 'ru'));\r\n      \r\n      if (uniqueCategories.length > 0) {\r\n        setCategories(uniqueCategories);\r\n      } else {\r\n        // Fallback: если нет categorySlug, используем старую логику\r\n        const categoryMapOld = new Map();\r\n        \r\n        products.forEach(product => {\r\n          if (product.category) {\r\n            const normalizedCategory = product.category.trim().toLowerCase().replace(/\\s+/g, ' ');\r\n            const originalCategory = product.category.trim();\r\n            \r\n            if (!categoryMapOld.has(normalizedCategory)) {\r\n              categoryMapOld.set(normalizedCategory, originalCategory);\r\n            }\r\n          }\r\n        });\r\n        \r\n        const uniqueCategoriesOld = Array.from(categoryMapOld.values()).sort();\r\n        \r\n        if (uniqueCategoriesOld.length > 0) {\r\n          const realCategories = uniqueCategoriesOld.map(category => ({\r\n            id: categoryToId(category),\r\n            name: category\r\n          }));\r\n          setCategories(realCategories);\r\n        } else {\r\n          setCategories(staticCategories);\r\n        }\r\n      }\r\n      setCategoriesLoading(false);\r\n    }\r\n  }, [products]);\r\n\r\n  // Принудительное применение стилей для карточек\r\n  useEffect(() => {\r\n    const forceStyles = () => {\r\n      const grid = document.querySelector('.catalog-products-grid');\r\n      const cards = document.querySelectorAll('.product-card');\r\n      const images = document.querySelectorAll('.product-image');\r\n      const infos = document.querySelectorAll('.product-info');\r\n      \r\n      if (grid) {\r\n        grid.style.display = 'grid';\r\n        grid.style.gap = '0';\r\n        grid.style.margin = '0';\r\n        grid.style.padding = '0';\r\n        grid.style.borderCollapse = 'collapse';\r\n        grid.style.borderSpacing = '0';\r\n      }\r\n      \r\n      cards.forEach(card => {\r\n        card.style.margin = '-1px';\r\n        card.style.border = '1px solid #e3e6ea';\r\n        card.style.borderRadius = '0';\r\n        card.style.padding = '0';\r\n        card.style.background = '#fff';\r\n        card.style.display = 'flex';\r\n        card.style.flexDirection = 'column';\r\n        card.style.height = '100%';\r\n        card.style.position = 'relative';\r\n        card.style.overflow = 'hidden';\r\n        card.style.boxSizing = 'border-box';\r\n        card.style.minHeight = 'auto';\r\n      });\r\n      \r\n      images.forEach(img => {\r\n        img.style.height = '160px';\r\n        img.style.padding = '0';\r\n        img.style.margin = '0';\r\n      });\r\n      \r\n      infos.forEach(info => {\r\n        info.style.padding = '6px';\r\n        info.style.minHeight = '80px';\r\n      });\r\n    };\r\n\r\n    // Применяем стили сразу и после загрузки\r\n    forceStyles();\r\n    setTimeout(forceStyles, 50);\r\n    setTimeout(forceStyles, 100);\r\n    setTimeout(forceStyles, 200);\r\n    setTimeout(forceStyles, 500);\r\n    setTimeout(forceStyles, 1000);\r\n\r\n    // Применяем стили при изменении размера окна\r\n    const handleResize = () => {\r\n      setTimeout(forceStyles, 100);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [products]);\r\n\r\n  // Функция для группировки товаров по категориям (убираем дубликаты)\r\n  const getGroupedProducts = (productList) => {\r\n    if (selectedCategory) {\r\n      // Если выбрана категория, показываем все товары этой категории\r\n      return productList.filter(product => {\r\n        // Сначала проверяем готовый categorySlug из MongoDB\r\n        if (product.categorySlug) {\r\n          return product.categorySlug === selectedCategory;\r\n        }\r\n        \r\n        // Fallback: если categorySlug нет, используем старую логику\r\n        if (!product.category) return false;\r\n        const productCategoryId = categoryToId(product.category.trim());\r\n        return productCategoryId === selectedCategory;\r\n      });\r\n    } else {\r\n      // Если категория не выбрана, группируем товары по категориям\r\n      const categoryMap = new Map();\r\n      \r\n      productList.forEach(product => {\r\n        let categoryKey;\r\n        \r\n        // Определяем ключ категории\r\n        if (product.categorySlug) {\r\n          categoryKey = product.categorySlug;\r\n        } else if (product.category) {\r\n          categoryKey = categoryToId(product.category.trim());\r\n        } else {\r\n          categoryKey = 'other';\r\n        }\r\n        \r\n        // Если категории еще нет в мапе, добавляем товар\r\n        if (!categoryMap.has(categoryKey)) {\r\n          categoryMap.set(categoryKey, product);\r\n        } else {\r\n          // Если категория уже есть, выбираем товар с productGroup (приоритет мастер-товарам)\r\n          const existingProduct = categoryMap.get(categoryKey);\r\n          if (product.productGroup && !existingProduct.productGroup) {\r\n            categoryMap.set(categoryKey, product);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return Array.from(categoryMap.values());\r\n    }\r\n  };\r\n\r\n  // При загрузке /opt/catalog показываем сгруппированные товары, при выборе категории - все товары\r\n  const filteredProducts = getGroupedProducts(products);\r\n\r\n  // Пагинация\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\r\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n\r\n  // Сброс на первую страницу при смене категории\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedCategory]);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  // Функция для получения названия товара с приоритетом: productGroup -> category -> product name\r\n  const getProductDisplayName = (product) => {\r\n    // 1. Проверяем мастер-товар (productGroup)\r\n    if (product.productGroup && product.productGroup.name) {\r\n      return product.productGroup.name;\r\n    }\r\n    \r\n    // 2. Проверяем название категории\r\n    if (product.category) {\r\n      return product.category;\r\n    }\r\n    \r\n    // 3. Используем название продукта\r\n    return product.name;\r\n  };\r\n\r\n  // Определяем целевую ссылку для карточки товара в каталоге\r\n  const getCardLink = (product) => {\r\n    // Ведём на категорию товара. Если есть categorySlug в документе — используем его,\r\n    // иначе маппим текст категории в id (как в мини-каталоге на главной)\r\n    if (product && product.categorySlug) {\r\n      return `/opt/catalog/${product.categorySlug}`;\r\n    }\r\n    const catId = product && product.category ? categoryToId(String(product.category).trim()) : '';\r\n    if (catId) return `/opt/catalog/${catId}`;\r\n    return `/opt/catalog`; // Если категории нет, ведём в общий каталог\r\n  };\r\n\r\n  return (\r\n    <div className=\"catalog\">\r\n      <Header />\r\n      <main className=\"catalog-main\">\r\n        <div className=\"container catalog-layout\">\r\n          <aside className=\"catalog-sidebar desktop-sidebar\">\r\n            <h3 className=\"sidebar-title\">Категории</h3>\r\n            {categoriesLoading ? (\r\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\r\n                Загрузка категорий...\r\n              </div>\r\n            ) : (\r\n              <ul className=\"sidebar-categories\">\r\n                {categories.map(category => (\r\n                  <li key={category.id}>\r\n                    <Link\r\n                      to={`/opt/catalog/${category.id}`}\r\n                      className={`sidebar-category-btn${selectedCategory === category.id ? ' active' : ''}`}\r\n                      style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\r\n                    >\r\n                      {category.name}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </aside>\r\n          <div className=\"catalog-content\">\r\n            <div className=\"category-dropdown-container mobile-dropdown\">\r\n              <div className={`category-dropdown ${isDropdownOpen ? 'open' : ''}`}>\r\n                <button \r\n                  className=\"category-dropdown-btn\"\r\n                  onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n                  disabled={categoriesLoading}\r\n                >\r\n                  <span>\r\n                    {categoriesLoading \r\n                      ? 'Загрузка...' \r\n                      : location.pathname === '/opt/catalog'\r\n                        ? 'Каталог товаров'\r\n                        : selectedCategory \r\n                          ? (categories.find(cat => cat.id === selectedCategory)?.name || idToCategory(selectedCategory) || 'Каталог товаров')\r\n                          : 'Каталог товаров'\r\n                    }\r\n                  </span>\r\n                  <span className=\"dropdown-arrow\">▼</span>\r\n                </button>\r\n                {isDropdownOpen && !categoriesLoading && (\r\n                  <div className=\"category-dropdown-menu\">\r\n                    {categories.map(category => (\r\n                      <Link\r\n                        key={category.id}\r\n                        to={`/opt/catalog/${category.id}`}\r\n                        className={`category-dropdown-item${selectedCategory === category.id ? ' active' : ''}`}\r\n                        style={{ textDecoration: 'none', color: 'inherit', display: 'block', width: '100%' }}\r\n                        onClick={() => setIsDropdownOpen(false)}\r\n                      >\r\n                        {category.name}\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Хлебные крошки как на странице продукта */}\r\n            <nav className=\"breadcrumbs\" style={{paddingBottom: '12px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>\r\n              <a href=\"/opt\">Оптовикам</a>\r\n              <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\r\n              <a href=\"/opt/catalog\">Каталог</a>\r\n              {selectedCategory && (\r\n                <>\r\n                  <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>\r\n                  <span style={{color:'#1a2236', fontWeight:500}}>{categories.find(cat => cat.id === selectedCategory)?.name || idToCategory(selectedCategory)}</span>\r\n                </>\r\n              )}\r\n            </nav>\r\n            <h1 className=\"catalog-title\" style={{textAlign: 'left', marginLeft: 0}}>\r\n              {categoriesLoading \r\n                ? 'Каталог товаров' \r\n                : location.pathname === '/opt/catalog'\r\n                  ? 'Каталог товаров'\r\n                  : selectedCategory \r\n                    ? (categories.find(cat => cat.id === selectedCategory)?.name || idToCategory(selectedCategory) || 'Каталог товаров')\r\n                    : 'Каталог товаров'\r\n              }\r\n            </h1>\r\n            {loading ? (\r\n              <div style={{padding: 32}}>Загрузка...</div>\r\n            ) : error ? (\r\n              <div style={{color: 'red', padding: 32}}>{error}</div>\r\n            ) : (\r\n            <div className=\"catalog-products-grid\" style={{gap: 0}}>\r\n              {currentProducts.map(product => (\r\n                <Link\r\n                  to={getCardLink(product)}\r\n                  key={product._id}\r\n                  style={{ textDecoration: 'none', color: 'inherit' }}\r\n                >\r\n                  <div\r\n                    className=\"product-card kaspi-style mini-product-card\"\r\n                    style={{ cursor: 'pointer', minHeight: 'auto', position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', border: '1px solid #e3e6ea', margin: '-1px' }}\r\n                  >\r\n                    <div className=\"product-image\" style={{height: '160px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                      <picture style={{width: '100%', height: '100%'}}>\r\n                        <source \r\n                          srcSet={getOptimalImage(product, 'webp')} \r\n                          type=\"image/webp\"\r\n                        />\r\n                        <img \r\n                          src={getOptimalImage(product, 'medium')} \r\n                          alt={product.name} \r\n                          style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} \r\n                          loading=\"lazy\"\r\n                          width=\"260\"\r\n                          height=\"160\"\r\n                        />\r\n                      </picture>\r\n                    </div>\r\n                    <div style={{width:'90%',maxWidth:'260px',borderTop:'1px solid #bdbdbd',margin:'0 auto 0 auto', alignSelf:'center'}}></div>\r\n                    <div className=\"product-info\" style={{padding: '0 8px 6px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight: '20px'}}>\r\n                      <span style={{fontSize: '1rem', fontWeight: 700, color: '#1a2236', margin: '0', lineHeight: 1.2, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%', marginTop: '2px'}}>{getProductDisplayName(product)}</span>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n            )}\r\n            \r\n            {/* Пагинация */}\r\n            {totalPages > 1 && (\r\n              <div className=\"pagination-container\" style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                marginTop: '40px',\r\n                marginBottom: '20px',\r\n                gap: '8px'\r\n              }}>\r\n                {/* Кнопка \"Предыдущая\" */}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  style={{\r\n                    padding: '8px 16px',\r\n                    border: '1px solid #e3e6ea',\r\n                    background: currentPage === 1 ? '#f5f5f5' : '#fff',\r\n                    color: currentPage === 1 ? '#999' : '#333',\r\n                    cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\r\n                    borderRadius: '4px',\r\n                    fontSize: '14px',\r\n                    fontWeight: '500'\r\n                  }}\r\n                >\r\n                  ← Назад\r\n                </button>\r\n                \r\n                {/* Номера страниц */}\r\n                {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => {\r\n                  // Показываем только первые 5 страниц, последние 5 и текущую с соседними\r\n                  if (\r\n                    pageNumber === 1 ||\r\n                    pageNumber === totalPages ||\r\n                    (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\r\n                  ) {\r\n                    return (\r\n                      <button\r\n                        key={pageNumber}\r\n                        onClick={() => handlePageChange(pageNumber)}\r\n                        style={{\r\n                          padding: '8px 12px',\r\n                          border: '1px solid #e3e6ea',\r\n                          background: currentPage === pageNumber ? '#e86c0a' : '#fff',\r\n                          color: currentPage === pageNumber ? '#fff' : '#333',\r\n                          cursor: 'pointer',\r\n                          borderRadius: '4px',\r\n                          fontSize: '14px',\r\n                          fontWeight: '500',\r\n                          minWidth: '40px'\r\n                        }}\r\n                      >\r\n                        {pageNumber}\r\n                      </button>\r\n                    );\r\n                  } else if (\r\n                    pageNumber === currentPage - 2 ||\r\n                    pageNumber === currentPage + 2\r\n                  ) {\r\n                    return (\r\n                      <span\r\n                        key={pageNumber}\r\n                        style={{\r\n                          padding: '8px 4px',\r\n                          color: '#999',\r\n                          fontSize: '14px'\r\n                        }}\r\n                      >\r\n                        ...\r\n                      </span>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })}\r\n                \r\n                {/* Кнопка \"Следующая\" */}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  style={{\r\n                    padding: '8px 16px',\r\n                    border: '1px solid #e3e6ea',\r\n                    background: currentPage === totalPages ? '#f5f5f5' : '#fff',\r\n                    color: currentPage === totalPages ? '#999' : '#333',\r\n                    cursor: currentPage === totalPages ? 'not-allowed' : 'pointer',\r\n                    borderRadius: '4px',\r\n                    fontSize: '14px',\r\n                    fontWeight: '500'\r\n                  }}\r\n                >\r\n                  Вперед →\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n          </div>\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptCatalog;\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n"],"names":["OptCatalog","_categories$find","_categories$find2","_categories$find3","getOptimalImage","product","preferredSize","arguments","length","undefined","productGroup","coverImage","imageVariants","webp","image","categoryToId","categoryName","categoryMap","normalizedName","toLowerCase","trim","replace","includes","entriesByLength","Object","entries","sort","a","b","key","value","idToCategory","categoryId","idMap","foundCategory","categories","find","cat","id","name","staticCategories","location","useLocation","useEffect","window","scrollTo","top","left","behavior","getCategoryFromQuery","pathParts","pathname","split","selectedCategory","setSelectedCategory","useState","products","setProducts","loading","setLoading","error","setError","isDropdownOpen","setIsDropdownOpen","currentPage","setCurrentPage","productsPerPage","setCategories","categoriesLoading","setCategoriesLoading","categoryFromUrl","search","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","fetchWithCache","then","data","catch","err","trackPageView","Map","forEach","categorySlug","category","originalCategory","has","set","uniqueCategories","Array","from","map","_ref","slug","localeCompare","categoryMapOld","normalizedCategory","uniqueCategoriesOld","values","realCategories","forceStyles","grid","querySelector","cards","querySelectorAll","images","infos","style","display","gap","margin","padding","borderCollapse","borderSpacing","card","border","borderRadius","background","flexDirection","height","position","overflow","boxSizing","minHeight","img","info","setTimeout","handleResize","filteredProducts","productList","filter","categoryKey","existingProduct","get","getGroupedProducts","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","handlePageChange","pageNumber","getProductDisplayName","getCardLink","concat","catId","String","_jsxs","className","children","_jsx","Header","textAlign","color","Link","to","textDecoration","width","onClick","disabled","paddingBottom","alignItems","flexWrap","href","fontSize","_Fragment","fontWeight","marginLeft","cursor","fontFamily","justifyContent","srcSet","type","src","alt","objectFit","maxWidth","borderTop","alignSelf","lineHeight","marginTop","_id","marginBottom","_","index","minWidth","Footer","apiCache","constructor","this","cache","defaultTTL","item","Date","now","expiry","delete","ttl","clear","size","async","url","options","cacheKey","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json"],"sourceRoot":""}