{"version":3,"file":"static/js/645.2ad7867f.chunk.js","mappings":"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","sources":["admin/ProductMerge.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ProductMerge.css';\n\nconst API_URL = 'https://electro-a8bl.onrender.com/api';\n\nfunction ProductMerge({ onLogout }) {\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [masterProducts, setMasterProducts] = useState([]);\n  const [showMergeForm, setShowMergeForm] = useState(false);\n  const [mergeFormData, setMergeFormData] = useState({\n    name: '',\n    category: '',\n    description: '',\n    shortDescription: '',\n    mainImage: '',\n    variationType: 'power'\n  });\n\n  // Состояние для произвольных параметров вариаций\n  const [variationOptions, setVariationOptions] = useState([]);\n  const [useCustomOptions, setUseCustomOptions] = useState(false);\n\n  // Загрузка всех товаров\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_URL}/products`);\n      const data = await response.json();\n      // Проверяем, что data является массивом\n      setProducts(Array.isArray(data) ? data : []);\n    } catch (err) {\n      setError('Ошибка загрузки товаров');\n      console.error(err);\n      setProducts([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Загрузка мастер-товаров\n  const fetchMasterProducts = async () => {\n    try {\n      const response = await fetch(`${API_URL}/master-products`);\n      const data = await response.json();\n      // Проверяем, что data является массивом\n      setMasterProducts(Array.isArray(data) ? data : []);\n    } catch (err) {\n      console.error('Ошибка загрузки мастер-товаров:', err);\n      setMasterProducts([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchMasterProducts();\n  }, []);\n\n  // Выбор товара\n  const handleProductSelect = (productId) => {\n    setSelectedProducts(prev => {\n      if (prev.includes(productId)) {\n        return prev.filter(id => id !== productId);\n      } else {\n        return [...prev, productId];\n      }\n    });\n  };\n\n  // Выбор всех товаров\n  const handleSelectAll = () => {\n    if (!Array.isArray(products)) return;\n    \n    if (selectedProducts.length === products.length) {\n      setSelectedProducts([]);\n    } else {\n      setSelectedProducts(products.filter(p => p && p._id).map(p => p._id));\n    }\n  };\n\n  // Открытие формы объединения\n  const handleMergeClick = () => {\n    if (selectedProducts.length < 2) {\n      setError('Выберите минимум 2 товара для объединения');\n      return;\n    }\n    \n    const selectedProductObjects = products.filter(p => selectedProducts.includes(p._id));\n    \n    // Автоматически заполняем форму данными первого товара\n    const firstProduct = selectedProductObjects[0];\n    setMergeFormData({\n      name: firstProduct.name.replace(/\\d+\\s*[ВтW]/i, '').trim(), // Убираем мощность из названия\n      category: firstProduct.category || '',\n      description: firstProduct.description || '',\n      shortDescription: firstProduct['Short description'] || '',\n      mainImage: firstProduct.image || '',\n      variationType: 'power'\n    });\n    \n    setShowMergeForm(true);\n    setError('');\n  };\n\n  // Объединение товаров\n  const handleMergeSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      setError('');\n      \n      const requestData = {\n        productIds: selectedProducts,\n        masterProductData: mergeFormData,\n        variationType: useCustomOptions ? null : mergeFormData.variationType,\n        variationOptions: useCustomOptions ? getVariationOptionsForAPI() : null\n      };\n      \n      console.log('Отправляем данные на сервер:', requestData);\n      \n      const response = await fetch(`${API_URL}/merge-products`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || 'Ошибка объединения товаров');\n      }\n      \n      setSuccess(data.message);\n      setSelectedProducts([]);\n      setShowMergeForm(false);\n      setMergeFormData({\n        name: '',\n        category: '',\n        description: '',\n        shortDescription: '',\n        mainImage: '',\n        variationType: 'power'\n      });\n      \n      // Обновляем списки\n      await fetchProducts();\n      await fetchMasterProducts();\n      \n      // Очищаем сообщение об успехе через 3 секунды\n      setTimeout(() => setSuccess(''), 3000);\n      \n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Удаление мастер-товара\n  const handleDeleteMasterProduct = async (masterProductId) => {\n    if (!window.confirm('Вы уверены, что хотите удалить этот мастер-товар и все его вариации?')) {\n      return;\n    }\n    \n    try {\n      const response = await fetch(`${API_URL}/master-products/${masterProductId}`, {\n        method: 'DELETE'\n      });\n      \n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Ошибка удаления');\n      }\n      \n      setSuccess('Мастер-товар успешно удален');\n      await fetchMasterProducts();\n      \n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Получение выбранных товаров\n  const getSelectedProductObjects = () => {\n    if (!Array.isArray(products)) return [];\n    return products.filter(p => p && p._id && selectedProducts.includes(p._id));\n  };\n\n  // Добавление нового параметра вариации\n  const addVariationOption = () => {\n    setVariationOptions(prev => [...prev, {\n      id: Date.now(),\n      name: '',\n      values: ['']\n    }]);\n  };\n\n  // Удаление параметра вариации\n  const removeVariationOption = (optionId) => {\n    setVariationOptions(prev => prev.filter(option => option.id !== optionId));\n  };\n\n  // Обновление названия параметра\n  const updateVariationOptionName = (optionId, name) => {\n    setVariationOptions(prev => prev.map(option => \n      option.id === optionId ? { ...option, name } : option\n    ));\n  };\n\n  // Добавление значения к параметру\n  const addVariationOptionValue = (optionId) => {\n    setVariationOptions(prev => prev.map(option => \n      option.id === optionId ? { ...option, values: [...option.values, ''] } : option\n    ));\n  };\n\n  // Удаление значения параметра\n  const removeVariationOptionValue = (optionId, valueIndex) => {\n    setVariationOptions(prev => prev.map(option => \n      option.id === optionId ? { \n        ...option, \n        values: option.values.filter((_, index) => index !== valueIndex) \n      } : option\n    ));\n  };\n\n  // Обновление значения параметра\n  const updateVariationOptionValue = (optionId, valueIndex, value) => {\n    setVariationOptions(prev => prev.map(option => \n      option.id === optionId ? { \n        ...option, \n        values: option.values.map((v, index) => index === valueIndex ? value : v) \n      } : option\n    ));\n  };\n\n  // Преобразование variationOptions в формат для API\n  const getVariationOptionsForAPI = () => {\n    const result = {};\n    variationOptions.forEach(option => {\n      if (option.name && option.values.length > 0 && option.values.some(v => v.trim())) {\n        result[option.name] = option.values.filter(v => v.trim());\n      }\n    });\n    return result;\n  };\n\n  return (\n    <div className=\"product-merge\">\n      <div className=\"product-merge-header\">\n        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 20}}>\n          <div>\n            <h1>Объединение товаров</h1>\n            <p>Выберите товары, которые отличаются только параметрами (например, мощностью), и объедините их в один товар с вариациями.</p>\n          </div>\n          <div style={{display: 'flex', gap: 10}}>\n            <button \n              onClick={() => window.location.href = '/admin/products'} \n              style={{\n                background: '#1976d2', \n                color: '#fff', \n                fontWeight: 600, \n                fontSize: 15, \n                border: 'none', \n                borderRadius: 7, \n                padding: '8px 18px', \n                cursor: 'pointer'\n              }}\n            >\n              📦 Товары\n            </button>\n            <button \n              onClick={() => window.location.href = '/admin/settings'} \n              style={{\n                background: '#1e88e5', \n                color: '#fff', \n                fontWeight: 600, \n                fontSize: 15, \n                border: 'none', \n                borderRadius: 7, \n                padding: '8px 18px', \n                cursor: 'pointer'\n              }}\n            >\n              ⚙️ Настройки\n            </button>\n            <button \n              onClick={() => window.location.href = '/admin/pickup-points'} \n              style={{\n                background: '#28a745', \n                color: '#fff', \n                fontWeight: 600, \n                fontSize: 15, \n                border: 'none', \n                borderRadius: 7, \n                padding: '8px 18px', \n                cursor: 'pointer'\n              }}\n            >\n              🏬 Пункты самовывоза\n            </button>\n            <button \n              onClick={onLogout} \n              style={{\n                background: '#e53935', \n                color: '#fff', \n                fontWeight: 600, \n                fontSize: 15, \n                border: 'none', \n                borderRadius: 7, \n                padding: '8px 18px', \n                cursor: 'pointer'\n              }}\n            >\n              Выйти\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError('')}>&times;</button>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"success-message\">\n          {success}\n          <button onClick={() => setSuccess('')}>&times;</button>\n        </div>\n      )}\n\n      <div className=\"product-merge-content\">\n        <div className=\"product-merge-section\">\n          <div className=\"section-header\">\n            <h2>Выбор товаров для объединения</h2>\n            <div className=\"section-actions\">\n              <button \n                onClick={handleSelectAll}\n                className=\"btn-secondary\"\n              >\n                                 {Array.isArray(products) && selectedProducts.length === products.length ? 'Снять выделение' : 'Выбрать все'}\n              </button>\n              <button \n                onClick={handleMergeClick}\n                disabled={selectedProducts.length < 2 || loading}\n                className=\"btn-primary\"\n              >\n                Объединить выбранные ({selectedProducts.length})\n              </button>\n            </div>\n          </div>\n\n          {loading ? (\n            <div className=\"loading\">Загрузка товаров...</div>\n          ) : (\n            <div className=\"products-grid\">\n              {Array.isArray(products) && products.map(product => (\n                <div \n                  key={product._id || Math.random()} \n                  className={`product-card ${selectedProducts.includes(product._id) ? 'selected' : ''}`}\n                  onClick={() => product._id && handleProductSelect(product._id)}\n                >\n                                     <div className=\"product-image\">\n                     <img src={product.image || '/images/products/placeholder.png'} alt={product.name || 'Товар'} />\n                   </div>\n                                     <div className=\"product-info\">\n                     <h3>{product.name || 'Без названия'}</h3>\n                     <p className=\"product-price\">{product.price || '0'} ₸</p>\n                     <p className=\"product-article\">Артикул: {product.article || 'Нет'}</p>\n                    {product.characteristics && (\n                      <div className=\"product-characteristics\">\n                        <small>Характеристики:</small>\n                        <div className=\"characteristics-preview\">\n                          {typeof product.characteristics === 'string' \n                            ? product.characteristics.substring(0, 100) + '...'\n                            : JSON.stringify(product.characteristics).substring(0, 100) + '...'\n                          }\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                                     <div className=\"product-checkbox\">\n                     <input \n                       type=\"checkbox\" \n                       checked={product._id ? selectedProducts.includes(product._id) : false}\n                       onChange={() => product._id && handleProductSelect(product._id)}\n                       onClick={(e) => e.stopPropagation()}\n                     />\n                   </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {showMergeForm && (\n          <div className=\"merge-form-overlay\">\n            <div className=\"merge-form\">\n              <div className=\"form-header\">\n                <h2>Настройки объединения</h2>\n                <button onClick={() => setShowMergeForm(false)}>&times;</button>\n              </div>\n              \n              <form onSubmit={handleMergeSubmit}>\n                <div className=\"form-group\">\n                  <label>Название мастер-товара:</label>\n                  <input\n                    type=\"text\"\n                    value={mergeFormData.name}\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, name: e.target.value }))}\n                    required\n                    placeholder=\"Например: Угловая шлифовальная машина\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Категория:</label>\n                  <input\n                    type=\"text\"\n                    value={mergeFormData.category}\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, category: e.target.value }))}\n                    required\n                    placeholder=\"Например: Болгарка\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Способ задания вариаций:</label>\n                  <div style={{marginBottom: 15}}>\n                    <label style={{display: 'flex', alignItems: 'center', marginBottom: 10}}>\n                      <input\n                        type=\"radio\"\n                        checked={!useCustomOptions}\n                        onChange={() => setUseCustomOptions(false)}\n                        style={{marginRight: 8}}\n                      />\n                      Автоматический (по мощности)\n                    </label>\n                    <label style={{display: 'flex', alignItems: 'center'}}>\n                      <input\n                        type=\"radio\"\n                        checked={useCustomOptions}\n                        onChange={() => setUseCustomOptions(true)}\n                        style={{marginRight: 8}}\n                      />\n                      Произвольные параметры\n                    </label>\n                  </div>\n                  \n                  {!useCustomOptions ? (\n                    <div>\n                      <label>Тип вариации:</label>\n                      <select\n                        value={mergeFormData.variationType}\n                        onChange={(e) => setMergeFormData(prev => ({ ...prev, variationType: e.target.value }))}\n                      >\n                        <option value=\"power\">Мощность (Вт)</option>\n                        <option value=\"voltage\">Напряжение (В)</option>\n                        <option value=\"size\">Размер</option>\n                        <option value=\"color\">Цвет</option>\n                        <option value=\"custom\">Другое</option>\n                      </select>\n                    </div>\n                  ) : (\n                    <div>\n                      <label>Произвольные параметры вариаций:</label>\n                      <div style={{marginTop: 10}}>\n                        {variationOptions.map((option, optionIndex) => (\n                          <div key={option.id} style={{\n                            border: '1px solid #ddd',\n                            borderRadius: '5px',\n                            padding: '15px',\n                            marginBottom: '10px',\n                            backgroundColor: '#f9f9f9'\n                          }}>\n                            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px'}}>\n                              <input\n                                type=\"text\"\n                                placeholder=\"Название параметра (например: Вольты)\"\n                                value={option.name}\n                                onChange={(e) => updateVariationOptionName(option.id, e.target.value)}\n                                style={{\n                                  flex: 1,\n                                  padding: '8px',\n                                  border: '1px solid #ccc',\n                                  borderRadius: '4px',\n                                  marginRight: '10px'\n                                }}\n                              />\n                              <button\n                                type=\"button\"\n                                onClick={() => removeVariationOption(option.id)}\n                                style={{\n                                  background: '#dc3545',\n                                  color: 'white',\n                                  border: 'none',\n                                  borderRadius: '4px',\n                                  padding: '8px 12px',\n                                  cursor: 'pointer'\n                                }}\n                              >\n                                Удалить\n                              </button>\n                            </div>\n                            \n                            <div>\n                              <label style={{fontSize: '14px', color: '#666', marginBottom: '5px', display: 'block'}}>\n                                Значения параметра:\n                              </label>\n                              {option.values.map((value, valueIndex) => (\n                                <div key={valueIndex} style={{display: 'flex', alignItems: 'center', marginBottom: '5px'}}>\n                                  <input\n                                    type=\"text\"\n                                    placeholder=\"Значение (например: 220)\"\n                                    value={value}\n                                    onChange={(e) => updateVariationOptionValue(option.id, valueIndex, e.target.value)}\n                                    style={{\n                                      flex: 1,\n                                      padding: '6px',\n                                      border: '1px solid #ccc',\n                                      borderRadius: '4px',\n                                      marginRight: '5px'\n                                    }}\n                                  />\n                                  {option.values.length > 1 && (\n                                    <button\n                                      type=\"button\"\n                                      onClick={() => removeVariationOptionValue(option.id, valueIndex)}\n                                      style={{\n                                        background: '#ffc107',\n                                        color: '#333',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        padding: '6px 8px',\n                                        cursor: 'pointer',\n                                        fontSize: '12px'\n                                      }}\n                                    >\n                                      ✕\n                                    </button>\n                                  )}\n                                </div>\n                              ))}\n                              <button\n                                type=\"button\"\n                                onClick={() => addVariationOptionValue(option.id)}\n                                style={{\n                                  background: '#28a745',\n                                  color: 'white',\n                                  border: 'none',\n                                  borderRadius: '4px',\n                                  padding: '6px 12px',\n                                  cursor: 'pointer',\n                                  fontSize: '12px',\n                                  marginTop: '5px'\n                                }}\n                              >\n                                + Добавить значение\n                              </button>\n                            </div>\n                          </div>\n                        ))}\n                        \n                        <button\n                          type=\"button\"\n                          onClick={addVariationOption}\n                          style={{\n                            background: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            padding: '10px 15px',\n                            cursor: 'pointer',\n                            width: '100%'\n                          }}\n                        >\n                          + Добавить параметр\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Описание:</label>\n                  <textarea\n                    value={mergeFormData.description}\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, description: e.target.value }))}\n                    placeholder=\"Описание товара\"\n                    rows=\"3\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Краткое описание:</label>\n                  <textarea\n                    value={mergeFormData.shortDescription}\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, shortDescription: e.target.value }))}\n                    placeholder=\"Краткое описание\"\n                    rows=\"2\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Главное изображение:</label>\n                  <input\n                    type=\"text\"\n                    value={mergeFormData.mainImage}\n                    onChange={(e) => setMergeFormData(prev => ({ ...prev, mainImage: e.target.value }))}\n                    placeholder=\"URL изображения\"\n                  />\n                </div>\n\n                <div className=\"selected-products-preview\">\n                  <h4>Выбранные товары ({selectedProducts.length}):</h4>\n                  <div className=\"selected-products-list\">\n                                         {getSelectedProductObjects().map(product => (\n                       <div key={product._id || Math.random()} className=\"selected-product-item\">\n                         <img src={product.image || '/images/products/placeholder.png'} alt={product.name || 'Товар'} />\n                         <div>\n                           <strong>{product.name || 'Без названия'}</strong>\n                           <span>{product.price || '0'} ₸</span>\n                         </div>\n                       </div>\n                     ))}\n                  </div>\n                </div>\n\n                <div className=\"form-actions\">\n                  <button type=\"button\" onClick={() => setShowMergeForm(false)} className=\"btn-secondary\">\n                    Отмена\n                  </button>\n                  <button type=\"submit\" disabled={loading} className=\"btn-primary\">\n                    {loading ? 'Объединение...' : 'Объединить товары'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        <div className=\"product-merge-section\">\n          <h2>Существующие мастер-товары</h2>\n          {!Array.isArray(masterProducts) || masterProducts.length === 0 ? (\n            <p>Пока нет объединенных товаров</p>\n          ) : (\n            <div className=\"master-products-list\">\n              {masterProducts.map(masterProduct => (\n                <div key={masterProduct._id} className=\"master-product-card\">\n                  <div className=\"master-product-info\">\n                    <h3>{masterProduct.name}</h3>\n                    <p>Категория: {masterProduct.category}</p>\n                    <p>Типы вариаций: {Array.isArray(masterProduct.variationTypes) ? masterProduct.variationTypes.join(', ') : 'Не указано'}</p>\n                    <p>Создан: {masterProduct.createdAt ? new Date(masterProduct.createdAt).toLocaleDateString() : 'Не указано'}</p>\n                  </div>\n                  <div className=\"master-product-actions\">\n                    <button \n                      onClick={() => handleDeleteMasterProduct(masterProduct._id)}\n                      className=\"btn-danger\"\n                    >\n                      Удалить\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductMerge; "],"names":["API_URL","_ref","onLogout","products","setProducts","useState","selectedProducts","setSelectedProducts","loading","setLoading","error","setError","success","setSuccess","masterProducts","setMasterProducts","showMergeForm","setShowMergeForm","mergeFormData","setMergeFormData","name","category","description","shortDescription","mainImage","variationType","variationOptions","setVariationOptions","useCustomOptions","setUseCustomOptions","fetchProducts","async","response","fetch","data","json","Array","isArray","err","console","fetchMasterProducts","useEffect","handleProductSelect","productId","prev","includes","filter","id","getVariationOptionsForAPI","result","forEach","option","values","length","some","v","trim","_jsxs","className","children","_jsx","style","display","justifyContent","alignItems","marginBottom","gap","onClick","window","location","href","background","color","fontWeight","fontSize","border","borderRadius","padding","cursor","handleSelectAll","p","_id","map","handleMergeClick","firstProduct","replace","image","disabled","product","src","alt","price","article","characteristics","substring","JSON","stringify","type","checked","onChange","e","stopPropagation","Math","random","onSubmit","preventDefault","requestData","productIds","masterProductData","log","method","headers","body","ok","Error","message","setTimeout","value","target","required","placeholder","marginRight","marginTop","optionIndex","backgroundColor","updateVariationOptionName","optionId","flex","removeVariationOption","valueIndex","updateVariationOptionValue","index","removeVariationOptionValue","_","addVariationOptionValue","addVariationOption","Date","now","width","rows","masterProduct","variationTypes","join","createdAt","toLocaleDateString","confirm","masterProductId","handleDeleteMasterProduct"],"sourceRoot":""}