{"version":3,"file":"static/js/929.a28f787c.chunk.js","mappings":"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","sources":["admin/ProductVariations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = 'https://electro-1-vjdu.onrender.com/api';\r\nconst PRODUCTS_URL = `${API_URL}/admin/products`; // Используем админский endpoint для получения всех товаров\r\nconst GROUPS_URL = `${API_URL}/product-groups`;\r\n\r\nfunction ProductVariations() {\r\n  const [products, setProducts] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingGroup, setEditingGroup] = useState(null);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    baseProductId: '',\r\n    parameters: [],\r\n    variants: []\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(''); // Очищаем предыдущие ошибки\r\n      \r\n      const [productsRes, groupsRes] = await Promise.all([\r\n        fetch(PRODUCTS_URL),\r\n        fetch(GROUPS_URL)\r\n      ]);\r\n\r\n      if (!productsRes.ok) {\r\n        const errorText = await productsRes.text();\r\n        throw new Error(`Ошибка загрузки товаров: ${productsRes.status} - ${errorText}`);\r\n      }\r\n\r\n      if (!groupsRes.ok) {\r\n        const errorText = await groupsRes.text();\r\n        throw new Error(`Ошибка загрузки групп: ${groupsRes.status} - ${errorText}`);\r\n      }\r\n\r\n             const [productsData, groupsData] = await Promise.all([\r\n         productsRes.json(),\r\n         groupsRes.json()\r\n       ]);\r\n\r\n       console.log('Загруженные товары:', productsData);\r\n       console.log('Загруженные группы:', groupsData);\r\n\r\n       setProducts(productsData);\r\n       setGroups(groupsData);\r\n    } catch (err) {\r\n      console.error('Ошибка загрузки данных:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    setEditingGroup(null);\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      baseProductId: '',\r\n      parameters: [],\r\n      variants: []\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleEditGroup = (group) => {\r\n    console.log('Редактируем группу:', group);\r\n    setEditingGroup(group);\r\n    \r\n    // Обрабатываем вариации, чтобы правильно извлечь ID товаров\r\n    const processedVariants = (group.variants || []).map(variant => {\r\n      console.log('Обрабатываем вариацию:', variant);\r\n      \r\n      // Определяем правильный ID товара\r\n      let productId = '';\r\n      if (typeof variant.productId === 'string') {\r\n        productId = variant.productId;\r\n      } else if (variant.productId && variant.productId._id) {\r\n        productId = variant.productId._id;\r\n      } else if (variant.productId && typeof variant.productId === 'object') {\r\n        productId = variant.productId.toString();\r\n      }\r\n      \r\n      console.log('Извлеченный productId:', productId);\r\n      \r\n      return {\r\n        ...variant,\r\n        productId: productId,\r\n        parameters: variant.parameters || {}\r\n      };\r\n    });\r\n    \r\n    // Определяем правильный ID базового товара\r\n    let baseProductId = '';\r\n    if (typeof group.baseProductId === 'string') {\r\n      baseProductId = group.baseProductId;\r\n    } else if (group.baseProductId && group.baseProductId._id) {\r\n      baseProductId = group.baseProductId._id;\r\n    } else if (group.baseProductId && typeof group.baseProductId === 'object') {\r\n      baseProductId = group.baseProductId.toString();\r\n    }\r\n    \r\n    console.log('Извлеченный baseProductId:', baseProductId);\r\n    console.log('Обработанные вариации:', processedVariants);\r\n    \r\n    setFormData({\r\n      name: group.name,\r\n      description: group.description || '',\r\n      baseProductId: baseProductId,\r\n      parameters: group.parameters || [],\r\n      variants: processedVariants\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDeleteGroup = async (groupId) => {\r\n    if (!window.confirm('Вы уверены, что хотите удалить эту группу вариаций?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${GROUPS_URL}/${groupId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка удаления группы');\r\n      }\r\n\r\n      await fetchData();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const addParameter = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: [...prev.parameters, {\r\n        name: '',\r\n        type: 'select',\r\n        values: [''],\r\n        required: false\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeParameter = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateParameter = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === index ? { ...param, [field]: value } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addParameterValue = (paramIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { ...param, values: [...param.values, ''] } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeParameterValue = (paramIndex, valueIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.filter((_, vi) => vi !== valueIndex) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateParameterValue = (paramIndex, valueIndex, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.map((v, vi) => vi === valueIndex ? value : v) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addVariant = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: [...prev.variants, {\r\n        productId: '',\r\n        parameters: {},\r\n        isActive: true\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeVariant = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateVariant = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === index ? { ...variant, [field]: value } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateVariantParameter = (variantIndex, paramName, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === variantIndex ? { \r\n          ...variant, \r\n          parameters: { ...variant.parameters, [paramName]: value }\r\n        } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(''); // Очищаем предыдущие ошибки\r\n      \r\n      // Параметры уже хранятся как обычный объект\r\n      const submitData = {\r\n        ...formData,\r\n        variants: formData.variants.map(variant => ({\r\n          ...variant,\r\n          parameters: variant.parameters || {}\r\n        }))\r\n      };\r\n\r\n      const response = await fetch(\r\n        editingGroup ? `${GROUPS_URL}/${editingGroup._id}` : GROUPS_URL,\r\n        {\r\n          method: editingGroup ? 'PUT' : 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(submitData)\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Ошибка сохранения группы вариаций: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      await fetchData();\r\n      setShowForm(false);\r\n      setEditingGroup(null);\r\n    } catch (err) {\r\n      console.error('Ошибка сохранения:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading && !showForm) {\r\n    return (\r\n      <div className=\"variations-container\">\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Загрузка данных...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"variations-container\">\r\n      {/* Заголовок */}\r\n      <div className=\"variations-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"header-title\">\r\n            <span className=\"icon\">🔄</span>\r\n            Управление вариациями товаров\r\n          </h1>\r\n          <p className=\"header-subtitle\">\r\n            Создавайте группы товаров с различными параметрами и ценами\r\n          </p>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          <button onClick={handleCreateGroup} className=\"create-btn\">\r\n            <span className=\"btn-icon\">+</span>\r\n            Создать группу\r\n          </button>\r\n          <div className=\"admin-nav\">\r\n            <button onClick={() => navigate('/admin/products')} className=\"nav-btn nav-products\">\r\n              📦 Товары\r\n            </button>\r\n            <button onClick={() => navigate('/admin/settings')} className=\"nav-btn nav-settings\">\r\n              ⚙️ Настройки\r\n            </button>\r\n            <button onClick={() => navigate('/admin/analytics')} className=\"nav-btn nav-analytics\">\r\n              📊 Аналитика\r\n            </button>\r\n            <button onClick={() => navigate('/admin/pickup-points')} className=\"nav-btn nav-pickup\">\r\n              🏬 Пункты самовывоза\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Ошибки */}\r\n      {error && (\r\n        <div className=\"error-alert\">\r\n          <span className=\"error-icon\">⚠️</span>\r\n          <span className=\"error-text\">{error}</span>\r\n          <button onClick={() => setError('')} className=\"error-close\">×</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Список групп */}\r\n      <div className=\"groups-section\">\r\n        <h2 className=\"section-title\">Существующие группы вариаций</h2>\r\n        \r\n        {groups.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">📦</div>\r\n            <h3>Группы вариаций не найдены</h3>\r\n            <p>Создайте первую группу вариаций для ваших товаров</p>\r\n            <button onClick={handleCreateGroup} className=\"empty-btn\">\r\n              Создать группу\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"groups-grid\">\r\n            {groups.map(group => (\r\n              <div key={group._id} className=\"group-card\">\r\n                <div className=\"card-header\">\r\n                  <h3 className=\"card-title\">{group.name}</h3>\r\n                  <div className=\"card-actions\">\r\n                    <button \r\n                      onClick={() => handleEditGroup(group)} \r\n                      className=\"action-btn edit-btn\"\r\n                      title=\"Редактировать\"\r\n                    >\r\n                      ✏️\r\n                    </button>\r\n                    <button \r\n                      onClick={() => handleDeleteGroup(group._id)} \r\n                      className=\"action-btn delete-btn\"\r\n                      title=\"Удалить\"\r\n                    >\r\n                      🗑️\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {group.description && (\r\n                  <p className=\"card-description\">{group.description}</p>\r\n                )}\r\n                \r\n                <div className=\"card-content\">\r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Базовый товар:</span>\r\n                    <span className=\"info-value\">{group.baseProductId?.name || 'Не указан'}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Параметры:</span>\r\n                    <div className=\"parameters-list\">\r\n                      {group.parameters.map((param, index) => (\r\n                        <span key={index} className=\"parameter-tag\">\r\n                          {param.name} ({param.type})\r\n                          {param.required && <span className=\"required-mark\">*</span>}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-item\">\r\n                    <span className=\"info-label\">Вариации:</span>\r\n                    <span className=\"variants-count\">{group.variants.length} шт.</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Модальное окно формы */}\r\n      {showForm && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowForm(false)}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h2 className=\"modal-title\">\r\n                {editingGroup ? 'Редактировать группу' : 'Создать группу вариаций'}\r\n              </h2>\r\n              <button onClick={() => setShowForm(false)} className=\"modal-close\">\r\n                <span>×</span>\r\n              </button>\r\n            </div>\r\n\r\n                         <form onSubmit={handleSubmit} className=\"variations-form\">\r\n               {/* Отладочная информация */}\r\n               {process.env.NODE_ENV === 'development' && (\r\n                 <div style={{background: '#f0f0f0', padding: '10px', marginBottom: '20px', fontSize: '12px'}}>\r\n                   <strong>Отладка:</strong><br/>\r\n                   baseProductId: {formData.baseProductId}<br/>\r\n                   variants: {JSON.stringify(formData.variants.map(v => ({productId: v.productId, isActive: v.isActive})))}\r\n                 </div>\r\n               )}\r\n              {/* Основная информация */}\r\n              <div className=\"form-section\">\r\n                <h3 className=\"section-title\">Основная информация</h3>\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">\r\n                      Название группы <span className=\"required\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.name}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                      className=\"form-input\"\r\n                      placeholder=\"Например: Болгарки Tanker TK12501\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Описание</label>\r\n                    <textarea\r\n                      value={formData.description}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                      className=\"form-textarea\"\r\n                      placeholder=\"Краткое описание группы\"\r\n                      rows=\"3\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">\r\n                      Базовый товар <span className=\"required\">*</span>\r\n                    </label>\r\n                    <select\r\n                      value={formData.baseProductId}\r\n                      onChange={(e) => setFormData(prev => ({ ...prev, baseProductId: e.target.value }))}\r\n                      className=\"form-select\"\r\n                      required\r\n                    >\r\n                      <option value=\"\">Выберите товар</option>\r\n                      {products.map(product => (\r\n                        <option key={product._id} value={product._id}>\r\n                          {product.name} (ID: {product._id})\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Параметры */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3 className=\"section-title\">Параметры вариаций</h3>\r\n                  <button type=\"button\" onClick={addParameter} className=\"add-btn\">\r\n                    <span>+</span> Добавить параметр\r\n                  </button>\r\n                </div>\r\n                \r\n                {formData.parameters.map((param, index) => (\r\n                  <div key={index} className=\"parameter-card\">\r\n                    <div className=\"parameter-header\">\r\n                      <div className=\"parameter-inputs\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Название параметра (например: Вольты)\"\r\n                          value={param.name}\r\n                          onChange={(e) => updateParameter(index, 'name', e.target.value)}\r\n                          className=\"form-input\"\r\n                          required\r\n                        />\r\n                        <select\r\n                          value={param.type}\r\n                          onChange={(e) => updateParameter(index, 'type', e.target.value)}\r\n                          className=\"form-select\"\r\n                        >\r\n                          <option value=\"select\">Выпадающий список</option>\r\n                          <option value=\"radio\">Радио кнопки</option>\r\n                          <option value=\"checkbox\">Чекбокс</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"parameter-options\">\r\n                        <label className=\"checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={param.required}\r\n                            onChange={(e) => updateParameter(index, 'required', e.target.checked)}\r\n                          />\r\n                          <span>Обязательный</span>\r\n                        </label>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeParameter(index)}\r\n                          className=\"remove-btn\"\r\n                          title=\"Удалить параметр\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"parameter-values\">\r\n                      <label className=\"form-label\">Возможные значения:</label>\r\n                      <div className=\"values-list\">\r\n                        {param.values.map((value, valueIndex) => (\r\n                          <div key={valueIndex} className=\"value-item\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value={value}\r\n                              onChange={(e) => updateParameterValue(index, valueIndex, e.target.value)}\r\n                              className=\"form-input\"\r\n                              placeholder=\"Значение\"\r\n                            />\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeParameterValue(index, valueIndex)}\r\n                              className=\"remove-btn small\"\r\n                              title=\"Удалить значение\"\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => addParameterValue(index)}\r\n                          className=\"add-value-btn\"\r\n                        >\r\n                          + Добавить значение\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Вариации */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3 className=\"section-title\">Вариации товаров</h3>\r\n                  <button type=\"button\" onClick={addVariant} className=\"add-btn\">\r\n                    <span>+</span> Добавить вариацию\r\n                  </button>\r\n                </div>\r\n                \r\n                {formData.variants.map((variant, index) => (\r\n                  <div key={index} className=\"variant-card\">\r\n                    <div className=\"variant-header\">\r\n                                             <div className=\"variant-inputs\">\r\n                         <select\r\n                           value={variant.productId}\r\n                           onChange={(e) => updateVariant(index, 'productId', e.target.value)}\r\n                           className=\"form-select\"\r\n                           required\r\n                         >\r\n                           <option value=\"\">Выберите товар</option>\r\n                           {products.map(product => (\r\n                             <option key={product._id} value={product._id}>\r\n                               {product.name} - {product.price} ₸ (ID: {product._id})\r\n                             </option>\r\n                           ))}\r\n                         </select>\r\n                       </div>\r\n                      <div className=\"variant-options\">\r\n                        <label className=\"checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={variant.isActive}\r\n                            onChange={(e) => updateVariant(index, 'isActive', e.target.checked)}\r\n                          />\r\n                          <span>Активен</span>\r\n                        </label>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeVariant(index)}\r\n                          className=\"remove-btn\"\r\n                          title=\"Удалить вариацию\"\r\n                        >\r\n                          🗑️\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"variant-parameters\">\r\n                      {formData.parameters.map((param, paramIndex) => (\r\n                        <div key={paramIndex} className=\"variant-param\">\r\n                          <label className=\"form-label\">{param.name}:</label>\r\n                          {param.type === 'select' && (\r\n                            <select\r\n                              value={variant.parameters[param.name] || ''}\r\n                              onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                              className=\"form-select\"\r\n                              required={param.required}\r\n                            >\r\n                              <option value=\"\">Выберите</option>\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <option key={valueIndex} value={value}>\r\n                                  {value}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          )}\r\n                          {param.type === 'radio' && (\r\n                            <div className=\"radio-group\">\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <label key={valueIndex} className=\"radio-label\">\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    name={`${index}-${param.name}`}\r\n                                    value={value}\r\n                                    checked={variant.parameters[param.name] === value}\r\n                                    onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                                    required={param.required}\r\n                                  />\r\n                                  <span className=\"radio-text\">{value}</span>\r\n                                </label>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                          {param.type === 'checkbox' && (\r\n                            <label className=\"checkbox-label\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={variant.parameters[param.name] === 'true'}\r\n                                onChange={(e) => updateVariantParameter(index, param.name, e.target.checked ? 'true' : 'false')}\r\n                              />\r\n                              <span>{param.name}</span>\r\n                            </label>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Кнопки действий */}\r\n              <div className=\"form-actions\">\r\n                <button type=\"button\" onClick={() => setShowForm(false)} className=\"cancel-btn\">\r\n                  Отмена\r\n                </button>\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n                  {loading ? (\r\n                    <>\r\n                      <span className=\"spinner-small\"></span>\r\n                      Сохранение...\r\n                    </>\r\n                  ) : (\r\n                    editingGroup ? 'Обновить группу' : 'Создать группу'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style jsx>{`\r\n        .variations-container {\r\n          min-height: 100vh;\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          padding: 20px;\r\n        }\r\n\r\n        .variations-header {\r\n          background: white;\r\n          border-radius: 16px;\r\n          padding: 32px;\r\n          margin-bottom: 24px;\r\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n\r\n        .header-content {\r\n          flex: 1;\r\n        }\r\n\r\n        .header-title {\r\n          font-size: 28px;\r\n          font-weight: 700;\r\n          color: #2d3748;\r\n          margin: 0 0 8px 0;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n        }\r\n\r\n        .icon {\r\n          font-size: 32px;\r\n        }\r\n\r\n        .header-subtitle {\r\n          color: #718096;\r\n          font-size: 16px;\r\n          margin: 0;\r\n        }\r\n\r\n        .create-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 12px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: all 0.3s ease;\r\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\r\n        }\r\n\r\n        .create-btn:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);\r\n        }\r\n\r\n        .btn-icon {\r\n          font-size: 20px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .error-alert {\r\n          background: #fed7d7;\r\n          border: 1px solid #feb2b2;\r\n          border-radius: 12px;\r\n          padding: 16px;\r\n          margin-bottom: 24px;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n          color: #c53030;\r\n        }\r\n\r\n        .error-icon {\r\n          font-size: 20px;\r\n        }\r\n\r\n        .error-text {\r\n          flex: 1;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .error-close {\r\n          background: none;\r\n          border: none;\r\n          font-size: 20px;\r\n          cursor: pointer;\r\n          color: #c53030;\r\n          padding: 0;\r\n          width: 24px;\r\n          height: 24px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .groups-section {\r\n          background: white;\r\n          border-radius: 16px;\r\n          padding: 32px;\r\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .section-title {\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0 0 24px 0;\r\n        }\r\n\r\n        .empty-state {\r\n          text-align: center;\r\n          padding: 60px 20px;\r\n          color: #718096;\r\n        }\r\n\r\n        .empty-icon {\r\n          font-size: 64px;\r\n          margin-bottom: 16px;\r\n          display: block;\r\n        }\r\n\r\n        .empty-state h3 {\r\n          font-size: 20px;\r\n          font-weight: 600;\r\n          margin: 0 0 8px 0;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .empty-state p {\r\n          margin: 0 0 24px 0;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .empty-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 12px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .groups-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n          gap: 24px;\r\n        }\r\n\r\n        .group-card {\r\n          background: #f7fafc;\r\n          border: 1px solid #e2e8f0;\r\n          border-radius: 12px;\r\n          padding: 24px;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .group-card:hover {\r\n          transform: translateY(-2px);\r\n          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .card-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .card-title {\r\n          font-size: 18px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0;\r\n          flex: 1;\r\n        }\r\n\r\n        .card-actions {\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .action-btn {\r\n          background: none;\r\n          border: none;\r\n          font-size: 16px;\r\n          cursor: pointer;\r\n          padding: 8px;\r\n          border-radius: 8px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .edit-btn:hover {\r\n          background: #ebf8ff;\r\n        }\r\n\r\n        .delete-btn:hover {\r\n          background: #fed7d7;\r\n        }\r\n\r\n        .card-description {\r\n          color: #718096;\r\n          font-size: 14px;\r\n          margin: 0 0 16px 0;\r\n          line-height: 1.5;\r\n        }\r\n\r\n        .card-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 12px;\r\n        }\r\n\r\n        .info-item {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 4px;\r\n        }\r\n\r\n        .info-label {\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          color: #718096;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.5px;\r\n        }\r\n\r\n        .info-value {\r\n          font-size: 14px;\r\n          color: #2d3748;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .parameters-list {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 6px;\r\n        }\r\n\r\n        .parameter-tag {\r\n          background: #e6fffa;\r\n          color: #234e52;\r\n          padding: 4px 8px;\r\n          border-radius: 6px;\r\n          font-size: 12px;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .required-mark {\r\n          color: #e53e3e;\r\n          margin-left: 2px;\r\n        }\r\n\r\n        .variants-count {\r\n          font-size: 14px;\r\n          color: #2d3748;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background: rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 1000;\r\n          padding: 20px;\r\n        }\r\n\r\n        .modal-content {\r\n          background: white;\r\n          border-radius: 16px;\r\n          max-width: 900px;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n          width: 100%;\r\n          box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n        }\r\n\r\n        .modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          padding: 24px 32px;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .modal-title {\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          color: #2d3748;\r\n          margin: 0;\r\n        }\r\n\r\n        .modal-close {\r\n          background: none;\r\n          border: none;\r\n          font-size: 24px;\r\n          cursor: pointer;\r\n          color: #718096;\r\n          padding: 8px;\r\n          border-radius: 8px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .modal-close:hover {\r\n          background: #f7fafc;\r\n          color: #2d3748;\r\n        }\r\n\r\n        .variations-form {\r\n          padding: 32px;\r\n        }\r\n\r\n        .form-section {\r\n          margin-bottom: 32px;\r\n        }\r\n\r\n        .section-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .add-btn {\r\n          background: #48bb78;\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .add-btn:hover {\r\n          background: #38a169;\r\n        }\r\n\r\n        .form-grid {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr;\r\n          gap: 20px;\r\n        }\r\n\r\n        .form-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .form-label {\r\n          font-size: 14px;\r\n          font-weight: 600;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .required {\r\n          color: #e53e3e;\r\n        }\r\n\r\n        .form-input,\r\n        .form-select,\r\n        .form-textarea {\r\n          padding: 12px 16px;\r\n          border: 2px solid #e2e8f0;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          transition: all 0.2s ease;\r\n          background: white;\r\n        }\r\n\r\n        .form-input:focus,\r\n        .form-select:focus,\r\n        .form-textarea:focus {\r\n          outline: none;\r\n          border-color: #667eea;\r\n          box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n        }\r\n\r\n        .form-textarea {\r\n          resize: vertical;\r\n          min-height: 80px;\r\n        }\r\n\r\n        .parameter-card,\r\n        .variant-card {\r\n          background: #f7fafc;\r\n          border: 1px solid #e2e8f0;\r\n          border-radius: 12px;\r\n          padding: 20px;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .parameter-header,\r\n        .variant-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n          margin-bottom: 16px;\r\n          gap: 16px;\r\n        }\r\n\r\n        .parameter-inputs,\r\n        .variant-inputs {\r\n          display: flex;\r\n          gap: 12px;\r\n          flex: 1;\r\n        }\r\n\r\n        .parameter-inputs .form-input {\r\n          flex: 2;\r\n        }\r\n\r\n        .parameter-inputs .form-select {\r\n          flex: 1;\r\n        }\r\n\r\n        .variant-inputs .form-select {\r\n          flex: 2;\r\n        }\r\n\r\n        .variant-inputs .form-input {\r\n          flex: 1;\r\n        }\r\n\r\n        .parameter-options,\r\n        .variant-options {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 12px;\r\n        }\r\n\r\n        .checkbox-label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          font-size: 14px;\r\n          color: #4a5568;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .checkbox-label input[type=\"checkbox\"] {\r\n          width: 16px;\r\n          height: 16px;\r\n          accent-color: #667eea;\r\n        }\r\n\r\n        .remove-btn {\r\n          background: #fed7d7;\r\n          color: #c53030;\r\n          border: none;\r\n          padding: 8px;\r\n          border-radius: 6px;\r\n          cursor: pointer;\r\n          font-size: 14px;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .remove-btn:hover {\r\n          background: #feb2b2;\r\n        }\r\n\r\n        .remove-btn.small {\r\n          padding: 4px 8px;\r\n          font-size: 12px;\r\n        }\r\n\r\n        .parameter-values {\r\n          margin-top: 16px;\r\n        }\r\n\r\n        .values-list {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n          margin-top: 8px;\r\n        }\r\n\r\n        .value-item {\r\n          display: flex;\r\n          gap: 8px;\r\n          align-items: center;\r\n        }\r\n\r\n        .value-item .form-input {\r\n          flex: 1;\r\n        }\r\n\r\n        .add-value-btn {\r\n          background: #ebf8ff;\r\n          color: #2b6cb0;\r\n          border: 1px dashed #90cdf4;\r\n          padding: 8px 16px;\r\n          border-radius: 8px;\r\n          font-size: 14px;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n          text-align: center;\r\n        }\r\n\r\n        .add-value-btn:hover {\r\n          background: #bee3f8;\r\n          border-color: #63b3ed;\r\n        }\r\n\r\n        .variant-parameters {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n          gap: 16px;\r\n          margin-top: 16px;\r\n        }\r\n\r\n        .variant-param {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .radio-group {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 8px;\r\n        }\r\n\r\n        .radio-label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .radio-label input[type=\"radio\"] {\r\n          accent-color: #667eea;\r\n        }\r\n\r\n        .radio-text {\r\n          font-size: 14px;\r\n          color: #4a5568;\r\n        }\r\n\r\n        .form-actions {\r\n          display: flex;\r\n          justify-content: flex-end;\r\n          gap: 16px;\r\n          margin-top: 32px;\r\n          padding-top: 24px;\r\n          border-top: 1px solid #e2e8f0;\r\n        }\r\n\r\n        .cancel-btn {\r\n          background: #e2e8f0;\r\n          color: #4a5568;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 8px;\r\n          font-size: 16px;\r\n          font-weight: 500;\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .cancel-btn:hover {\r\n          background: #cbd5e0;\r\n        }\r\n\r\n        .submit-btn {\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 8px;\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .submit-btn:hover:not(:disabled) {\r\n          transform: translateY(-1px);\r\n          box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\r\n        }\r\n\r\n        .submit-btn:disabled {\r\n          opacity: 0.6;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        .loading-spinner {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n          height: 200px;\r\n          color: white;\r\n        }\r\n\r\n        .spinner {\r\n          width: 40px;\r\n          height: 40px;\r\n          border: 4px solid rgba(255, 255, 255, 0.3);\r\n          border-top: 4px solid white;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        .spinner-small {\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid rgba(255, 255, 255, 0.3);\r\n          border-top: 2px solid white;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n        }\r\n\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .variations-container {\r\n            padding: 16px;\r\n          }\r\n\r\n          .variations-header {\r\n            flex-direction: column;\r\n            gap: 20px;\r\n            text-align: center;\r\n          }\r\n\r\n          .form-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .parameter-inputs,\r\n          .variant-inputs {\r\n            flex-direction: column;\r\n          }\r\n\r\n          .parameter-options,\r\n          .variant-options {\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n          }\r\n\r\n          .variant-parameters {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .groups-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .modal-content {\r\n            margin: 20px;\r\n            max-height: calc(100vh - 40px);\r\n          }\r\n\r\n          .variations-form {\r\n            padding: 20px;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductVariations;\r\n"],"names":["API_URL","PRODUCTS_URL","concat","GROUPS_URL","products","setProducts","useState","groups","setGroups","loading","setLoading","error","setError","showForm","setShowForm","editingGroup","setEditingGroup","selectedProducts","setSelectedProducts","formData","setFormData","name","description","baseProductId","parameters","variants","navigate","useNavigate","useEffect","fetchData","async","productsRes","groupsRes","Promise","all","fetch","ok","errorText","text","Error","status","productsData","groupsData","json","console","log","err","message","handleCreateGroup","updateParameter","index","field","value","prev","_objectSpread","map","param","i","updateVariant","variant","updateVariantParameter","variantIndex","paramName","_jsx","className","children","_jsxs","onClick","length","group","_group$baseProductId","processedVariants","productId","_id","toString","handleEditGroup","title","window","confirm","groupId","method","handleDeleteGroup","type","required","e","stopPropagation","onSubmit","preventDefault","submitData","response","headers","body","JSON","stringify","process","onChange","target","placeholder","rows","product","addParameter","values","checked","filter","_","removeParameter","valueIndex","updateParameterValue","paramIndex","v","vi","removeParameterValue","addParameterValue","addVariant","isActive","price","removeVariant","disabled","_Fragment","jsx"],"sourceRoot":""}