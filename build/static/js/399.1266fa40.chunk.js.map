{"version":3,"file":"static/js/399.1266fa40.chunk.js","mappings":"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","sources":["utils/price.js","utils/cache.js","components/RentalConsentModal.js","pages/Rental.js","components/Modal.js","utils/telegram.js"],"sourcesContent":["// Utilities for parsing and formatting prices consistently across the app\r\n\r\n/**\r\n * Normalize price values that might be stored as:\r\n * - number (e.g., 12500)\r\n * - string with thousand separators using dots (e.g., '19.000', '12.500')\r\n * - string with spaces (e.g., '19 000')\r\n * - string with decimal representing thousands (e.g., '12.5' meaning 12 500)\r\n * Returns a positive integer amount of tenge\r\n */\r\nexport function normalizePriceToNumber(rawPrice) {\r\n  if (rawPrice == null) return 0;\r\n\r\n  // Already a number\r\n  if (typeof rawPrice === 'number') {\r\n    const value = rawPrice;\r\n    if (value < 1000 && String(value).includes('.')) {\r\n      // Treat decimals as thousands (e.g., 12.5 => 12500)\r\n      return Math.round(value * 1000);\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n  // Convert to string and trim\r\n  let valueStr = String(rawPrice).trim();\r\n\r\n  // Remove spaces and NBSP\r\n  valueStr = valueStr.replace(/\\s|\\u00A0/g, '');\r\n\r\n  // If it matches groups separated by '.' (e.g., 12.500 or 19.000), remove all dots\r\n  if (/^\\d{1,3}(\\.\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/\\./g, ''), 10);\r\n  }\r\n\r\n  // If it matches groups separated by ',' (unlikely, but safe), remove commas\r\n  if (/^\\d{1,3}(,\\d{3})+$/.test(valueStr)) {\r\n    return parseInt(valueStr.replace(/,/g, ''), 10);\r\n  }\r\n\r\n  // If it's plain digits\r\n  if (/^\\d+$/.test(valueStr)) {\r\n    return parseInt(valueStr, 10);\r\n  }\r\n\r\n  // If it's a decimal with a dot or comma (e.g., '12.5' or '12,5')\r\n  if (/^\\d+[.,]\\d+$/.test(valueStr)) {\r\n    // Unify decimal separator to '.'\r\n    const normalized = parseFloat(valueStr.replace(',', '.'));\r\n    if (normalized < 1000) {\r\n      // Treat as thousands\r\n      return Math.round(normalized * 1000);\r\n    }\r\n    return Math.round(normalized);\r\n  }\r\n\r\n  // Fallback: strip non-digits and parse\r\n  const digits = valueStr.replace(/\\D/g, '');\r\n  return digits ? parseInt(digits, 10) : 0;\r\n}\r\n\r\n/**\r\n * Format raw price into a human-readable tenge string with thousands separators\r\n */\r\nexport function formatTenge(rawPrice) {\r\n  const amount = normalizePriceToNumber(rawPrice);\r\n  return amount.toLocaleString('ru-RU');\r\n}\r\n\r\n\r\n","// Утилита для кэширования API запросов\r\nclass ApiCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.defaultTTL = 5 * 60 * 1000; // 5 минут по умолчанию\r\n  }\r\n\r\n  // Получить данные из кэша\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    // Проверяем, не истек ли срок действия\r\n    if (Date.now() > item.expiry) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  // Сохранить данные в кэш\r\n  set(key, data, ttl = this.defaultTTL) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expiry: Date.now() + ttl\r\n    });\r\n  }\r\n\r\n  // Очистить кэш\r\n  clear() {\r\n    this.cache.clear();\r\n  }\r\n\r\n  // Удалить конкретный ключ\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  // Получить размер кэша\r\n  size() {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// Создаем глобальный экземпляр кэша\r\nexport const apiCache = new ApiCache();\r\n\r\n// Функция для кэшированного fetch\r\nexport const fetchWithCache = async (url, options = {}, ttl = 5 * 60 * 1000) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  \r\n  // Пытаемся получить данные из кэша\r\n  const cachedData = apiCache.get(cacheKey);\r\n  if (cachedData) {\r\n    console.log('📦 Данные загружены из кэша:', url);\r\n    return cachedData;\r\n  }\r\n\r\n  // Если в кэше нет, делаем запрос\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Сохраняем в кэш\r\n    apiCache.set(cacheKey, data, ttl);\r\n    console.log('💾 Данные сохранены в кэш:', url);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('❌ Ошибка загрузки:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Функция для принудительного обновления кэша\r\nexport const refreshCache = (url, options = {}) => {\r\n  const cacheKey = `${url}_${JSON.stringify(options)}`;\r\n  apiCache.delete(cacheKey);\r\n  console.log('🔄 Кэш обновлен для:', url);\r\n};\r\n","import React, { useState } from 'react';\r\nimport '../styles/Modal.css';\r\n\r\nconst RentalConsentModal = ({ isOpen, onClose, onAccept }) => {\r\n  const [showTerms, setShowTerms] = useState(false);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const rentalTerms = `Условия аренды электроинструмента\r\n\r\n1. Общие положения\r\n• Аренда предоставляется на срок от 1 суток\r\n• Для оформления аренды требуется документ, удостоверяющий личность\r\n• Вносится залог в размере стоимости инструмента\r\n\r\n2. Ответственность арендатора\r\n• Арендатор несет полную ответственность за сохранность инструмента\r\n• В случае повреждения или утери - полное возмещение стоимости\r\n• Запрещена передача инструмента третьим лицам\r\n\r\n3. Возврат инструмента\r\n• Инструмент возвращается в чистом, рабочем состоянии\r\n• При просрочке взимается штраф 50% от суточной стоимости за каждый день\r\n• Залог возвращается после проверки инструмента\r\n\r\n4. Контактная информация\r\nПо всем вопросам: +7 707 617 73 85`;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()} style={{ maxWidth: showTerms ? '600px' : '500px' }}>\r\n        <div className=\"modal-header\">\r\n          <h3>{showTerms ? 'Условия аренды' : 'Подтверждение аренды'}</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"modal-body\" style={{padding: '20px', textAlign: showTerms ? 'left' : 'center'}}>\r\n          {!showTerms ? (\r\n            <>\r\n              <p style={{fontSize: '1.1rem', color: '#222', marginBottom: '20px', lineHeight: '1.6'}}>\r\n                Если вы берете в аренду, соглашаетесь с{' '}\r\n                <span \r\n                  onClick={() => setShowTerms(true)}\r\n                  style={{\r\n                    color: '#1e88e5',\r\n                    textDecoration: 'underline',\r\n                    cursor: 'pointer',\r\n                    fontWeight: '600'\r\n                  }}\r\n                >\r\n                  условиями пользования\r\n                </span>\r\n              </p>\r\n              <button \r\n                onClick={onAccept}\r\n                className=\"btn-submit\"\r\n                style={{\r\n                  background: '#FF6B00',\r\n                  color: '#fff',\r\n                  border: 'none',\r\n                  padding: '12px 40px',\r\n                  fontSize: '1rem',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer',\r\n                  fontWeight: '600'\r\n                }}\r\n              >\r\n                Ознакомлен\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div style={{\r\n                fontSize: '0.95rem',\r\n                color: '#333',\r\n                lineHeight: '1.8',\r\n                whiteSpace: 'pre-line',\r\n                maxHeight: '400px',\r\n                overflowY: 'auto',\r\n                padding: '10px',\r\n                background: '#f8f9fa',\r\n                borderRadius: '8px',\r\n                marginBottom: '20px'\r\n              }}>\r\n                {rentalTerms}\r\n              </div>\r\n              <button \r\n                onClick={() => setShowTerms(false)}\r\n                className=\"btn-submit\"\r\n                style={{\r\n                  background: '#1e88e5',\r\n                  color: '#fff',\r\n                  border: 'none',\r\n                  padding: '12px 40px',\r\n                  fontSize: '1rem',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer',\r\n                  fontWeight: '600',\r\n                  width: '100%'\r\n                }}\r\n              >\r\n                Ознакомлен\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RentalConsentModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { formatTenge } from '../utils/price';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport RentalConsentModal from '../components/RentalConsentModal';\r\nimport Modal from '../components/Modal';\r\nimport { trackPageView } from '../utils/analytics';\r\nimport { fetchWithCache } from '../utils/cache';\r\nimport '../styles/Catalog.css';\r\nimport '../styles/Rental.css';\r\n\r\nconst Rental = () => {\r\n  const { category } = useParams();\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(24);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\r\n  const [isConsentModalOpen, setIsConsentModalOpen] = useState(false);\r\n  const [isContactModalOpen, setIsContactModalOpen] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const getOptimalImage = (product, preferredSize = 'medium') => {\r\n    if (product.productGroup && product.productGroup.coverImage) {\r\n      return product.productGroup.coverImage;\r\n    }\r\n    if (product.imageVariants && product.imageVariants[preferredSize]) {\r\n      return product.imageVariants[preferredSize];\r\n    }\r\n    if (product.imageVariants && product.imageVariants.webp) {\r\n      return product.imageVariants.webp;\r\n    }\r\n    return product.image || '/images/products/placeholder.png';\r\n  };\r\n\r\n  const categoryToId = (categoryName) => {\r\n    const categoryMap = {\r\n      'дрели': 'drills',\r\n      'болгарки': 'bolgarki',\r\n      'шуруповёрты': 'screwdrivers',\r\n      'перфораторы': 'hammers',\r\n      'лобзики': 'jigsaws',\r\n      'лазерные уровни': 'levels',\r\n      'генераторы': 'generators',\r\n      'насосы': 'nasosy',\r\n      'измерители': 'measuring',\r\n    };\r\n    const normalizedName = categoryName.toLowerCase().trim().replace(/\\\\s+/g, ' ');\r\n    return categoryMap[normalizedName] || normalizedName.replace(/[^a-z0-9]/g, '-');\r\n  };\r\n\r\n  const idToCategory = (categoryId) => {\r\n    const idMap = {\r\n      'drills': 'Дрели',\r\n      'bolgarki': 'Болгарки',\r\n      'screwdrivers': 'Шуруповёрты',\r\n      'hammers': 'Перфораторы',\r\n      'jigsaws': 'Лобзики',\r\n      'levels': 'Лазерные уровни',\r\n      'generators': 'Генераторы',\r\n      'nasosy': 'Насосы',\r\n      'measuring': 'Измерители',\r\n    };\r\n    if (idMap[categoryId]) {\r\n      return idMap[categoryId];\r\n    }\r\n    const foundCategory = categories.find(cat => cat.id === categoryId);\r\n    if (foundCategory) {\r\n      return foundCategory.name;\r\n    }\r\n    return categoryId;\r\n  };\r\n\r\n  const staticCategories = [\r\n    { id: 'drills', name: 'Дрели' },\r\n    { id: 'bolgarki', name: 'Болгарки' },\r\n    { id: 'screwdrivers', name: 'Шуруповёрты' },\r\n    { id: 'hammers', name: 'Перфораторы' },\r\n    { id: 'jigsaws', name: 'Лобзики' },\r\n    { id: 'levels', name: 'Лазерные уровни' },\r\n    { id: 'generators', name: 'Генераторы' },\r\n    { id: 'nasosy', name: 'Насосы' },\r\n    { id: 'measuring', name: 'Измерители' },\r\n  ];\r\n\r\n  const API_URL = 'https://electro-1-vjdu.onrender.com/api/products';\r\n\r\n  const filteredProducts = category \r\n    ? products.filter(product => {\r\n        // Фильтруем только товары, доступные для аренды\r\n        if (!product.rentalAvailable) return false;\r\n        \r\n        if (product.categorySlug) {\r\n          return product.categorySlug === category;\r\n        }\r\n        if (!product.category) return false;\r\n        const productCategoryId = categoryToId(product.category.trim());\r\n        return productCategoryId === category;\r\n      })\r\n    : products.filter(product => product.rentalAvailable);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    fetchWithCache(API_URL, {}, 10 * 60 * 1000)\r\n      .then(data => {\r\n        setProducts(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError('Ошибка загрузки товаров');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    trackPageView('rental');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      setCategoriesLoading(true);\r\n      const categoryMap = new Map();\r\n      \r\n      // Фильтруем только товары, доступные для аренды\r\n      const rentalProducts = products.filter(p => p.rentalAvailable);\r\n      \r\n      rentalProducts.forEach(product => {\r\n        if (product.categorySlug && product.category) {\r\n          const categorySlug = product.categorySlug.trim();\r\n          const originalCategory = product.category.trim();\r\n          if (!categoryMap.has(categorySlug)) {\r\n            categoryMap.set(categorySlug, originalCategory);\r\n          }\r\n        }\r\n      });\r\n      \r\n      const uniqueCategories = Array.from(categoryMap.entries()).map(([slug, name]) => ({\r\n        id: slug,\r\n        name: name\r\n      })).sort((a, b) => a.name.localeCompare(b.name, 'ru'));\r\n      \r\n      if (uniqueCategories.length > 0) {\r\n        setCategories(uniqueCategories);\r\n      } else {\r\n        // Если нет категорий с арендой, показываем пустой список\r\n        setCategories([]);\r\n      }\r\n      setCategoriesLoading(false);\r\n    }\r\n  }, [products]);\r\n\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\r\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [category]);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const getProductDisplayName = (product) => {\r\n    if (product.productGroup && product.productGroup.name) {\r\n      return product.productGroup.name;\r\n    }\r\n    if (product.category) {\r\n      return product.category;\r\n    }\r\n    return product.name;\r\n  };\r\n\r\n  const getCategoryDisplayName = () => {\r\n    const foundCategory = categories.find(cat => cat.id === category);\r\n    if (foundCategory) {\r\n      return foundCategory.name;\r\n    }\r\n    return idToCategory(category);\r\n  };\r\n\r\n  const handleRentClick = (e, product) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setSelectedProduct(product);\r\n    setIsConsentModalOpen(true);\r\n  };\r\n\r\n  const handleConsentAccept = () => {\r\n    setIsConsentModalOpen(false);\r\n    setIsContactModalOpen(true);\r\n  };\r\n\r\n  const handleContactModalClose = () => {\r\n    setIsContactModalOpen(false);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  const handleContactModalSubmit = (formData) => {\r\n    console.log('Rental request:', formData, selectedProduct);\r\n  };\r\n\r\n  return (\r\n    <div className=\"catalog rental-page\">\r\n      <Header />\r\n      <main className=\"catalog-main\">\r\n        <div className=\"container catalog-layout\">\r\n          <aside className=\"catalog-sidebar desktop-sidebar\">\r\n            <h3 className=\"sidebar-title\">Категории</h3>\r\n            {categoriesLoading ? (\r\n              <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\r\n                Загрузка категорий...\r\n              </div>\r\n            ) : (\r\n              <ul className=\"sidebar-categories\">\r\n                {categories.map(cat => (\r\n                  <li key={cat.id}>\r\n                    <Link\r\n                      to={`/rental/${cat.id}`}\r\n                      className={category === cat.id ? 'active' : ''}\r\n                    >\r\n                      {cat.name}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </aside>\r\n          \r\n          <div className=\"catalog-content\">\r\n            <h1 className=\"catalog-title\">\r\n              {category ? getCategoryDisplayName() : 'Аренда инструмента'}\r\n            </h1>\r\n            \r\n            {loading ? (\r\n              <div style={{ textAlign: 'center', padding: '40px', fontSize: '1.1rem', color: '#666' }}>\r\n                Загрузка товаров...\r\n              </div>\r\n            ) : error ? (\r\n              <div style={{ textAlign: 'center', padding: '40px', fontSize: '1.1rem', color: '#e74c3c' }}>\r\n                {error}\r\n              </div>\r\n            ) : currentProducts.length === 0 ? (\r\n              <div style={{ textAlign: 'center', padding: '40px', fontSize: '1.1rem', color: '#666' }}>\r\n                В данной категории пока нет товаров\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"catalog-products-grid\">\r\n                  {currentProducts.map(product => (\r\n                    <div key={product._id} className=\"product-card rental-card\">\r\n                      <Link to={`/product/${product._id}`} className=\"product-link\">\r\n                        <div className=\"product-image\">\r\n                          <picture>\r\n                            <source\r\n                              srcSet={getOptimalImage(product, 'medium')}\r\n                              type=\"image/webp\"\r\n                            />\r\n                            <img\r\n                              src={getOptimalImage(product, 'medium')}\r\n                              alt={getProductDisplayName(product)}\r\n                              loading=\"lazy\"\r\n                            />\r\n                          </picture>\r\n                        </div>\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{getProductDisplayName(product)}</div>\r\n                        </div>\r\n                      </Link>\r\n                      <div className=\"rental-footer\">\r\n                        <div className=\"product-price\">\r\n                          {product.rentalPrice ? formatTenge(product.rentalPrice) + ' ₸/сутки' : 'Цена по запросу'}\r\n                        </div>\r\n                        <span className=\"rental-divider\"></span>\r\n                        <button \r\n                          className=\"rental-btn\"\r\n                          onClick={(e) => handleRentClick(e, product)}\r\n                        >\r\n                          Арендовать\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {totalPages > 1 && (\r\n                  <div className=\"pagination\">\r\n                    <button\r\n                      onClick={() => handlePageChange(currentPage - 1)}\r\n                      disabled={currentPage === 1}\r\n                      className=\"pagination-arrow\"\r\n                    >\r\n                      ←\r\n                    </button>\r\n                    \r\n                    {Array.from({ length: totalPages }, (_, i) => i + 1).map(pageNum => {\r\n                      if (\r\n                        pageNum === 1 ||\r\n                        pageNum === totalPages ||\r\n                        (pageNum >= currentPage - 1 && pageNum <= currentPage + 1)\r\n                      ) {\r\n                        return (\r\n                          <button\r\n                            key={pageNum}\r\n                            onClick={() => handlePageChange(pageNum)}\r\n                            className={`pagination-btn ${currentPage === pageNum ? 'active' : ''}`}\r\n                          >\r\n                            {pageNum}\r\n                          </button>\r\n                        );\r\n                      } else if (\r\n                        pageNum === currentPage - 2 ||\r\n                        pageNum === currentPage + 2\r\n                      ) {\r\n                        return (\r\n                          <span key={pageNum} style={{ padding: '0 4px', color: '#999' }}>\r\n                            ...\r\n                          </span>\r\n                        );\r\n                      }\r\n                      return null;\r\n                    })}\r\n                    \r\n                    <button\r\n                      onClick={() => handlePageChange(currentPage + 1)}\r\n                      disabled={currentPage === totalPages}\r\n                      className=\"pagination-arrow\"\r\n                    >\r\n                      →\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n      \r\n      <RentalConsentModal\r\n        isOpen={isConsentModalOpen}\r\n        onClose={() => setIsConsentModalOpen(false)}\r\n        onAccept={handleConsentAccept}\r\n      />\r\n      \r\n      <Modal\r\n        isOpen={isContactModalOpen}\r\n        onClose={handleContactModalClose}\r\n        onSubmit={handleContactModalSubmit}\r\n        product={selectedProduct ? { id: selectedProduct._id, name: getProductDisplayName(selectedProduct) } : null}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rental;\r\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { validateForm, sendToTelegram } from '../utils/telegram';\nimport { trackFormSubmit } from '../utils/analytics';\nimport '../styles/Modal.css';\n\nconst Modal = ({ isOpen, onClose, onSubmit, product = null }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Очищаем ошибку при вводе\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: ''\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Валидация формы\n    const validation = validateForm(formData);\n    if (!validation.isValid) {\n      setErrors(validation.errors);\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Отправка в Telegram\n      const result = await sendToTelegram(formData, product);\n      \n      if (result.success) {\n        // Отслеживаем успешную отправку формы\n        trackFormSubmit('contact_form', product?.id || null);\n        onSubmit(formData);\n        setFormData({ name: '', phone: '', message: '' });\n        setErrors({});\n        onClose();\n        navigate('/thanks');\n      } else {\n        alert('Ошибка отправки заявки. Попробуйте позже.');\n      }\n    } catch (error) {\n      console.error('Ошибка отправки:', error);\n      alert('Ошибка отправки заявки. Попробуйте позже.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h3>Оставить заявку</h3>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"modal-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Имя *</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className={errors.name ? 'error' : ''}\n            />\n            {errors.name && <span className=\"error-message\">{errors.name}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Телефон *</label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              value={formData.phone}\n              onChange={handleChange}\n              className={errors.phone ? 'error' : ''}\n              placeholder=\"+7 (777) 777-77-77\"\n            />\n            {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Сообщение</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              rows=\"4\"\n              placeholder=\"Опишите ваш запрос...\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn-submit\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Отправка...' : 'Отправить'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal; ","// Утилита для отправки форм в Telegram\n\nexport const sendToTelegram = async (formData, product = null) => {\n  try {\n    // Определяем базовый URL API (локально шлём на порт сервера)\n    // Всегда шлём на прод-сервер (Render), чтобы избежать 404 от CRA dev-сервера\n    const API_BASE = 'https://electro-1-vjdu.onrender.com';\n\n    // Отправляем данные на наш API endpoint\n    const response = await fetch(`${API_BASE}/api/send-telegram`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        phone: formData.phone,\n        message: formData.message,\n        product: product\n      })\n    });\n    \n    const result = await response.json();\n    \n    if (result.success) {\n      return { success: true, message: 'Заявка успешно отправлена!' };\n    } else {\n      console.error('Ошибка API:', result.error);\n      return { success: false, message: result.error || 'Ошибка отправки заявки' };\n    }\n    \n  } catch (error) {\n    console.error('Ошибка отправки в Telegram:', error);\n    return { success: false, message: 'Ошибка отправки заявки' };\n  }\n};\n\n// Функция для валидации формы\nexport const validateForm = (formData) => {\n  const errors = {};\n  \n  if (!formData.name.trim()) {\n    errors.name = 'Имя обязательно для заполнения';\n  }\n  \n  if (!formData.phone.trim()) {\n    errors.phone = 'Телефон обязателен для заполнения';\n  } else if (!/^[+]?[0-9\\s\\-()]{10,}$/.test(formData.phone)) {\n    errors.phone = 'Введите корректный номер телефона';\n  }\n  \n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n}; "],"names":["formatTenge","rawPrice","amount","value","String","includes","Math","round","valueStr","trim","replace","test","parseInt","normalized","parseFloat","digits","normalizePriceToNumber","toLocaleString","apiCache","constructor","this","cache","Map","defaultTTL","get","key","item","Date","now","expiry","delete","data","set","ttl","arguments","length","undefined","clear","size","fetchWithCache","async","url","options","cacheKey","concat","JSON","stringify","cachedData","console","log","response","fetch","ok","Error","status","json","error","_ref","isOpen","onClose","onAccept","showTerms","setShowTerms","useState","_jsx","className","onClick","children","_jsxs","e","stopPropagation","style","maxWidth","padding","textAlign","_Fragment","fontSize","color","lineHeight","whiteSpace","maxHeight","overflowY","background","borderRadius","marginBottom","border","cursor","fontWeight","width","textDecoration","Rental","category","useParams","products","setProducts","loading","setLoading","setError","currentPage","setCurrentPage","productsPerPage","categories","setCategories","categoriesLoading","setCategoriesLoading","isConsentModalOpen","setIsConsentModalOpen","isContactModalOpen","setIsContactModalOpen","selectedProduct","setSelectedProduct","getOptimalImage","product","preferredSize","productGroup","coverImage","imageVariants","webp","image","filteredProducts","filter","rentalAvailable","categorySlug","categoryName","normalizedName","toLowerCase","categoryToId","useEffect","then","catch","err","trackPageView","categoryMap","p","forEach","originalCategory","has","uniqueCategories","Array","from","entries","map","slug","name","id","sort","a","b","localeCompare","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","ceil","handlePageChange","pageNumber","window","scrollTo","top","behavior","getProductDisplayName","Header","cat","Link","to","getCategoryDisplayName","foundCategory","find","categoryId","idMap","idToCategory","_id","srcSet","type","src","alt","rentalPrice","handleRentClick","preventDefault","disabled","_","i","pageNum","Footer","RentalConsentModal","handleConsentAccept","Modal","handleContactModalClose","onSubmit","formData","navigate","useNavigate","setFormData","phone","message","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","target","_objectSpread","validation","isValid","Object","keys","validateForm","result","API_BASE","method","headers","body","success","sendToTelegram","trackFormSubmit","alert","htmlFor","onChange","placeholder","rows"],"sourceRoot":""}