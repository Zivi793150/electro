{"version":3,"file":"static/js/929.103392ba.chunk.js","mappings":"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","sources":["admin/ProductVariations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = 'https://electro-a8bl.onrender.com/api';\r\nconst PRODUCTS_URL = `${API_URL}/products`;\r\nconst GROUPS_URL = `${API_URL}/product-groups`;\r\n\r\nfunction ProductVariations() {\r\n  const [products, setProducts] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingGroup, setEditingGroup] = useState(null);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    baseProductId: '',\r\n    parameters: [],\r\n    variants: []\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [productsRes, groupsRes] = await Promise.all([\r\n        fetch(PRODUCTS_URL),\r\n        fetch(GROUPS_URL)\r\n      ]);\r\n\r\n      if (!productsRes.ok || !groupsRes.ok) {\r\n        throw new Error('Ошибка загрузки данных');\r\n      }\r\n\r\n      const [productsData, groupsData] = await Promise.all([\r\n        productsRes.json(),\r\n        groupsRes.json()\r\n      ]);\r\n\r\n      setProducts(productsData);\r\n      setGroups(groupsData);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    setEditingGroup(null);\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      baseProductId: '',\r\n      parameters: [],\r\n      variants: []\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleEditGroup = (group) => {\r\n    setEditingGroup(group);\r\n    setFormData({\r\n      name: group.name,\r\n      description: group.description || '',\r\n      baseProductId: group.baseProductId?._id || '',\r\n      parameters: group.parameters || [],\r\n      variants: group.variants || []\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDeleteGroup = async (groupId) => {\r\n    if (!window.confirm('Вы уверены, что хотите удалить эту группу вариаций?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${GROUPS_URL}/${groupId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка удаления группы');\r\n      }\r\n\r\n      await fetchData();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const addParameter = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: [...prev.parameters, {\r\n        name: '',\r\n        type: 'select',\r\n        values: [''],\r\n        required: false\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeParameter = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateParameter = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === index ? { ...param, [field]: value } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addParameterValue = (paramIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { ...param, values: [...param.values, ''] } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeParameterValue = (paramIndex, valueIndex) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.filter((_, vi) => vi !== valueIndex) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateParameterValue = (paramIndex, valueIndex, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      parameters: prev.parameters.map((param, i) => \r\n        i === paramIndex ? { \r\n          ...param, \r\n          values: param.values.map((v, vi) => vi === valueIndex ? value : v) \r\n        } : param\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addVariant = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: [...prev.variants, {\r\n        productId: '',\r\n        parameters: new Map(),\r\n        price: '',\r\n        isActive: true\r\n      }]\r\n    }));\r\n  };\r\n\r\n  const removeVariant = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const updateVariant = (index, field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === index ? { ...variant, [field]: value } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateVariantParameter = (variantIndex, paramName, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants: prev.variants.map((variant, i) => \r\n        i === variantIndex ? { \r\n          ...variant, \r\n          parameters: new Map(variant.parameters).set(paramName, value) \r\n        } : variant\r\n      )\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Преобразуем Map в обычный объект для отправки\r\n      const submitData = {\r\n        ...formData,\r\n        variants: formData.variants.map(variant => ({\r\n          ...variant,\r\n          parameters: Object.fromEntries(variant.parameters)\r\n        }))\r\n      };\r\n\r\n      const response = await fetch(\r\n        editingGroup ? `${GROUPS_URL}/${editingGroup._id}` : GROUPS_URL,\r\n        {\r\n          method: editingGroup ? 'PUT' : 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(submitData)\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка сохранения группы вариаций');\r\n      }\r\n\r\n      await fetchData();\r\n      setShowForm(false);\r\n      setEditingGroup(null);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading && !showForm) {\r\n    return <div className=\"loading\">Загрузка...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-variations\">\r\n      <div className=\"header\">\r\n        <h1>Управление вариациями товаров</h1>\r\n        <button onClick={handleCreateGroup} className=\"btn-primary\">\r\n          Создать группу вариаций\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      {showForm && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h2>{editingGroup ? 'Редактировать группу' : 'Создать группу вариаций'}</h2>\r\n              <button onClick={() => setShowForm(false)} className=\"close-btn\">&times;</button>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Название группы:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Описание:</label>\r\n                <textarea\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Базовый товар:</label>\r\n                <select\r\n                  value={formData.baseProductId}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, baseProductId: e.target.value }))}\r\n                  required\r\n                >\r\n                  <option value=\"\">Выберите товар</option>\r\n                  {products.map(product => (\r\n                    <option key={product._id} value={product._id}>\r\n                      {product.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <h3>Параметры вариаций</h3>\r\n                {formData.parameters.map((param, index) => (\r\n                  <div key={index} className=\"parameter-item\">\r\n                    <div className=\"parameter-header\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Название параметра (например: Вольты)\"\r\n                        value={param.name}\r\n                        onChange={(e) => updateParameter(index, 'name', e.target.value)}\r\n                        required\r\n                      />\r\n                      <select\r\n                        value={param.type}\r\n                        onChange={(e) => updateParameter(index, 'type', e.target.value)}\r\n                      >\r\n                        <option value=\"select\">Выпадающий список</option>\r\n                        <option value=\"radio\">Радио кнопки</option>\r\n                        <option value=\"checkbox\">Чекбокс</option>\r\n                      </select>\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={param.required}\r\n                          onChange={(e) => updateParameter(index, 'required', e.target.checked)}\r\n                        />\r\n                        Обязательный\r\n                      </label>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeParameter(index)}\r\n                        className=\"btn-danger\"\r\n                      >\r\n                        Удалить\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"parameter-values\">\r\n                      <label>Возможные значения:</label>\r\n                      {param.values.map((value, valueIndex) => (\r\n                        <div key={valueIndex} className=\"value-item\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={value}\r\n                            onChange={(e) => updateParameterValue(index, valueIndex, e.target.value)}\r\n                            placeholder=\"Значение\"\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => removeParameterValue(index, valueIndex)}\r\n                            className=\"btn-danger\"\r\n                          >\r\n                            ×\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => addParameterValue(index)}\r\n                        className=\"btn-secondary\"\r\n                      >\r\n                        Добавить значение\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <button type=\"button\" onClick={addParameter} className=\"btn-secondary\">\r\n                  Добавить параметр\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <h3>Вариации товаров</h3>\r\n                {formData.variants.map((variant, index) => (\r\n                  <div key={index} className=\"variant-item\">\r\n                    <div className=\"variant-header\">\r\n                      <select\r\n                        value={variant.productId}\r\n                        onChange={(e) => updateVariant(index, 'productId', e.target.value)}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Выберите товар</option>\r\n                        {products.map(product => (\r\n                          <option key={product._id} value={product._id}>\r\n                            {product.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Цена\"\r\n                        value={variant.price}\r\n                        onChange={(e) => updateVariant(index, 'price', e.target.value)}\r\n                        required\r\n                      />\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={variant.isActive}\r\n                          onChange={(e) => updateVariant(index, 'isActive', e.target.checked)}\r\n                        />\r\n                        Активен\r\n                      </label>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeVariant(index)}\r\n                        className=\"btn-danger\"\r\n                      >\r\n                        Удалить\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"variant-parameters\">\r\n                      {formData.parameters.map((param, paramIndex) => (\r\n                        <div key={paramIndex} className=\"variant-param\">\r\n                          <label>{param.name}:</label>\r\n                          {param.type === 'select' && (\r\n                            <select\r\n                              value={variant.parameters.get(param.name) || ''}\r\n                              onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                              required={param.required}\r\n                            >\r\n                              <option value=\"\">Выберите</option>\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <option key={valueIndex} value={value}>\r\n                                  {value}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          )}\r\n                          {param.type === 'radio' && (\r\n                            <div className=\"radio-group\">\r\n                              {param.values.map((value, valueIndex) => (\r\n                                <label key={valueIndex}>\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    name={`${index}-${param.name}`}\r\n                                    value={value}\r\n                                    checked={variant.parameters.get(param.name) === value}\r\n                                    onChange={(e) => updateVariantParameter(index, param.name, e.target.value)}\r\n                                    required={param.required}\r\n                                  />\r\n                                  {value}\r\n                                </label>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                          {param.type === 'checkbox' && (\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={variant.parameters.get(param.name) === 'true'}\r\n                              onChange={(e) => updateVariantParameter(index, param.name, e.target.checked ? 'true' : 'false')}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <button type=\"button\" onClick={addVariant} className=\"btn-secondary\">\r\n                  Добавить вариацию\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\" className=\"btn-primary\" disabled={loading}>\r\n                  {loading ? 'Сохранение...' : (editingGroup ? 'Обновить' : 'Создать')}\r\n                </button>\r\n                <button type=\"button\" onClick={() => setShowForm(false)} className=\"btn-secondary\">\r\n                  Отмена\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"groups-list\">\r\n        <h2>Существующие группы вариаций</h2>\r\n        {groups.length === 0 ? (\r\n          <p>Группы вариаций не найдены</p>\r\n        ) : (\r\n          groups.map(group => (\r\n            <div key={group._id} className=\"group-item\">\r\n              <div className=\"group-header\">\r\n                <h3>{group.name}</h3>\r\n                <div className=\"group-actions\">\r\n                  <button onClick={() => handleEditGroup(group)} className=\"btn-secondary\">\r\n                    Редактировать\r\n                  </button>\r\n                  <button onClick={() => handleDeleteGroup(group._id)} className=\"btn-danger\">\r\n                    Удалить\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              {group.description && <p>{group.description}</p>}\r\n              \r\n              <div className=\"group-details\">\r\n                <div className=\"base-product\">\r\n                  <strong>Базовый товар:</strong> {group.baseProductId?.name || 'Не указан'}\r\n                </div>\r\n                \r\n                <div className=\"parameters\">\r\n                  <strong>Параметры:</strong>\r\n                  <ul>\r\n                    {group.parameters.map((param, index) => (\r\n                      <li key={index}>\r\n                        {param.name} ({param.type}) - {param.values.join(', ')}\r\n                        {param.required && ' *'}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                \r\n                <div className=\"variants\">\r\n                  <strong>Вариации ({group.variants.length}):</strong>\r\n                  <ul>\r\n                    {group.variants.map((variant, index) => (\r\n                      <li key={index}>\r\n                        {variant.productId?.name || 'Неизвестный товар'} - {variant.price}\r\n                        {!variant.isActive && ' (неактивен)'}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .product-variations {\r\n          padding: 20px;\r\n          max-width: 1200px;\r\n          margin: 0 auto;\r\n        }\r\n\r\n        .header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .btn-primary {\r\n          background: #007bff;\r\n          color: white;\r\n          border: none;\r\n          padding: 10px 20px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .btn-secondary {\r\n          background: #6c757d;\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          margin-left: 10px;\r\n        }\r\n\r\n        .btn-danger {\r\n          background: #dc3545;\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .modal-overlay {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          background: rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          z-index: 1000;\r\n        }\r\n\r\n        .modal {\r\n          background: white;\r\n          border-radius: 8px;\r\n          padding: 20px;\r\n          max-width: 800px;\r\n          max-height: 90vh;\r\n          overflow-y: auto;\r\n          width: 90%;\r\n        }\r\n\r\n        .modal-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .close-btn {\r\n          background: none;\r\n          border: none;\r\n          font-size: 24px;\r\n          cursor: pointer;\r\n        }\r\n\r\n        .form-group {\r\n          margin-bottom: 15px;\r\n        }\r\n\r\n        .form-group label {\r\n          display: block;\r\n          margin-bottom: 5px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .form-group input,\r\n        .form-group select,\r\n        .form-group textarea {\r\n          width: 100%;\r\n          padding: 8px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        .form-section {\r\n          margin: 20px 0;\r\n          padding: 15px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        .parameter-item,\r\n        .variant-item {\r\n          margin: 15px 0;\r\n          padding: 15px;\r\n          border: 1px solid #eee;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        .parameter-header,\r\n        .variant-header {\r\n          display: flex;\r\n          gap: 10px;\r\n          align-items: center;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .parameter-values,\r\n        .variant-parameters {\r\n          margin-top: 10px;\r\n        }\r\n\r\n        .value-item {\r\n          display: flex;\r\n          gap: 10px;\r\n          align-items: center;\r\n          margin: 5px 0;\r\n        }\r\n\r\n        .radio-group {\r\n          display: flex;\r\n          gap: 15px;\r\n        }\r\n\r\n        .form-actions {\r\n          display: flex;\r\n          gap: 10px;\r\n          justify-content: flex-end;\r\n          margin-top: 20px;\r\n        }\r\n\r\n        .group-item {\r\n          margin: 20px 0;\r\n          padding: 15px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        .group-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .group-actions {\r\n          display: flex;\r\n          gap: 10px;\r\n        }\r\n\r\n        .group-details {\r\n          margin-top: 15px;\r\n        }\r\n\r\n        .group-details > div {\r\n          margin: 10px 0;\r\n        }\r\n\r\n        .error {\r\n          background: #f8d7da;\r\n          color: #721c24;\r\n          padding: 10px;\r\n          border-radius: 4px;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .loading {\r\n          text-align: center;\r\n          padding: 20px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductVariations;\r\n"],"names":["API_URL","PRODUCTS_URL","GROUPS_URL","products","setProducts","useState","groups","setGroups","loading","setLoading","error","setError","showForm","setShowForm","editingGroup","setEditingGroup","selectedProducts","setSelectedProducts","formData","setFormData","name","description","baseProductId","parameters","variants","useNavigate","useEffect","fetchData","async","productsRes","groupsRes","Promise","all","fetch","ok","Error","productsData","groupsData","json","err","message","updateParameter","index","field","value","prev","map","param","i","updateVariant","variant","updateVariantParameter","variantIndex","paramName","Map","set","_jsx","className","children","_jsxs","onClick","handleCreateGroup","onSubmit","e","preventDefault","submitData","Object","fromEntries","_id","method","headers","body","JSON","stringify","type","onChange","target","required","product","placeholder","checked","filter","_","removeParameter","values","valueIndex","updateParameterValue","paramIndex","v","vi","removeParameterValue","addParameterValue","addParameter","productId","price","isActive","removeVariant","get","addVariant","disabled","length","group","_group$baseProductId2","_group$baseProductId","handleEditGroup","window","confirm","groupId","handleDeleteGroup","join","_variant$productId","jsx"],"sourceRoot":""}