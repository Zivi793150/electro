import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';

const Orders = ({ onLogout }) => {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [updatingStatus, setUpdatingStatus] = useState(null);
  const [selectedOrder, setSelectedOrder] = useState(null);
  const [showOrderDetails, setShowOrderDetails] = useState(false);
  const navigate = useNavigate();

  // –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
  const statusLabels = {
    'new': '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑',
    'confirmed': '–û—Ñ–æ—Ä–º–ª–µ–Ω–æ',
    'pending_payment': '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã',
    'partially_paid': '–ß–∞—Å—Ç–∏—á–Ω–æ –æ–ø–ª–∞—á–µ–Ω–æ',
    'paid': '–û–ø–ª–∞—á–µ–Ω–æ',
    'ordered': '–ó–∞–∫–∞–∑–∞–Ω–æ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
    'processing': '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
    'assembling': '–°–æ–±–∏—Ä–∞–µ—Ç—Å—è',
    'assembled': '–°–æ–±—Ä–∞–Ω–æ',
    'ready_to_ship': '–ì–æ—Ç–æ–≤ –∫ –æ—Ç–≥—Ä—É–∑–∫–µ',
    'shipped': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
    'in_transit': '–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è',
    'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ',
    'completed': '–í—ã–ø–æ–ª–Ω–µ–Ω–æ',
    'cancelled': '–û—Ç–º–µ–Ω–µ–Ω–æ',
    'returned': '–í–æ–∑–≤—Ä–∞—Ç'
  };

  // –¶–≤–µ—Ç–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
  const statusColors = {
    'new': '#2196F3',           // –°–∏–Ω–∏–π
    'confirmed': '#4CAF50',     // –ó–µ–ª–µ–Ω—ã–π
    'pending_payment': '#FF9800', // –û—Ä–∞–Ω–∂–µ–≤—ã–π
    'partially_paid': '#FFC107',  // –ñ–µ–ª—Ç—ã–π
    'paid': '#4CAF50',          // –ó–µ–ª–µ–Ω—ã–π
    'ordered': '#9C27B0',       // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
    'processing': '#607D8B',    // –°–∏–Ω–µ-—Å–µ—Ä—ã–π
    'assembling': '#795548',    // –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π
    'assembled': '#3F51B5',     // –ò–Ω–¥–∏–≥–æ
    'ready_to_ship': '#00BCD4', // –¶–∏–∞–Ω
    'shipped': '#009688',       // –¢–µ–∞–ª
    'in_transit': '#8BC34A',    // –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
    'delivered': '#4CAF50',     // –ó–µ–ª–µ–Ω—ã–π
    'completed': '#4CAF50',     // –ó–µ–ª–µ–Ω—ã–π
    'cancelled': '#F44336',     // –ö—Ä–∞—Å–Ω—ã–π
    'returned': '#E91E63'       // –†–æ–∑–æ–≤—ã–π
  };

  const fetchOrders = async () => {
    setLoading(true);
    setError('');
    try {
      const r = await fetch('https://electro-1-vjdu.onrender.com/api/orders');
      const j = await r.json();
      if (j && j.success && Array.isArray(j.orders)) {
        setOrders(j.orders);
      } else if (Array.isArray(j)) {
        setOrders(j);
      } else {
        setOrders([]);
      }
    } catch (e) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤');
    } finally {
      setLoading(false);
    }
  };

  const updateOrderStatus = async (orderId, newStatus) => {
    setUpdatingStatus(orderId);
    try {
      const response = await fetch(`https://electro-1-vjdu.onrender.com/api/orders/${orderId}/status`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          status: newStatus,
          changedBy: 'admin'
        }),
      });

      const result = await response.json();
      
      if (result.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        setOrders(prevOrders => 
          prevOrders.map(order => 
            order._id === orderId 
              ? { ...order, status: newStatus }
              : order
          )
        );
      } else {
        setError(result.error || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
      }
    } catch (e) {
      setError('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞');
    } finally {
      setUpdatingStatus(null);
    }
  };

  const openOrderDetails = (order) => {
    setSelectedOrder(order);
    setShowOrderDetails(true);
  };

  const closeOrderDetails = () => {
    setSelectedOrder(null);
    setShowOrderDetails(false);
  };

  useEffect(() => { fetchOrders(); }, []);

  return (
    <div className="admin-container" style={{minHeight:'100vh',background:'#f5f7fa',padding:'32px 0'}}>
      <div style={{maxWidth:1400,margin:'0 auto',background:'#fff',borderRadius:10,border:'1.5px solid #e0e0e0',padding:24}}>
        <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:18}}>
          <h2 style={{fontWeight:700,fontSize:24,color:'#1a2236',margin:0}}>–ó–∞–∫–∞–∑—ã</h2>
          <div className="admin-nav">
            <button onClick={()=>{navigate('/admin/products')}} className="nav-btn" style={{background:'#FF6B00'}}>+ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</button>
            <button onClick={()=>navigate('/admin/variations')} className="nav-btn nav-variations">üîÑ –í–∞—Ä–∏–∞—Ü–∏–∏</button>
            <button onClick={()=>navigate('/admin/orders')} className="nav-btn" style={{background:'#1e88e5'}}>üßæ –ó–∞–∫–∞–∑—ã</button>
            <button onClick={()=>navigate('/admin/settings')} className="nav-btn nav-settings">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
            <button onClick={()=>navigate('/admin/analytics')} className="nav-btn nav-analytics">üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</button>
            <button onClick={()=>navigate('/admin/pickup-points')} className="nav-btn nav-pickup">üè¨ –ü—É–Ω–∫—Ç—ã —Å–∞–º–æ–≤—ã–≤–æ–∑–∞</button>
            <button onClick={onLogout} className="nav-btn nav-logout">–í—ã–π—Ç–∏</button>
          </div>
        </div>

        {loading ? (
          <div style={{padding:32,textAlign:'center'}}>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>
        ) : error ? (
          <div style={{color:'#e53935',padding:32,textAlign:'center'}}>{error}</div>
        ) : orders.length === 0 ? (
          <div style={{padding:24,textAlign:'center',color:'#666'}}>–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</div>
        ) : (
          <table className="admin-table" style={{width:'100%',borderCollapse:'collapse',fontSize:15,background:'#fff'}}>
            <thead>
              <tr style={{background:'#f5f7fa'}}>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–î–∞—Ç–∞</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–ö–ª–∏–µ–Ω—Ç</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–°—Ç–∞—Ç—É—Å</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–î–æ—Å—Ç–∞–≤–∫–∞</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–û–ø–ª–∞—Ç–∞</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–°—É–º–º–∞</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–¢–æ–≤–∞—Ä—ã</th>
                <th style={{padding:'8px 6px',textAlign:'left'}}>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              {orders.map(o => (
                <tr key={o._id} style={{borderBottom:'1px solid #e0e0e0'}}>
                  <td style={{padding:'8px 6px'}}>{new Date(o.createdAt).toLocaleString('ru-RU')}</td>
                  <td style={{padding:'8px 6px'}}>{o.firstName}</td>
                  <td style={{padding:'8px 6px'}}>{o.phone}</td>
                  <td style={{padding:'8px 6px'}}>
                    <select
                      value={o.status || 'new'}
                      onChange={(e) => updateOrderStatus(o._id, e.target.value)}
                      disabled={updatingStatus === o._id}
                      style={{
                        padding: '4px 8px',
                        border: '1px solid #ddd',
                        borderRadius: '4px',
                        fontSize: '14px',
                        backgroundColor: statusColors[o.status || 'new'],
                        color: '#fff',
                        fontWeight: '500',
                        cursor: updatingStatus === o._id ? 'not-allowed' : 'pointer',
                        opacity: updatingStatus === o._id ? 0.6 : 1,
                        minWidth: '140px'
                      }}
                    >
                      {Object.entries(statusLabels).map(([value, label]) => (
                        <option key={value} value={value} style={{backgroundColor: '#fff', color: '#333'}}>
                          {label}
                        </option>
                      ))}
                    </select>
                    {updatingStatus === o._id && (
                      <span style={{marginLeft: '8px', fontSize: '12px', color: '#666'}}>
                        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...
                      </span>
                    )}
                  </td>
                  <td style={{padding:'8px 6px'}}>{o.deliveryType === 'delivery' ? `–î–æ—Å—Ç–∞–≤–∫–∞ ${o.address ? '('+o.address+')' : ''}` : '–°–∞–º–æ–≤—ã–≤–æ–∑'}</td>
                  <td style={{padding:'8px 6px'}}>
                    {o.payment === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–º–∏' : '–ë–µ–∑–Ω–∞–ª–∏—á–Ω–æ'}
                    {o.payment === 'cashless' && o.paymentMethod ? ` (${o.paymentMethod})` : ''}
                  </td>
                  <td style={{padding:'8px 6px',color:'#FFB300',fontWeight:700}}>{(o.total||0).toLocaleString('ru-RU')} ‚Ç∏</td>
                  <td style={{padding:'8px 6px'}}>
                    {Array.isArray(o.items) && o.items.length > 0 ? (
                      <ul style={{margin:0,paddingLeft:16}}>
                        {o.items.map((it, idx) => (
                          <li key={idx}>{it.productName || it.productId} √ó{it.quantity || 1}</li>
                        ))}
                      </ul>
                    ) : (
                      <span style={{color:'#666'}}>‚Äî</span>
                    )}
                  </td>
                  <td style={{padding:'8px 6px'}}>
                    <button
                      onClick={() => openOrderDetails(o)}
                      style={{
                        padding: '4px 8px',
                        backgroundColor: '#1e88e5',
                        color: '#fff',
                        border: 'none',
                        borderRadius: '4px',
                        cursor: 'pointer',
                        fontSize: '12px'
                      }}
                    >
                      –î–µ—Ç–∞–ª–∏
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞–∫–∞–∑–∞ */}
      {showOrderDetails && selectedOrder && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: 'rgba(0, 0, 0, 0.5)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            backgroundColor: '#fff',
            borderRadius: '8px',
            padding: '24px',
            maxWidth: '800px',
            width: '90%',
            maxHeight: '90%',
            overflow: 'auto'
          }}>
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginBottom: '20px',
              borderBottom: '1px solid #e0e0e0',
              paddingBottom: '16px'
            }}>
              <h3 style={{ margin: 0, color: '#1a2236' }}>
                –ó–∞–∫–∞–∑ #{selectedOrder._id.slice(-8)}
              </h3>
              <button
                onClick={closeOrderDetails}
                style={{
                  background: 'none',
                  border: 'none',
                  fontSize: '24px',
                  cursor: 'pointer',
                  color: '#666'
                }}
              >
                √ó
              </button>
            </div>

            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>
              <div>
                <h4 style={{ margin: '0 0 8px 0', color: '#1a2236' }}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h4>
                <p><strong>–ò–º—è:</strong> {selectedOrder.firstName}</p>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {selectedOrder.phone}</p>
                <p><strong>–ê–¥—Ä–µ—Å:</strong> {selectedOrder.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                <p><strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {selectedOrder.comment || '–ù–µ—Ç'}</p>
              </div>
              <div>
                <h4 style={{ margin: '0 0 8px 0', color: '#1a2236' }}>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h4>
                <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> {new Date(selectedOrder.createdAt).toLocaleString('ru-RU')}</p>
                <p><strong>–î–æ—Å—Ç–∞–≤–∫–∞:</strong> {selectedOrder.deliveryType === 'delivery' ? '–î–æ—Å—Ç–∞–≤–∫–∞' : '–°–∞–º–æ–≤—ã–≤–æ–∑'}</p>
                <p><strong>–û–ø–ª–∞—Ç–∞:</strong> {selectedOrder.payment === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–º–∏' : '–ë–µ–∑–Ω–∞–ª–∏—á–Ω–æ'}</p>
                <p><strong>–°—É–º–º–∞:</strong> <span style={{ color: '#FFB300', fontWeight: 'bold' }}>
                  {(selectedOrder.total || 0).toLocaleString('ru-RU')} ‚Ç∏
                </span></p>
              </div>
            </div>

            <div style={{ marginBottom: '20px' }}>
              <h4 style={{ margin: '0 0 8px 0', color: '#1a2236' }}>–¢–æ–≤–∞—Ä—ã</h4>
              {Array.isArray(selectedOrder.items) && selectedOrder.items.length > 0 ? (
                <ul style={{ margin: 0, paddingLeft: '20px' }}>
                  {selectedOrder.items.map((item, idx) => (
                    <li key={idx} style={{ marginBottom: '4px' }}>
                      {item.productName || item.productId} √ó {item.quantity || 1}
                      {item.price && ` - ${item.price.toLocaleString('ru-RU')} ‚Ç∏`}
                    </li>
                  ))}
                </ul>
              ) : (
                <p style={{ color: '#666' }}>–¢–æ–≤–∞—Ä—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã</p>
              )}
            </div>

            <div>
              <h4 style={{ margin: '0 0 8px 0', color: '#1a2236' }}>–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤</h4>
              {selectedOrder.statusHistory && selectedOrder.statusHistory.length > 0 ? (
                <div style={{ maxHeight: '200px', overflow: 'auto' }}>
                  {selectedOrder.statusHistory.map((entry, idx) => (
                    <div key={idx} style={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center',
                      padding: '8px 12px',
                      marginBottom: '4px',
                      backgroundColor: '#f5f7fa',
                      borderRadius: '4px',
                      borderLeft: `4px solid ${statusColors[entry.status] || '#ccc'}`
                    }}>
                      <span style={{ fontWeight: '500' }}>
                        {statusLabels[entry.status] || entry.status}
                      </span>
                      <span style={{ fontSize: '12px', color: '#666' }}>
                        {new Date(entry.changedAt).toLocaleString('ru-RU')}
                        {entry.changedBy && ` (${entry.changedBy})`}
                      </span>
                    </div>
                  ))}
                </div>
              ) : (
                <p style={{ color: '#666' }}>–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—É—Å—Ç–∞</p>
              )}
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default Orders;


