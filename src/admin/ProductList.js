import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';

  const API_URL = 'https://electro-a8bl.onrender.com/api/products';

function ProductForm({ onClose, onSuccess, initialData }) {
  const [name, setName] = useState(initialData?.name || '');
  const [price, setPrice] = useState(initialData?.price !== undefined ? String(initialData.price) : '');
  const [category, setCategory] = useState(initialData?.category || '');
  const [article, setArticle] = useState(initialData?.article || '');
  const [image, setImage] = useState(initialData?.image || '');
  const [photo1, setPhoto1] = useState(initialData?.images?.[0] || '');
  const [photo2, setPhoto2] = useState(initialData?.images?.[1] || '');
  const [photo3, setPhoto3] = useState(initialData?.images?.[2] || '');
  const [description, setDescription] = useState(initialData?.description || '');
  const [shortDescription, setShortDescription] = useState(initialData?.['Short description'] || '');
  const [characteristics, setCharacteristics] = useState(initialData?.characteristics || '');
  const [equipment, setEquipment] = useState(initialData?.equipment || '');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
  const [characteristicFields, setCharacteristicFields] = useState(() => {
    if (initialData?.characteristics) {
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        const parsed = JSON.parse(initialData.characteristics);
        if (Array.isArray(parsed)) {
          return parsed;
        }
      } catch {
        // –ï—Å–ª–∏ –Ω–µ JSON, —Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º
        const lines = initialData.characteristics.split('\n').filter(line => line.trim());
        return lines.map(line => {
          const parts = line.split(':');
          if (parts.length >= 2) {
            return {
              parameter: parts[0].trim(),
              value: parts.slice(1).join(':').trim()
            };
          }
          return { parameter: line.trim(), value: '' };
        });
      }
    }
    // –ù–∞—á–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
    return [
      { parameter: '–ö–æ–¥ —Ç–æ–≤–∞—Ä–∞', value: '' },
      { parameter: '–¢–∏–ø –ø–∞—Ç—Ä–æ–Ω–∞', value: '' },
      { parameter: '–¢–∏–ø –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞', value: '' },
      { parameter: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–æ—Ä–æ—Å—Ç–µ–π —Ä–∞–±–æ—Ç—ã', value: '' },
      { parameter: '–î–∏–∞–º–µ—Ç—Ä –ø–∞—Ç—Ä–æ–Ω–∞', value: '' },
      { parameter: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ–±–æ—Ä–æ—Ç–æ–≤ —Ö–æ–ª–æ—Å—Ç–æ–≥–æ —Ö–æ–¥–∞', value: '' },
      { parameter: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä—É—Ç—è—â–∏–π –º–æ–º–µ–Ω—Ç', value: '' },
      { parameter: '–ü–æ—Ç—Ä–µ–±–ª—è–µ–º–∞—è –º–æ—â–Ω–æ—Å—Ç—å', value: '' },
      { parameter: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–º–µ—Ç—Ä —Å–≤–µ—Ä–ª–µ–Ω–∏—è –¥–µ—Ä–µ–≤–∞', value: '' },
      { parameter: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–º–µ—Ç—Ä —Å–≤–µ—Ä–ª–µ–Ω–∏—è –º–µ—Ç–∞–ª–ª–∞', value: '' }
    ];
  });
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  const handleFileUpload = async (event, setField) => {
    const files = Array.from(event.target.files);
    if (files.length === 0) return;
    
    setLoading(true);
    setError('');
    
    try {
      const formData = new FormData();
      formData.append('file', files[0]);
      
      const response = await fetch('/upload.php', {
        method: 'POST',
        body: formData
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
      }
      
      const result = await response.json();
      
      if (result.success && result.files.length > 0) {
        const newUrl = result.files[0];
        setField(newUrl);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        setError('');
        setTimeout(() => {
          alert(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!\n\nURL: ${newUrl}\n\nURL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–æ–ª–µ.`);
        }, 100);
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + err.message);
    } finally {
      setLoading(false);
      event.target.value = '';
    }
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
  const addCharacteristic = () => {
    setCharacteristicFields([...characteristicFields, { parameter: '', value: '' }]);
  };

  const removeCharacteristic = (index) => {
    setCharacteristicFields(characteristicFields.filter((_, i) => i !== index));
  };

  const updateCharacteristic = (index, field, value) => {
    const newFields = [...characteristicFields];
    newFields[index][field] = value;
    setCharacteristicFields(newFields);
  };

  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const formatCharacteristics = () => {
    return characteristicFields
      .filter(field => field.parameter.trim() && field.value.trim())
      .map(field => `${field.parameter}: ${field.value}`)
      .join('\n');
  };

  const isEdit = Boolean(initialData && initialData._id);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ü–µ–Ω—ã, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
    let parsedPrice = String(price).replace(',', '.');
    if (parsedPrice === '' || isNaN(Number(parsedPrice))) {
      setError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 19.65 –∏–ª–∏ 19,65)');
      setLoading(false);
      return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –∫–∞–∫ —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –Ω—É–ª–∏
    parsedPrice = String(parsedPrice);
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ –≤ –º–∞—Å—Å–∏–≤
    const allPhotos = [photo1, photo2, photo3].filter(photo => photo.trim() !== '');
    
    try {
      let payload = { 
        name, 
        price: parsedPrice, 
        category, 
        image, 
        images: allPhotos,
        images2: [],
        images3: [],
        description, 
        'Short description': shortDescription, 
        characteristics: formatCharacteristics(), 
        equipment, 
        article 
      };
      
      const res = await fetch(isEdit ? `${API_URL}/${initialData._id}` : API_URL, {
        method: isEdit ? 'PUT' : 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });
      
      if (!res.ok) throw new Error(isEdit ? '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞' : '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
      
      setLoading(false);
      onSuccess();
      onClose();
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞');
      setLoading(false);
    }
  };

  return (
    <div style={{position:'fixed',top:0,left:0,right:0,bottom:0,background:'rgba(0,0,0,0.18)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>
      <form onSubmit={handleSubmit} style={{background:'#fff',borderRadius:10,padding:28,minWidth:400,maxWidth:600,boxShadow:'0 2px 16px rgba(30,40,90,0.10)',maxHeight:'90vh',overflowY:'auto'}}>
        <h3 style={{marginTop:0,marginBottom:20,fontWeight:700,fontSize:22,color:'#333'}}>{isEdit ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä' : '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'}</h3>
        
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div style={{background:'#f8f9fa',border:'1px solid #e9ecef',borderRadius:8,padding:16,marginBottom:20}}>
          <h4 style={{margin:'0 0 12px 0',fontSize:16,fontWeight:600,color:'#495057'}}>üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
          
          <div style={{marginBottom:12}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
            <input required value={name} onChange={e=>setName(e.target.value)} placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
          </div>
          
          <div style={{marginBottom:12}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–¶–µ–Ω–∞ *</label>
            <input required type="text" value={price} onChange={e=>setPrice(e.target.value)} placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 19.65 –∏–ª–∏ 19,65" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
          </div>
          
          <div style={{marginBottom:12}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
            <input value={category} onChange={e=>setCategory(e.target.value)} placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≠–ª–µ–∫—Ç—Ä–æ–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
          </div>
          
          <div style={{marginBottom:0}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–ê—Ä—Ç–∏–∫—É–ª</label>
            <input value={article} onChange={e=>setArticle(e.target.value)} placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 119356208" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
            <small style={{color:'#6c757d',fontSize:12}}>–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ —Ç–æ–≤–∞—Ä–∞</small>
          </div>
        </div>

        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
        <div style={{background:'#f8f9fa',border:'1px solid #e9ecef',borderRadius:8,padding:16,marginBottom:20}}>
          <h4 style={{margin:'0 0 12px 0',fontSize:16,fontWeight:600,color:'#495057'}}>üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h4>
          
          <div style={{marginBottom:12}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ *</label>
            <input required value={image} onChange={e=>setImage(e.target.value)} placeholder="URL –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
            <div style={{display:'flex',gap:8,marginTop:6}}>
              <input type="file" accept="image/*" onChange={(e)=>handleFileUpload(e, setImage)} style={{flex:1}} />
              <button type="button" onClick={()=>setImage('/images/products/bolgarka-makita-125.jpg')} style={{background:'#28a745',color:'#fff',border:'none',borderRadius:4,padding:'8px 12px',fontSize:12,cursor:'pointer'}}>–ü—Ä–∏–º–µ—Ä</button>
            </div>
          </div>
          
          <div style={{marginBottom:12}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–§–æ—Ç–æ 2</label>
            <input value={photo1} onChange={e=>setPhoto1(e.target.value)} placeholder="URL –≤—Ç–æ—Ä–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
            <div style={{display:'flex',gap:8,marginTop:6}}>
              <input type="file" accept="image/*" onChange={(e)=>handleFileUpload(e, setPhoto1)} style={{flex:1}} />
              <button type="button" onClick={()=>setPhoto1('/images/products/drel.jpg')} style={{background:'#28a745',color:'#fff',border:'none',borderRadius:4,padding:'8px 12px',fontSize:12,cursor:'pointer'}}>–ü—Ä–∏–º–µ—Ä</button>
            </div>
          </div>
          
          <div style={{marginBottom:12}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–§–æ—Ç–æ 3</label>
            <input value={photo2} onChange={e=>setPhoto2(e.target.value)} placeholder="URL —Ç—Ä–µ—Ç—å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
            <div style={{display:'flex',gap:8,marginTop:6}}>
              <input type="file" accept="image/*" onChange={(e)=>handleFileUpload(e, setPhoto2)} style={{flex:1}} />
              <button type="button" onClick={()=>setPhoto2('/images/products/perforator-bosch-gbh.jpg')} style={{background:'#28a745',color:'#fff',border:'none',borderRadius:4,padding:'8px 12px',fontSize:12,cursor:'pointer'}}>–ü—Ä–∏–º–µ—Ä</button>
            </div>
          </div>
          
          <div style={{marginBottom:0}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–§–æ—Ç–æ 4</label>
            <input value={photo3} onChange={e=>setPhoto3(e.target.value)} placeholder="URL —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14}} />
            <div style={{display:'flex',gap:8,marginTop:6}}>
              <input type="file" accept="image/*" onChange={(e)=>handleFileUpload(e, setPhoto3)} style={{flex:1}} />
              <button type="button" onClick={()=>setPhoto3('/images/products/shurupovert-dewalt-18v.jpg')} style={{background:'#28a745',color:'#fff',border:'none',borderRadius:4,padding:'8px 12px',fontSize:12,cursor:'pointer'}}>–ü—Ä–∏–º–µ—Ä</button>
            </div>
          </div>
        </div>

        {/* –û–ø–∏—Å–∞–Ω–∏—è */}
        <div style={{background:'#f8f9fa',border:'1px solid #e9ecef',borderRadius:8,padding:16,marginBottom:20}}>
          <h4 style={{margin:'0 0 12px 0',fontSize:16,fontWeight:600,color:'#495057'}}>üìù –û–ø–∏—Å–∞–Ω–∏—è</h4>
          
          <div style={{marginBottom:12}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
            <textarea value={shortDescription} onChange={e=>setShortDescription(e.target.value)} placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤)" maxLength={160} style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14,minHeight:60,resize:'vertical'}} />
            <small style={{color:'#6c757d',fontSize:12}}>–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤</small>
          </div>
          
          <div style={{marginBottom:0}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
            <textarea value={description} onChange={e=>setDescription(e.target.value)} placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14,minHeight:80,resize:'vertical'}} />
          </div>
        </div>

        {/* –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è */}
        <div style={{background:'#f8f9fa',border:'1px solid #e9ecef',borderRadius:8,padding:16,marginBottom:20}}>
          <h4 style={{margin:'0 0 12px 0',fontSize:16,fontWeight:600,color:'#495057'}}>‚öôÔ∏è –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è</h4>
          
          <div style={{marginBottom:16}}>
            <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:12}}>
              <label style={{fontWeight:500,color:'#333',fontSize:14}}>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</label>
              <button type="button" onClick={addCharacteristic} style={{background:'#28a745',color:'#fff',border:'none',borderRadius:4,padding:'6px 12px',fontSize:12,cursor:'pointer'}}>+ –î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
            
            <div style={{maxHeight:300,overflowY:'auto',border:'1px solid #ced4da',borderRadius:6,padding:8,background:'#fff'}}>
              {characteristicFields.map((field, index) => (
                <div key={index} style={{display:'flex',gap:8,marginBottom:8,alignItems:'center'}}>
                  <input
                    value={field.parameter}
                    onChange={(e) => updateCharacteristic(index, 'parameter', e.target.value)}
                    placeholder="–ü–∞—Ä–∞–º–µ—Ç—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ö–æ–¥ —Ç–æ–≤–∞—Ä–∞)"
                    style={{flex:1,padding:8,borderRadius:4,border:'1px solid #ced4da',fontSize:13}}
                  />
                  <input
                    value={field.value}
                    onChange={(e) => updateCharacteristic(index, 'value', e.target.value)}
                    placeholder="–ó–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 119356208)"
                    style={{flex:1,padding:8,borderRadius:4,border:'1px solid #ced4da',fontSize:13}}
                  />
                  <button
                    type="button"
                    onClick={() => removeCharacteristic(index)}
                    style={{background:'#dc3545',color:'#fff',border:'none',borderRadius:4,padding:'6px 8px',fontSize:12,cursor:'pointer',minWidth:30}}
                  >
                    ‚úï
                  </button>
                </div>
              ))}
            </div>
            
            <small style={{color:'#6c757d',fontSize:12,marginTop:8,display:'block'}}>
              üí° –ö–∞–∂–¥–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–∞–∫ "–ü–∞—Ä–∞–º–µ—Ç—Ä: –ó–Ω–∞—á–µ–Ω–∏–µ". 
              –ü—É—Å—Ç—ã–µ –ø–æ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–∫–ª—é—á–∞—é—Ç—Å—è.
            </small>
          </div>
          
          <div style={{marginBottom:0}}>
            <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333',fontSize:14}}>–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è</label>
            <textarea value={equipment} onChange={e=>setEquipment(e.target.value)} placeholder="‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç&#10;‚Ä¢ –ó–∞—â–∏—Ç–Ω—ã–π –∫–æ–∂—É—Ö&#10;‚Ä¢ –ö–ª—é—á –¥–ª—è –∑–∞–º–µ–Ω—ã –¥–∏—Å–∫–∞&#10;‚Ä¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏" style={{width:'100%',padding:10,borderRadius:6,border:'1px solid #ced4da',fontSize:14,minHeight:80,resize:'vertical'}} />
            <small style={{color:'#6c757d',fontSize:12}}>–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Ç –ø–æ—Å—Ç–∞–≤–∫–∏</small>
          </div>
        </div>

        {error && <div style={{color:'#dc3545',marginBottom:16,padding:12,background:'#f8d7da',border:'1px solid #f5c6cb',borderRadius:6}}>{error}</div>}
        
        <div style={{display:'flex',justifyContent:'flex-end',gap:12}}>
          <button type="button" onClick={onClose} style={{background:'#6c757d',color:'#fff',border:'none',borderRadius:6,padding:'10px 20px',fontWeight:500,cursor:'pointer',fontSize:14}}>–û—Ç–º–µ–Ω–∞</button>
          <button type="submit" disabled={loading} style={{background:'#FF6B00',color:'#fff',border:'none',borderRadius:6,padding:'10px 20px',fontWeight:600,cursor:'pointer',fontSize:14}}>{loading ? (isEdit ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...') : (isEdit ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')}</button>
        </div>
      </form>
    </div>
  );
}

const ProductList = ({ onLogout }) => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [showForm, setShowForm] = useState(false);
  const [editProduct, setEditProduct] = useState(null);
  const [selectedProducts, setSelectedProducts] = useState([]);
  const [selectAll, setSelectAll] = useState(false);

  const navigate = useNavigate();

  const fetchProducts = () => {
    setLoading(true);
    fetch(API_URL)
      .then(res => res.json())
      .then(data => {
        setProducts(Array.isArray(data) ? data : []);
        setLoading(false);
      })
      .catch(() => {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤');
        setLoading(false);
      });
  };

  useEffect(() => {
    fetchProducts();
  }, []);

  const handleEdit = (product) => {
    setEditProduct(product);
    setShowForm(true);
  };

  const handleFormClose = () => {
    setShowForm(false);
    setEditProduct(null);
  };

  const handleDelete = async (product) => {
    if (!window.confirm(`–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä ¬´${product.name}¬ª?`)) return;
    try {
      const res = await fetch(`${API_URL}/${product._id}`, { method: 'DELETE' });
      if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
      fetchProducts();
    } catch (e) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
    }
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–∞–ª–æ—á–∫–∞–º–∏
  const handleSelectProduct = (productId) => {
    setSelectedProducts(prev => {
      if (prev.includes(productId)) {
        return prev.filter(id => id !== productId);
      } else {
        return [...prev, productId];
      }
    });
  };

  const handleSelectAll = () => {
    if (selectAll) {
      setSelectedProducts([]);
      setSelectAll(false);
    } else {
      setSelectedProducts(products.map(product => product._id));
      setSelectAll(true);
    }
  };

  const handleDeleteSelected = async () => {
    if (selectedProducts.length === 0) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
      return;
    }

    const confirmMessage = selectedProducts.length === 1 
      ? `–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä?` 
      : `–£–¥–∞–ª–∏—Ç—å ${selectedProducts.length} –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤?`;

    if (!window.confirm(confirmMessage)) return;

    try {
      const deletePromises = selectedProducts.map(productId => 
        fetch(`${API_URL}/${productId}`, { method: 'DELETE' })
      );

      await Promise.all(deletePromises);
      setSelectedProducts([]);
      setSelectAll(false);
      fetchProducts();
      alert(`–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ ${selectedProducts.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    } catch (e) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤');
    }
  };

  // –°–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
  useEffect(() => {
    setSelectedProducts([]);
    setSelectAll(false);
  }, [products]);

  return (
    <div className="admin-container" style={{minHeight: '100vh', background: '#f5f7fa', padding: '32px 0'}}>
      <div style={{maxWidth: 1100, margin: '0 auto', background: '#fff', borderRadius: 10, border: '1.5px solid #e0e0e0', padding: 24}}>
        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 18}}>
          <h2 className="admin-header" style={{fontWeight: 700, fontSize: 24, color: '#1a2236', margin: 0}}>–¢–æ–≤–∞—Ä—ã</h2>
          <div>
            <button onClick={()=>{setShowForm(true);setEditProduct(null);}} style={{background: '#FF6B00', color: '#fff', fontWeight: 600, fontSize: 15, border: 'none', borderRadius: 7, padding: '8px 18px', marginRight: 12, cursor: 'pointer'}}>+ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</button>
            {selectedProducts.length > 0 && (
              <button 
                onClick={handleDeleteSelected} 
                style={{
                  background: '#dc3545', 
                  color: '#fff', 
                  fontWeight: 600, 
                  fontSize: 15, 
                  border: 'none', 
                  borderRadius: 7, 
                  padding: '8px 18px', 
                  marginRight: 12, 
                  cursor: 'pointer'
                }}
              >
                üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ ({selectedProducts.length})
              </button>
            )}
            <button onClick={() => navigate('/admin/settings')} style={{background: '#1e88e5', color: '#fff', fontWeight: 600, fontSize: 15, border: 'none', borderRadius: 7, padding: '8px 18px', marginRight: 12, cursor: 'pointer'}}>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
            <button onClick={() => navigate('/admin/pickup-points')} style={{background: '#28a745', color: '#fff', fontWeight: 600, fontSize: 15, border: 'none', borderRadius: 7, padding: '8px 18px', marginRight: 12, cursor: 'pointer'}}>üè¨ –ü—É–Ω–∫—Ç—ã —Å–∞–º–æ–≤—ã–≤–æ–∑–∞</button>
            <button onClick={onLogout} style={{background: '#e53935', color: '#fff', fontWeight: 600, fontSize: 15, border: 'none', borderRadius: 7, padding: '8px 18px', cursor: 'pointer'}}>–í—ã–π—Ç–∏</button>
          </div>
        </div>
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö */}
        {selectedProducts.length > 0 && (
          <div style={{
            background: '#e3f2fd', 
            border: '1px solid #2196f3', 
            borderRadius: '6px', 
            padding: '12px 16px', 
            marginBottom: '16px',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center'
          }}>
            <span style={{color: '#1976d2', fontWeight: 500}}>
              –í—ã–±—Ä–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {selectedProducts.length} –∏–∑ {products.length}
            </span>
            <button 
              onClick={() => {setSelectedProducts([]); setSelectAll(false);}}
              style={{
                background: 'none',
                border: '1px solid #2196f3',
                color: '#2196f3',
                padding: '4px 12px',
                borderRadius: '4px',
                cursor: 'pointer',
                fontSize: '14px'
              }}
            >
              –°–Ω—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ
            </button>
          </div>
        )}
        
      {loading ? (
          <div style={{padding: 32, textAlign: 'center'}}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      ) : error ? (
          <div style={{color: '#e53935', padding: 32, textAlign: 'center'}}>{error}</div>
      ) : (
          <table className="admin-table" style={{width: '100%', borderCollapse: 'collapse', fontSize: 15, background: '#fff'}}>
          <thead>
            <tr style={{background: '#f5f7fa'}}>
                <th style={{padding: '8px 6px', textAlign: 'center', fontWeight: 600, color: '#222', width: '40px'}}>
                  <input 
                    type="checkbox" 
                    checked={selectAll}
                    onChange={handleSelectAll}
                    style={{width: '16px', height: '16px', cursor: 'pointer'}}
                  />
                </th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–§–æ—Ç–æ</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–¶–µ–Ω–∞</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</th>
                <th style={{padding: '8px 6px', textAlign: 'center', fontWeight: 600, color: '#222'}}>–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody>
            {products.map(product => (
                <tr key={product._id} style={{
                  borderBottom: '1px solid #e0e0e0',
                  backgroundColor: selectedProducts.includes(product._id) ? '#f8f9fa' : 'transparent'
                }}>
                  <td style={{padding: '6px 6px', textAlign: 'center'}}>
                    <input 
                      type="checkbox" 
                      checked={selectedProducts.includes(product._id)}
                      onChange={() => handleSelectProduct(product._id)}
                      style={{width: '16px', height: '16px', cursor: 'pointer'}}
                    />
                  </td>
                  <td style={{padding: '6px 6px'}}>
                    <img src={product.image || '/images/products/placeholder.png'} alt={product.name} style={{width: 44, height: 44, objectFit: 'contain', borderRadius: 5, background: '#f5f7fa', border: '1px solid #e0e0e0'}} />
                  </td>
                  <td style={{padding: '6px 6px', fontWeight: 500, color: '#1a2236'}}>{product.name}</td>
                  <td style={{padding: '6px 6px', color: '#FFB300', fontWeight: 700}}>{product.price ? String(product.price).replace('.', ',') + ' ‚Ç∏' : ''}</td>
                  <td style={{padding: '6px 6px', color: '#222'}}>{product.category || '-'}</td>
                  <td style={{padding: '6px 6px', color: '#888', fontSize: 13}}>{product['Short description'] || ''}</td>
                  <td style={{padding: '6px 6px', textAlign: 'center'}}>
                    <button onClick={()=>handleEdit(product)} style={{background: '#1e88e5', color: '#fff', border: 'none', borderRadius: 6, padding: '6px 14px', fontWeight: 500, marginRight: 6, cursor: 'pointer'}}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button onClick={()=>handleDelete(product)} style={{background: '#e53935', color: '#fff', border: 'none', borderRadius: 6, padding: '6px 14px', fontWeight: 500, cursor: 'pointer'}}>–£–¥–∞–ª–∏—Ç—å</button>
                  </td>
                </tr>
            ))}
          </tbody>
        </table>
      )}
      </div>
      {showForm && <ProductForm onClose={handleFormClose} onSuccess={fetchProducts} initialData={editProduct} />}
    </div>
  );
};

export default ProductList; 