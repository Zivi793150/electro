import React, { useEffect, useState } from 'react';

  const API_URL = '/api/products';

function ProductForm({ onClose, onSuccess, initialData }) {
  const [name, setName] = useState(initialData?.name || '');
  const [price, setPrice] = useState(initialData?.price !== undefined ? String(initialData.price) : '');
  const [category, setCategory] = useState(initialData?.category || '');
  const [image, setImage] = useState(initialData?.image || '');
  const [images, setImages] = useState(initialData?.images ? JSON.stringify(initialData.images) : '');
  const [images2, setImages2] = useState(initialData?.images2 ? JSON.stringify(initialData.images2) : '');
  const [images3, setImages3] = useState(initialData?.images3 ? JSON.stringify(initialData.images3) : '');
  const [description, setDescription] = useState(initialData?.description || '');
  const [shortDescription, setShortDescription] = useState(initialData?.['Short description'] || '');
  const [characteristics, setCharacteristics] = useState(initialData?.characteristics || '');
  const [equipment, setEquipment] = useState(initialData?.equipment || '');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤
  const parseImagesArray = (imagesStr) => {
    if (!imagesStr) return [];
    try {
      return JSON.parse(imagesStr);
    } catch {
      // –ï—Å–ª–∏ –Ω–µ JSON, —Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º
      return imagesStr.split(',').map(url => url.trim()).filter(url => url);
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
  const handleSingleFileUpload = async (event, setField) => {
    const files = Array.from(event.target.files);
    if (files.length === 0) return;
    
    setLoading(true);
    setError('');
    
    try {
      const formData = new FormData();
      formData.append('file', files[0]);
      
      const response = await fetch('/api/upload', {
        method: 'POST',
        body: formData
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
      }
      
      const result = await response.json();
      
      if (result.success && result.files.length > 0) {
        // –ó–∞–º–µ–Ω—è–µ–º URL –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const newUrl = result.files[0];
        console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π URL –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', newUrl);
        setField(newUrl);
        
        alert(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!\n\n–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:\n${newUrl}\n\nURL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–æ–ª–µ.`);
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + err.message);
    } finally {
      setLoading(false);
      event.target.value = '';
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  const handleFileUpload = async (event, setField) => {
    const files = Array.from(event.target.files);
    if (files.length === 0) return;
    
    setLoading(true);
    setError('');
    
    try {
      const formData = new FormData();
      files.forEach(file => {
        formData.append('file', file);
      });
      
      const response = await fetch('/api/upload', {
        method: 'POST',
        body: formData
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤');
      }
      
      const result = await response.json();
      
      if (result.success) {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ URL –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∏—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setField(prevValue => {
          const currentUrls = parseImagesArray(prevValue);
          const newUrls = [...currentUrls, ...result.files];
          const newJsonString = JSON.stringify(newUrls);
          console.log('–¢–µ–∫—É—â–∏–µ URL:', currentUrls);
          console.log('–ù–æ–≤—ã–µ URL:', result.files);
          console.log('–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ URL:', newUrls);
          console.log('JSON —Å—Ç—Ä–æ–∫–∞:', newJsonString);
          return newJsonString;
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
        const fileList = result.files.join('\n');
        alert(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${result.files.length} —Ñ–∞–π–ª–æ–≤!\n\n–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:\n${fileList}\n\nURL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ø–æ–ª–µ.`);
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤: ' + err.message);
    } finally {
      setLoading(false);
      // –û—á–∏—â–∞–µ–º input —Ñ–∞–π–ª–∞
      event.target.value = '';
    }
  };

  const isEdit = Boolean(initialData && initialData._id);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ü–µ–Ω—É –∫ —á–∏—Å–ª—É —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∑–∞–ø—è—Ç—É—é –∏ —Ç–æ—á–∫—É
    let parsedPrice = String(price).replace(',', '.');
    if (parsedPrice === '' || isNaN(Number(parsedPrice))) {
      setError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 19.65 –∏–ª–∏ 19,65)');
      setLoading(false);
      return;
    }
    parsedPrice = Number(parsedPrice);
    try {
      let payload = { 
        name, 
        price: parsedPrice, 
        category, 
        image, 
        images: parseImagesArray(images),
        images2: parseImagesArray(images2),
        images3: parseImagesArray(images3),
        description, 
        'Short description': shortDescription, 
        characteristics, 
        equipment 
      };
      const res = await fetch(isEdit ? `${API_URL}/${initialData._id}` : API_URL, {
        method: isEdit ? 'PUT' : 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });
      if (!res.ok) throw new Error(isEdit ? '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞' : '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
      setLoading(false);
      onSuccess();
      onClose();
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞');
      setLoading(false);
    }
  };

  return (
    <div style={{position:'fixed',top:0,left:0,right:0,bottom:0,background:'rgba(0,0,0,0.18)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>
      <form onSubmit={handleSubmit} style={{background:'#fff',borderRadius:10,padding:28,minWidth:340,maxWidth:500,boxShadow:'0 2px 16px rgba(30,40,90,0.10)',maxHeight:'90vh',overflowY:'auto'}}>
        <h3 style={{marginTop:0,marginBottom:18,fontWeight:700,fontSize:20}}>{isEdit ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä' : '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'}</h3>
        
        <div style={{background:'#e3f2fd',border:'1px solid #2196f3',borderRadius:6,padding:12,marginBottom:16}}>
          <div style={{fontWeight:600,color:'#1976d2',marginBottom:6}}>üì∏ –†–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:</div>
          <div style={{fontSize:12,color:'#1565c0',lineHeight:1.4}}>
            ‚Ä¢ <strong>–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</strong> - –≥–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞<br/>
            ‚Ä¢ <strong>–ì–∞–ª–µ—Ä–µ—è (images)</strong> - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ<br/>
            ‚Ä¢ <strong>Images2/3</strong> - –µ—â–µ –±–æ–ª—å—à–µ —Ñ–æ—Ç–æ<br/>
            ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã" –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è<br/>
            ‚Ä¢ <strong>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤:</strong> –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã ‚Üí –æ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          </div>
        </div>
        <div style={{marginBottom:12}}>
          <input required value={name} onChange={e=>setName(e.target.value)} placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ" style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15}} />
        </div>
        <div style={{marginBottom:12}}>
          <input required type="text" value={price} onChange={e=>setPrice(e.target.value)} placeholder="–¶–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 19.65)" style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15}} />
        </div>
        <div style={{marginBottom:12}}>
          <input value={category} onChange={e=>setCategory(e.target.value)} placeholder="–ö–∞—Ç–µ–≥–æ—Ä–∏—è" style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15}} />
        </div>
        <div style={{marginBottom:12}}>
          <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333'}}>–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</label>
          <input value={image} onChange={e=>setImage(e.target.value)} placeholder="URL –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15}} />
          <div style={{display:'flex',gap:8,marginTop:4,flexWrap:'wrap'}}>
            <input type="file" accept="image/*" onChange={(e)=>handleSingleFileUpload(e, setImage)} style={{flex:1,minWidth:200}} />
            <button type="button" onClick={()=>setImage('/images/products/bolgarka-makita-125.jpg')} style={{background:'#4CAF50',color:'#fff',border:'none',borderRadius:4,padding:'6px 12px',fontSize:12,cursor:'pointer'}}>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä</button>
            <small style={{color:'#666',fontSize:11}}>üí° –ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ (—Ç–µ–∫—É—â–µ–µ: {image})</small>
          </div>
        </div>
        <div style={{marginBottom:12}}>
          <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333'}}>–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (images):</label>
          <textarea value={images} onChange={e=>setImages(e.target.value)} placeholder='["/images/products/photo1.jpg", "/images/products/photo2.jpg"]' style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15,minHeight:54}} />
          <div style={{display:'flex',gap:8,marginTop:4,flexWrap:'wrap'}}>
            <input type="file" multiple accept="image/*" onChange={(e)=>handleFileUpload(e, setImages)} style={{flex:1,minWidth:200}} />
            <button type="button" onClick={()=>setImages('["/images/products/bolgarka-makita-125.jpg", "/images/products/drel.jpg"]')} style={{background:'#4CAF50',color:'#fff',border:'none',borderRadius:4,padding:'6px 12px',fontSize:12,cursor:'pointer'}}>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã</button>
            <small style={{color:'#666',fontSize:11,width:'100%',marginTop:4}}>üí° JSON –º–∞—Å—Å–∏–≤ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ URL —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –§–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—Ç–µ–∫—É—â–µ–µ: {images})</small>
          </div>
        </div>
        <div style={{marginBottom:12}}>
          <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333'}}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (images2):</label>
          <textarea value={images2} onChange={e=>setImages2(e.target.value)} placeholder='["/images/products/photo3.jpg", "/images/products/photo4.jpg"]' style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15,minHeight:54}} />
          <div style={{display:'flex',gap:8,marginTop:4,flexWrap:'wrap'}}>
            <input type="file" multiple accept="image/*" onChange={(e)=>handleFileUpload(e, setImages2)} style={{flex:1,minWidth:200}} />
            <button type="button" onClick={()=>setImages2('["/images/products/perforator-bosch-gbh.jpg", "/images/products/shurupovert-dewalt-18v.jpg"]')} style={{background:'#4CAF50',color:'#fff',border:'none',borderRadius:4,padding:'6px 12px',fontSize:12,cursor:'pointer'}}>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã</button>
            <small style={{color:'#666',fontSize:11,width:'100%',marginTop:4}}>üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏ —Ç–æ–≤–∞—Ä–∞</small>
          </div>
        </div>
        <div style={{marginBottom:12}}>
          <label style={{display:'block',marginBottom:4,fontWeight:500,color:'#333'}}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (images3):</label>
          <textarea value={images3} onChange={e=>setImages3(e.target.value)} placeholder='["/images/products/photo5.jpg", "/images/products/photo6.jpg"]' style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15,minHeight:54}} />
          <div style={{display:'flex',gap:8,marginTop:4,flexWrap:'wrap'}}>
            <input type="file" multiple accept="image/*" onChange={(e)=>handleFileUpload(e, setImages3)} style={{flex:1,minWidth:200}} />
            <button type="button" onClick={()=>setImages3('["/images/products/bolgarka-makita-125.jpg"]')} style={{background:'#4CAF50',color:'#fff',border:'none',borderRadius:4,padding:'6px 12px',fontSize:12,cursor:'pointer'}}>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã</button>
            <small style={{color:'#666',fontSize:11,width:'100%',marginTop:4}}>üí° –ï—â–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ—Ç–∞–ª–∏, —É–ø–∞–∫–æ–≤–∫–∞)</small>
          </div>
        </div>
        <div style={{marginBottom:12}}>
          <textarea value={shortDescription} onChange={e=>setShortDescription(e.target.value)} placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–¥–æ 160 —Å–∏–º–≤–æ–ª–æ–≤)" maxLength={160} style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15,minHeight:38}} />
        </div>
        <div style={{marginBottom:12}}>
          <textarea value={description} onChange={e=>setDescription(e.target.value)} placeholder="–û–ø–∏—Å–∞–Ω–∏–µ" style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15,minHeight:54}} />
        </div>
        <div style={{marginBottom:12}}>
          <textarea value={characteristics} onChange={e=>setCharacteristics(e.target.value)} placeholder="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏" style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15,minHeight:54}} />
        </div>
        <div style={{marginBottom:16}}>
          <textarea value={equipment} onChange={e=>setEquipment(e.target.value)} placeholder="–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è" style={{width:'100%',padding:8,borderRadius:6,border:'1px solid #e0e0e0',fontSize:15,minHeight:54}} />
        </div>
        {error && <div style={{color:'#e53935',marginBottom:10}}>{error}</div>}
        <div style={{display:'flex',justifyContent:'flex-end',gap:10}}>
          <button type="button" onClick={onClose} style={{background:'#f5f7fa',color:'#222',border:'1px solid #e0e0e0',borderRadius:6,padding:'7px 16px',fontWeight:500,cursor:'pointer'}}>–û—Ç–º–µ–Ω–∞</button>
          <button type="submit" disabled={loading} style={{background:'#FF6B00',color:'#fff',border:'none',borderRadius:6,padding:'7px 16px',fontWeight:600,cursor:'pointer'}}>{loading ? (isEdit ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...') : (isEdit ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å')}</button>
        </div>
      </form>
    </div>
  );
}

const ProductList = ({ onLogout }) => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [showForm, setShowForm] = useState(false);
  const [editProduct, setEditProduct] = useState(null);

  const fetchProducts = () => {
    setLoading(true);
    fetch(API_URL)
      .then(res => res.json())
      .then(data => {
        setProducts(Array.isArray(data) ? data : []);
        setLoading(false);
      })
      .catch(() => {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤');
        setLoading(false);
      });
  };

  useEffect(() => {
    fetchProducts();
  }, []);

  const handleEdit = (product) => {
    setEditProduct(product);
    setShowForm(true);
  };

  const handleFormClose = () => {
    setShowForm(false);
    setEditProduct(null);
  };

  const handleDelete = async (product) => {
    if (!window.confirm(`–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä ¬´${product.name}¬ª?`)) return;
    try {
      const res = await fetch(`${API_URL}/${product._id}`, { method: 'DELETE' });
      if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
      fetchProducts();
    } catch (e) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞');
    }
  };

  return (
    <div style={{minHeight: '100vh', background: '#f5f7fa', padding: '32px 0'}}>
      <div style={{maxWidth: 1100, margin: '0 auto', background: '#fff', borderRadius: 10, border: '1.5px solid #e0e0e0', padding: 24}}>
        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 18}}>
          <h2 style={{fontWeight: 700, fontSize: 24, color: '#1a2236', margin: 0}}>–¢–æ–≤–∞—Ä—ã</h2>
          <div>
            <button onClick={()=>{setShowForm(true);setEditProduct(null);}} style={{background: '#FF6B00', color: '#fff', fontWeight: 600, fontSize: 15, border: 'none', borderRadius: 7, padding: '8px 18px', marginRight: 12, cursor: 'pointer'}}>+ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</button>
            <button onClick={onLogout} style={{background: '#e53935', color: '#fff', fontWeight: 600, fontSize: 15, border: 'none', borderRadius: 7, padding: '8px 18px', cursor: 'pointer'}}>–í—ã–π—Ç–∏</button>
          </div>
        </div>
        {loading ? (
          <div style={{padding: 32, textAlign: 'center'}}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        ) : error ? (
          <div style={{color: '#e53935', padding: 32, textAlign: 'center'}}>{error}</div>
        ) : (
          <table style={{width: '100%', borderCollapse: 'collapse', fontSize: 15, background: '#fff'}}>
            <thead>
              <tr style={{background: '#f5f7fa'}}>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–§–æ—Ç–æ</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–¶–µ–Ω–∞</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                <th style={{padding: '8px 6px', textAlign: 'left', fontWeight: 600, color: '#222'}}>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</th>
                <th style={{padding: '8px 6px', textAlign: 'center', fontWeight: 600, color: '#222'}}>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              {products.map(product => (
                <tr key={product._id} style={{borderBottom: '1px solid #e0e0e0'}}>
                  <td style={{padding: '6px 6px'}}>
                    <img src={product.image || '/images/products/placeholder.png'} alt={product.name} style={{width: 44, height: 44, objectFit: 'contain', borderRadius: 5, background: '#f5f7fa', border: '1px solid #e0e0e0'}} />
                  </td>
                  <td style={{padding: '6px 6px', fontWeight: 500, color: '#1a2236'}}>{product.name}</td>
                  <td style={{padding: '6px 6px', color: '#FFB300', fontWeight: 700}}>{product.price ? Number(product.price).toLocaleString('ru-RU') + ' ‚Ç∏' : ''}</td>
                  <td style={{padding: '6px 6px', color: '#222'}}>{product.category || '-'}</td>
                  <td style={{padding: '6px 6px', color: '#888', fontSize: 13}}>{product['Short description'] || ''}</td>
                  <td style={{padding: '6px 6px', textAlign: 'center'}}>
                    <button onClick={()=>handleEdit(product)} style={{background: '#1e88e5', color: '#fff', border: 'none', borderRadius: 6, padding: '6px 14px', fontWeight: 500, marginRight: 6, cursor: 'pointer'}}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button onClick={()=>handleDelete(product)} style={{background: '#e53935', color: '#fff', border: 'none', borderRadius: 6, padding: '6px 14px', fontWeight: 500, cursor: 'pointer'}}>–£–¥–∞–ª–∏—Ç—å</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        )}
      </div>
      {showForm && <ProductForm onClose={handleFormClose} onSuccess={fetchProducts} initialData={editProduct} />}
    </div>
  );
};

export default ProductList; 