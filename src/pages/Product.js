import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import Header from '../components/Header';
import Footer from '../components/Footer';
import Modal from '../components/Modal';
import '../styles/Product.css';

const categories = [
  { id: 'grinders', name: '–ë–æ–ª–≥–∞—Ä–∫–∏' },
  { id: 'screwdrivers', name: '–®—É—Ä—É–ø–æ–≤—ë—Ä—Ç—ã' },
  { id: 'hammers', name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä—ã' },
  { id: 'drills', name: '–î—Ä–µ–ª–∏' },
  { id: 'jigsaws', name: '–õ–æ–±–∑–∏–∫–∏' },
  { id: 'levels', name: '–õ–∞–∑–µ—Ä–Ω—ã–µ —É—Ä–æ–≤–Ω–∏' },
  { id: 'generators', name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã' },
  { id: 'measuring', name: '–ò–∑–º–µ—Ä–∏—Ç–µ–ª–∏' }
];

const Product = () => {
  const { id } = useParams();
  const [product, setProduct] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [activeImage, setActiveImage] = useState(0);
  const [showImageModal, setShowImageModal] = useState(false);
  const [miniProducts, setMiniProducts] = useState([]);
  
  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª–µ–π
  const getAllImages = () => {
    const images = [];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–æ–ª—è images
    if (Array.isArray(product?.images)) {
      images.push(...product.images);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–æ–ª—è images2
    if (Array.isArray(product?.images2)) {
      images.push(...product.images2);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–æ–ª—è images3
    if (Array.isArray(product?.images3)) {
      images.push(...product.images3);
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º placeholder
    if (images.length === 0) {
      images.push('/images/products/placeholder.png');
    }
    
    return images;
  };
  
  const allImages = getAllImages();
  const navigate = useNavigate();

  const API_URL = '/api/products';

  useEffect(() => {
    setLoading(true);
    setError(null);
    fetch(`${API_URL}/${id}`)
      .then(res => res.json())
      .then(data => {
        if (data.error) {
          setError(data.error);
          setProduct(null);
        } else {
          setProduct(data);
        }
        setLoading(false);
      })
      .catch(() => {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞');
        setLoading(false);
      });
  }, [id]);

  useEffect(() => {
    fetch(`${API_URL}?limit=4`)
      .then(res => res.json())
      .then(data => {
        if (Array.isArray(data)) setMiniProducts(data);
      });
  }, []);

  if (loading) {
    return <div style={{padding: 48, textAlign: 'center'}}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }
  if (error || !product) {
    return (
      <div className="product">
        <Header />
        <main className="product-main">
          <div className="container" style={{padding: '48px 0', textAlign: 'center'}}>
            <h1>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
            <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ <a href="/catalog">–∫–∞—Ç–∞–ª–æ–≥</a>.</p>
          </div>
        </main>
        <Footer />
      </div>
    );
  }

  // –ù–∞–π—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
  const categoryObj = categories.find(cat => cat.id === product.category);
  const categoryName = categoryObj ? categoryObj.name : '';

  // –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ ‚Äî –µ—Å–ª–∏ –µ—Å—Ç—å –≤ product, –∏–Ω–∞—á–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
  const productAdvantages = product.advantages || [
    '–í—ã—Å–æ–∫–∏–π –∫—Ä—É—Ç—è—â–∏–π –º–æ–º–µ–Ω—Ç –∏ –º–æ—â–Ω–æ—Å—Ç—å',
    '–î–æ–ª–≥–æ–≤–µ—á–Ω—ã–π –ª–∏—Ç–∏–π-–∏–æ–Ω–Ω—ã–π –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä',
    '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ –ª—ë–≥–∫–∏–π –∫–æ—Ä–ø—É—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã –æ–¥–Ω–æ–π —Ä—É–∫–æ–π'
  ];

  const handleOpenModal = () => setIsModalOpen(true);
  const handleCloseModal = () => setIsModalOpen(false);
  const handleSubmitForm = (formData) => {
    console.log('–ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä:', { ...formData, product: product.name });
    alert('–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
  };

  const handleBuy = () => {
    navigate('/checkout', { state: { product } });
  };

  // –ú–æ–¥–∞–ª–∫–∞ —Ñ–æ—Ç–æ
  const handleImageClick = () => setShowImageModal(true);
  const handleCloseImageModal = () => setShowImageModal(false);
  const handlePrevImage = (e) => {
    e.stopPropagation();
    setActiveImage((prev) => (prev - 1 + allImages.length) % allImages.length);
  };
  const handleNextImage = (e) => {
    e.stopPropagation();
    setActiveImage((prev) => (prev + 1) % allImages.length);
  };

  const shortDesc = product['Short description'] || '–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ';

  return (
    <div className="product-page">
      <Header />
      <main className="product-main">
        <div className="product-container">
          <nav className="breadcrumbs" style={{paddingBottom: '18px', display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: '8px'}}>
            <a href="/">–ì–ª–∞–≤–Ω–∞—è</a>
            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>
            <a href="/catalog">–ö–∞—Ç–∞–ª–æ–≥</a>
            {categoryName && (
              <>
                <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>
                <a href={`/catalog?category=${product.category}`}>{categoryName}</a>
              </>
            )}
            <span style={{margin: '0 8px', color: '#bdbdbd', fontSize: '18px'}}>&rarr;</span>
            <span style={{color:'#1a2236', fontWeight:500}}>{product.name}</span>
          </nav>
          <div className="product-flex">
            {/* –§–æ—Ç–æ –∏ –º–∏–Ω–∏–∞—Ç—é—Ä—ã */}
            <div className="product-gallery">
              <div className="product-gallery-inner">
                <div className="product-image-main" onClick={handleImageClick} style={{cursor:'zoom-in'}}>
                  <img src={allImages[activeImage]} alt={product.name} loading="lazy" />
                </div>
                {allImages.length > 1 && (
                  <>
                    <div className="product-thumbs">
                      {allImages.map((img, idx) => (
                        <img key={idx} src={img} alt={product.name + idx} className={activeImage === idx ? "active" : ""} onClick={() => setActiveImage(idx)} loading="lazy" />
                      ))}
                    </div>
                    <div style={{textAlign:'center', color:'#888', fontSize:'1.05rem', marginTop: 4, marginBottom: 12, border:'none'}}>
                      –ß—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
                    </div>
                  </>
                )}
              </div>
            </div>
            {/* –ò–Ω—Ñ–æ –∏ —Ü–µ–Ω–∞ —Å–ø—Ä–∞–≤–∞ */}
            <div className="product-info-block">
              <>
                <h1 className="product-title" style={{fontWeight: 700, maxWidth: 320, marginBottom: 6, wordBreak: 'break-word', marginTop: 18}}>{product.name}</h1>
                {product.article && (
                  <div style={{fontSize: '0.9rem', color: '#666', marginBottom: 8, padding: '4px 8px', background: '#f8f9fa', borderRadius: 4, display: 'inline-block', border: '1px solid #e9ecef'}}>
                    <span style={{fontWeight: 500, color: '#495057'}}>–ê—Ä—Ç–∏–∫—É–ª:</span> {product.article}
                  </div>
                )}
                <div className="product-short-desc" style={{fontSize: '1.18rem', color: '#222', marginBottom: 10, fontWeight: 500, marginTop: 0}}>{shortDesc}</div>
                <div className="product-subtitle">{product.subtitle}</div>
                <div className="product-divider"></div>
                <div className="product-buy-row">
                  <div className="product-price-block">
                    <div className="product-price-label-value">
                      <div className="product-price-label">–¶–µ–Ω–∞</div>
                      <div className="product-price-value">
                        {Number(product.price).toLocaleString('ru-RU')}
                        <span className="product-currency">‚Ç∏</span>
                      </div>
                    </div>
                  </div>
                  <span className="product-price-divider"></span>
                  <div className="product-buy-btns">
                    <button className="product-btn-ask" onClick={handleOpenModal}>–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</button>
                    <div className="product-btns-divider"></div>
                    <button className="product-btn-buy" onClick={handleBuy}>–ö—É–ø–∏—Ç—å</button>
                  </div>
                </div>
                <div className="product-divider"></div>
                <div style={{marginTop: 14, background: '#f5f7fa', borderRadius: 10, padding: '10px 12px 8px 12px', fontSize: '0.98rem', color: '#222', boxShadow: 'none', maxWidth: 320}}>
                  <div style={{fontWeight: 600, color: '#1e88e5', marginBottom: 8, fontSize: '1.01rem'}}>
                    –í–∞—à –≥–æ—Ä–æ–¥: <a href="#" style={{color:'#1e88e5', textDecoration:'underline', cursor:'pointer'}}>–ê–ª–º–∞—Ç—ã</a>
                  </div>
                  <div style={{display:'flex', alignItems:'flex-start', gap:8, marginBottom:6}}>
                    <span style={{fontSize:17, marginTop:2}}>üöö</span>
                    <div>
                      <div style={{fontWeight:500, color:'#222'}}>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É</div>
                      <div style={{color:'#1e88e5', fontWeight:600, fontSize:13}}>–°–µ–≥–æ–¥–Ω—è ‚Äî –ë–ï–°–ü–õ–ê–¢–ù–û</div>
                    </div>
                  </div>
                  <div style={{display:'flex', alignItems:'flex-start', gap:8, marginBottom:6}}>
                    <span style={{fontSize:17, marginTop:2}}>üè¨</span>
                    <div>
                      <div style={{fontWeight:500, color:'#222'}}>–°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ <a href="#" style={{color:'#1e88e5'}}>—É–ª. –¢–æ–ª–µ –±–∏ 216–ë</a></div>
                      <div style={{color:'#222', fontSize:13}}>–°–µ–≥–æ–¥–Ω—è —Å 9:00 –¥–æ 18:00 ‚Äî –±–æ–ª—å—à–µ 5</div>
                    </div>
                  </div>
                  <div style={{background:'#f0f1f4', borderRadius:7, padding:'7px 10px', marginTop:8, color:'#222', fontSize:'0.93rem', display:'flex', alignItems:'center', gap:6}}>
                    <span style={{fontSize:15, color:'#888'}}>‚ìò</span>
                    <span>–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</span>
                  </div>
                </div>
              </>
            </div>
          </div>
          {/* –í–∫–ª–∞–¥–∫–∏ —Å–Ω–∏–∑—É */}
          <div className="product-tabs-wrap">
            <Tabs product={product} />
                </div>
            </div>
      </main>
      {/* –ú–∏–Ω–∏-–∫–∞—Ç–∞–ª–æ–≥ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ */}
      <section className="mini-catalog-section">
        <div className="mini-catalog-header">
          <h2>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h2>
        </div>
        <div className="mini-catalog-slider-wrapper">
          <div className="mini-catalog-slider">
            {miniProducts.map(product => (
              <div
                key={product._id}
                className="product-card catalog-mini-product-card"
                onClick={() => window.location.href = `/product/${product._id}`}
                style={{ cursor: 'pointer', minHeight: 0, position: 'relative', fontFamily: 'Roboto, Arial, sans-serif', fontWeight: 400, background: '#fff', minWidth: 200, maxWidth: 220, margin: '0 4px', border: '1px solid #e3e6ea', borderRadius: 0 }}
              >
                <div className="product-image" style={{height: '120px', padding: 0, margin: 0, background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>
                  <img src={product.image || '/images/products/placeholder.png'} alt={product.name} style={{width: '100%', height: '100%', objectFit: 'contain', display: 'block', background:'#fff'}} loading="lazy" />
                </div>
                <div className="catalog-mini-product-divider" style={{width:'90%',maxWidth:'200px',borderTop:'1px solid #bdbdbd',margin:'0 auto 2px auto', alignSelf:'center'}}></div>
                <div className="product-info" style={{padding: '6px 8px 8px 8px', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0, minHeight:60}}>
                  <span style={{fontSize: '0.9rem', fontWeight: 500, color: '#1a2236', margin: 0, minHeight: '32px', lineHeight: 1.2, marginBottom: 4, textDecoration:'none',cursor:'pointer',display:'block', textAlign:'center', width:'100%'}}>{product.name}</span>
                  <div style={{width:'100%', textAlign:'left', margin:'0 0 1px 0'}}>
                    <span style={{color:'#888', fontSize:'0.8rem', fontWeight:400, letterSpacing:0.2}}>–¶–µ–Ω–∞</span>
                  </div>
                  <div style={{display: 'flex', alignItems: 'center', marginTop: 0, marginBottom:1, justifyContent:'flex-start', width:'100%'}}>
                    <span className="product-price" style={{color:'#FFB300',fontWeight:'bold',fontSize:'1rem',letterSpacing:0.3}}>{product.price ? product.price + ' ‚Ç∏' : ''}</span>
                    <span style={{height:'2em',width:'1px',background:'#bdbdbd',display:'inline-block',margin:'0 0 0 5px',verticalAlign:'middle'}}></span>
            </div>
                </div>
            </div>
            ))}
          </div>
        </div>
      </section>
      <Footer />
    <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitForm} />
    {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ */}
    {showImageModal && (
      <div className="image-modal-overlay" onClick={handleCloseImageModal} style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'rgba(0,0,0,0.55)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'}}>
        <div className="image-modal-content" style={{background:'#fff',padding:0,borderRadius:'8px',boxShadow:'0 8px 32px rgba(0,0,0,0.18)',position:'relative',maxWidth:'90vw',maxHeight:'90vh',display:'flex',flexDirection:'column',alignItems:'center'}} onClick={e=>e.stopPropagation()}>
          <img src={allImages[activeImage]} alt={product.name} style={{maxWidth:'80vw',maxHeight:'80vh',objectFit:'contain',background:'#fff'}} />
          {allImages.length > 1 && (
            <>
              <button 
                onClick={handlePrevImage} 
                style={{
                  position: 'absolute',
                  left: -25,
                  top: '50%',
                  transform: 'translateY(-50%)',
                  background: 'rgba(255, 255, 255, 0.95)',
                  border: 'none',
                  borderRadius: '50%',
                  width: 50,
                  height: 50,
                  fontSize: 24,
                  cursor: 'pointer',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',
                  zIndex: 10,
                  color: '#222'
                }}
              >
                ‚Äπ
              </button>
              <button 
                onClick={handleNextImage} 
                style={{
                  position: 'absolute',
                  right: -25,
                  top: '50%',
                  transform: 'translateY(-50%)',
                  background: 'rgba(255, 255, 255, 0.95)',
                  border: 'none',
                  borderRadius: '50%',
                  width: 50,
                  height: 50,
                  fontSize: 24,
                  cursor: 'pointer',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  boxShadow: '0 4px 12px rgba(0,0,0,0.3)',
                  zIndex: 10,
                  color: '#222'
                }}
              >
                ‚Ä∫
              </button>
              <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>
                <span style={{color:'#666', fontSize:'14px'}}>{activeImage + 1} –∏–∑ {allImages.length}</span>
              </div>
            </>
          )}
          <button onClick={handleCloseImageModal} style={{position:'absolute',top:8,right:12,fontSize:32,background:'none',border:'none',color:'#222',cursor:'pointer',lineHeight:1}}>&times;</button>
        </div>
      </div>
    )}
    </div>
  );
};

function Tabs({product}) {
  const [tab,setTab]=React.useState('desc');
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–∑ —Å—Ç—Ä–æ–∫–∏
  const parseCharacteristics = (characteristicsStr) => {
    if (!characteristicsStr) return [];
    
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
      return JSON.parse(characteristicsStr);
    } catch {
      // –ï—Å–ª–∏ –Ω–µ JSON, —Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º
      return characteristicsStr.split('\n').filter(line => line.trim()).map(line => {
        const [name, value] = line.split(':').map(s => s.trim());
        return { name, value };
      });
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏
  const parseEquipment = (equipmentStr) => {
    if (!equipmentStr) return [];
    
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
      return JSON.parse(equipmentStr);
    } catch {
      // –ï—Å–ª–∏ –Ω–µ JSON, —Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º –∏–ª–∏ –∑–∞–ø—è—Ç—ã–º
      return equipmentStr.split(/[\n,]/).filter(item => item.trim()).map(item => item.trim());
    }
  };
  
  const characteristics = parseCharacteristics(product.characteristics);
  const equipment = parseEquipment(product.equipment);
  return (
    <div className="product-tabs">
      <div className="product-tabs-header">
        <button className={tab==='desc'?'active':''} onClick={()=>setTab('desc')}>–û–ø–∏—Å–∞–Ω–∏–µ</button>
        <button className={tab==='specs'?'active':''} onClick={()=>setTab('specs')}>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</button>
        <button className={tab==='equip'?'active':''} onClick={()=>setTab('equip')}>–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è</button>
      </div>
      <div className="product-tabs-content">
        {tab==='desc' && (
          <div className="product-desc-kaspi-block">
            {product.description ? (
              <div dangerouslySetInnerHTML={{ __html: product.description.replace(/\n/g, '<br/>') }} />
            ) : (
              <div style={{color: '#888', fontStyle: 'italic'}}>–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</div>
            )}
          </div>
        )}
        {tab==='specs' && (
          <div className="product-specs-kaspi-block">
            <h2 className="product-specs-title">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ {product.name}</h2>
            {characteristics.length > 0 ? (
              <div className="product-specs-group">
                <div className="product-specs-flex-table">
                  {characteristics.map((spec, i) => (
                    <div className={"product-specs-flex-row" + (!spec.value ? " no-value" : "")} key={i}>
                      <span className="product-specs-flex-name">{spec.name}</span>
                      <span className="product-specs-flex-dots"></span>
                      {spec.value && <span className="product-specs-flex-value">{spec.value}</span>}
                    </div>
                  ))}
                </div>
              </div>
            ) : (
              <div style={{color: '#888', fontStyle: 'italic', padding: '20px 0'}}>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</div>
            )}
          </div>
        )}
        {tab==='equip' && (
          <div className="product-desc-kaspi-block">
            {equipment.length > 0 ? (
              <ul style={{margin: 0, paddingLeft: 20}}>
                {equipment.map((item, idx) => (
                  <li key={idx} style={{marginBottom: 8, lineHeight: 1.5}}>{item}</li>
                ))}
              </ul>
            ) : (
              <div style={{color: '#888', fontStyle: 'italic'}}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}

export default Product; 