import React, { useState, useEffect } from 'react';
import { getAnalyticsStats, getAnalyticsEvents } from '../utils/analytics';
import '../styles/AdminAnalytics.css';

const AdminAnalytics = () => {
  const [stats, setStats] = useState(null);
  const [events, setEvents] = useState([]);
  const [loading, setLoading] = useState(true);
  const [period, setPeriod] = useState('7d');
  const [currentPage, setCurrentPage] = useState(1);
  const [filters, setFilters] = useState({});
  const [activeTab, setActiveTab] = useState('overview');

  useEffect(() => {
    loadStats();
    loadEvents();
  }, [period, currentPage, filters]);

  const loadStats = async () => {
    try {
      setLoading(true);
      const response = await getAnalyticsStats(period);
      setStats(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    } finally {
      setLoading(false);
    }
  };

  const loadEvents = async () => {
    try {
      const response = await getAnalyticsEvents(currentPage, 50, filters);
      setEvents(response.data.events);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π:', error);
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU');
  };

  const getEventTypeLabel = (eventType) => {
    const labels = {
      'phone_click': '–ö–ª–∏–∫ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω',
      'product_view': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞',
      'form_submit': '–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã',
      'button_click': '–ö–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É',
      'page_view': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
    };
    return labels[eventType] || eventType;
  };

  const getEventIcon = (eventType) => {
    const icons = {
      'phone_click': 'üìû',
      'product_view': 'üëÅÔ∏è',
      'form_submit': 'üìù',
      'button_click': 'üñ±Ô∏è',
      'page_view': 'üìÑ'
    };
    return icons[eventType] || '‚ùì';
  };

  const calculateConversionRate = () => {
    if (!stats) return 0;
    const formSubmits = stats.eventStats.find(s => s.eventType === 'form_submit')?.count || 0;
    const totalViews = stats.eventStats.find(s => s.eventType === 'page_view')?.count || 0;
    return totalViews > 0 ? ((formSubmits / totalViews) * 100).toFixed(2) : 0;
  };

  const calculateEngagementRate = () => {
    if (!stats) return 0;
    const totalEngagements = stats.eventStats
      .filter(s => s.eventType !== 'page_view')
      .reduce((sum, stat) => sum + stat.count, 0);
    const totalViews = stats.eventStats.find(s => s.eventType === 'page_view')?.count || 0;
    return totalViews > 0 ? ((totalEngagements / totalViews) * 100).toFixed(2) : 0;
  };

  if (loading && !stats) {
    return <div className="admin-analytics-loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...</div>;
  }

  return (
    <div className="admin-analytics">
      <div className="admin-analytics-header">
        <h1>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–∞–π—Ç–∞</h1>
        <div className="header-controls">
          <button
            onClick={() => window.location.assign('/admin/products')}
            className="back-to-admin"
            title="–ù–∞–∑–∞–¥ –∫ –∞–¥–º–∏–Ω–∫–µ"
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
          <div className="period-selector">
            <label>–ü–µ—Ä–∏–æ–¥:</label>
            <select value={period} onChange={(e) => setPeriod(e.target.value)}>
              <option value="24h">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞</option>
              <option value="7d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</option>
              <option value="30d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</option>
              <option value="90d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 90 –¥–Ω–µ–π</option>
            </select>
          </div>
          <div className="mobile-menu-toggle" onClick={() => setActiveTab(activeTab === 'overview' ? 'events' : 'overview')}>
            <span>‚ò∞</span>
          </div>
        </div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±—ã */}
      <div className="analytics-tabs">
        <button 
          className={`tab-btn ${activeTab === 'overview' ? 'active' : ''}`}
          onClick={() => setActiveTab('overview')}
        >
          üìà –û–±–∑–æ—Ä
        </button>
        <button 
          className={`tab-btn ${activeTab === 'events' ? 'active' : ''}`}
          onClick={() => setActiveTab('events')}
        >
          üìã –°–æ–±—ã—Ç–∏—è
        </button>
        <button 
          className={`tab-btn ${activeTab === 'insights' ? 'active' : ''}`}
          onClick={() => setActiveTab('insights')}
        >
          üí° –ò–Ω—Å–∞–π—Ç—ã
        </button>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∞ "–û–±–∑–æ—Ä" */}
      {activeTab === 'overview' && stats && (
        <>
          <div className="stats-overview">
            <div className="stats-card total-events">
              <h3>–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π</h3>
              <div className="stats-number">{stats.summary.totalEvents}</div>
              <div className="stats-trend">+12% —Å –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–∏</div>
            </div>
            <div className="stats-card unique-sessions">
              <h3>–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Å—Å–∏–π</h3>
              <div className="stats-number">{stats.summary.uniqueSessions}</div>
              <div className="stats-trend">+8% —Å –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–∏</div>
            </div>
            <div className="stats-card conversion-rate">
              <h3>–ö–æ–Ω–≤–µ—Ä—Å–∏—è</h3>
              <div className="stats-number">{calculateConversionRate()}%</div>
              <div className="stats-trend">–§–æ—Ä–º—ã / –ü—Ä–æ—Å–º–æ—Ç—Ä—ã</div>
            </div>
            <div className="stats-card engagement-rate">
              <h3>–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å</h3>
              <div className="stats-number">{calculateEngagementRate()}%</div>
              <div className="stats-trend">–î–µ–π—Å—Ç–≤–∏—è / –ü—Ä–æ—Å–º–æ—Ç—Ä—ã</div>
            </div>
          </div>

          <div className="stats-details">
            {/* –ö–ª–∏–∫–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º */}
            <div className="stats-section">
              <h3>üìû –ö–ª–∏–∫–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É (–ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º)</h3>
              <div className="page-stats">
                {stats.phoneClicksByPage.map((row, index) => (
                  <div key={index} className="page-stat">
                    <div className="page-name">{row.page || '–ì–ª–∞–≤–Ω–∞—è'}</div>
                    <div className="page-views">–ö–ª–∏–∫–æ–≤: {row.clicks.toLocaleString()} | –°–µ—Å—Å–∏–π: {row.uniqueSessions.toLocaleString()}</div>
                  </div>
                ))}
              </div>
            </div>

            {/* –ö–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º (CTA) */}
            <div className="stats-section">
              <h3>üñ±Ô∏è –ö–ª–∏–∫–∏ –ø–æ CTA</h3>
              <div className="cta-grid">
                {stats.buttonClicksStats.map((btn, idx) => (
                  <div key={idx} className="cta-item">
                    <div className="cta-title">{btn.buttonText || '–ö–Ω–æ–ø–∫–∞'}</div>
                    <div className="cta-context">{btn.context || '–±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞'}</div>
                    <div className="cta-metrics">–ö–ª–∏–∫–æ–≤: {btn.count.toLocaleString()} ‚Ä¢ –°–µ—Å—Å–∏–π: {btn.uniqueSessions.toLocaleString()}</div>
                  </div>
                ))}
              </div>
            </div>
            {/* –í–æ—Ä–æ–Ω–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="stats-section">
              <h3>üõ§Ô∏è –í–æ—Ä–æ–Ω–∫–∞: –ü—Ä–æ—Å–º–æ—Ç—Ä—ã ‚Üí –ö–ª–∏–∫–∏ ‚Üí –ó–∞—è–≤–∫–∏</h3>
              <div className="funnel-grid">
                <div className="funnel-step">
                  <div className="funnel-label">–ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü</div>
                  <div className="funnel-value">{stats.funnelTotals.pageViews.toLocaleString()}</div>
                </div>
                <div className="funnel-arrow">‚Üí</div>
                <div className="funnel-step">
                  <div className="funnel-label">–ö–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º</div>
                  <div className="funnel-value">{stats.funnelTotals.buttonClicks.toLocaleString()}</div>
                </div>
                <div className="funnel-arrow">‚Üí</div>
                <div className="funnel-step">
                  <div className="funnel-label">–û—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º</div>
                  <div className="funnel-value">{stats.funnelTotals.formSubmits.toLocaleString()}</div>
                </div>
              </div>
            </div>
            {/* –ö–∞–Ω–∞–ª—ã —Ç—Ä–∞—Ñ–∏–∫–∞ */}
            <div className="stats-section">
              <h3>üì£ –ö–∞–Ω–∞–ª—ã —Ç—Ä–∞—Ñ–∏–∫–∞</h3>
              <div className="stats-grid">
                {stats.channelStats.map((c, idx) => (
                  <div key={idx} className="stat-item">
                    <div className="stat-info">
                      <div className="stat-label">{c.channel}</div>
                      <div className="stat-count">{c.count.toLocaleString()}</div>
                      <div className="stat-unique">–°–µ—Å—Å–∏–π: {c.uniqueSessions.toLocaleString()}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* UTM –∏—Å—Ç–æ—á–Ω–∏–∫–∏ */}
            <div className="stats-section">
              <h3>üîó UTM –∏—Å—Ç–æ—á–Ω–∏–∫–∏</h3>
              <div className="stats-grid">
                {stats.utmSourceStats.map((u, idx) => (
                  <div key={idx} className="stat-item">
                    <div className="stat-info">
                      <div className="stat-label">{u.utm_source}</div>
                      <div className="stat-count">{u.count.toLocaleString()}</div>
                      <div className="stat-unique">–°–µ—Å—Å–∏–π: {u.uniqueSessions.toLocaleString()}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–µ—Å—Å–∏–∏, –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–æ–±—ã—Ç–∏—è) */}
            <div className="stats-section">
              <h3>üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</h3>
              <div className="stats-grid">
                {stats.deviceStats.map((d, idx) => (
                  <div key={idx} className="stat-item">
                    <div className="stat-info">
                      <div className="stat-label">{d.os || 'Other'}</div>
                      <div className="stat-count">{d.uniqueSessions.toLocaleString()}</div>
                      <div className="stat-unique">–°–µ—Å—Å–∏–π: {d.uniqueSessions.toLocaleString()}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="stats-section">
              <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Å–æ–±—ã—Ç–∏–π</h3>
              <div className="stats-grid">
                {stats.eventStats.map((stat, index) => (
                  <div key={index} className="stat-item">
                    <div className="stat-icon">{getEventIcon(stat.eventType)}</div>
                    <div className="stat-info">
                      <div className="stat-label">{getEventTypeLabel(stat.eventType)}</div>
                      <div className="stat-count">{stat.count.toLocaleString()}</div>
                      <div className="stat-unique">–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: {stat.uniqueSessions}</div>
                      <div className="stat-percentage">
                        {((stat.count / stats.summary.totalEvents) * 100).toFixed(1)}%
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="stats-section">
              <h3>üèÜ –¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º</h3>
              <div className="top-products">
                {stats.topProducts.map((product, index) => (
                  <div key={index} className="product-stat">
                    <div className="product-rank">#{index + 1}</div>
                    <div className="product-info">
                      <div className="product-name">{product.productName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä'}</div>
                      <div className="product-views">
                        –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {product.views.toLocaleString()} | –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: {product.uniqueViews.toLocaleString()}
                      </div>
                      <div className="product-engagement">
                        –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {((product.uniqueViews / product.views) * 100).toFixed(1)}%
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="stats-section">
              <h3>üìÑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º</h3>
              <div className="page-stats">
                {stats.pageStats.map((page, index) => (
                  <div key={index} className="page-stat">
                    <div className="page-name">{page.page || '–ì–ª–∞–≤–Ω–∞—è'}</div>
                    <div className="page-views">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {page.views.toLocaleString()}</div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </>
      )}

      {/* –í–∫–ª–∞–¥–∫–∞ "–ò–Ω—Å–∞–π—Ç—ã" */}
      {activeTab === 'insights' && stats && (
        <div className="insights-section">
          <div className="insights-grid">
            <div className="insight-card">
              <h3>üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
              <ul>
                <li>–£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö</li>
                <li>–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ CTA –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –≤—ã—Å–æ–∫–æ–π –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å—é</li>
                <li>–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º –æ—Ç–∫–∞–∑–æ–≤</li>
              </ul>
            </div>
            <div className="insight-card">
              <h3>üìà –¢—Ä–µ–Ω–¥—ã</h3>
              <ul>
                <li>–ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: 14:00 - 18:00</li>
                <li>–°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –¥–µ–Ω—å: –°—Ä–µ–¥–∞</li>
                <li>–î–æ–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö: {(() => {
                  const mobile = stats.deviceStats.find(d => (d.os||'').toLowerCase().includes('android') || (d.os||'').toLowerCase().includes('ios'))?.uniqueSessions || 0;
                  const total = stats.deviceStats.reduce((s,d)=>s+(d.uniqueSessions||0),0) || 1;
                  return ((mobile/total)*100).toFixed(1)+'%';
                })()}</li>
              </ul>
            </div>
            <div className="insight-card">
              <h3>üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞</h3>
              <ul>
                <li>–£–ª—É—á—à–∏—Ç–µ UX –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö: –¥–æ–±–∞–≤—å—Ç–µ –±—ã—Å—Ç—Ä—ã–µ CTA "–ü–æ–∑–≤–æ–Ω–∏—Ç—å"/"WhatsApp" –≤—ã—à–µ</li>
                <li>–î–æ–±–∞–≤—å—Ç–µ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
                <li>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
              </ul>
            </div>
          </div>
        </div>
      )}

      {/* –í–∫–ª–∞–¥–∫–∞ "–°–æ–±—ã—Ç–∏—è" */}
      {activeTab === 'events' && (
        <div className="events-section">
          <h3>üìã –î–µ—Ç–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è</h3>
          <div className="events-filters">
            <select 
              value={filters.eventType || ''} 
              onChange={(e) => setFilters({...filters, eventType: e.target.value || undefined})}
            >
              <option value="">–í—Å–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π</option>
              <option value="phone_click">–ö–ª–∏–∫ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω</option>
              <option value="product_view">–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞</option>
              <option value="form_submit">–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã</option>
              <option value="button_click">–ö–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É</option>
              <option value="page_view">–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã</option>
            </select>
          </div>
          
          <div className="events-table">
            <table>
              <thead>
                <tr>
                  <th>–í—Ä–µ–º—è</th>
                  <th>–¢–∏–ø</th>
                  <th>–î–∞–Ω–Ω—ã–µ</th>
                  <th>–°—Ç—Ä–∞–Ω–∏—Ü–∞</th>
                  <th>IP</th>
                </tr>
              </thead>
              <tbody>
                {events.map((event, index) => (
                  <tr key={index}>
                    <td>{formatDate(event.timestamp)}</td>
                    <td>
                      <span className="event-type">
                        {getEventIcon(event.eventType)} {getEventTypeLabel(event.eventType)}
                      </span>
                    </td>
                    <td>
                      <div className="event-data">
                        {event.eventData && Object.keys(event.eventData).length > 0 ? (
                          Object.entries(event.eventData).map(([key, value]) => (
                            <div key={key} className="event-data-item">
                              <strong>{key}:</strong> {String(value)}
                            </div>
                          ))
                        ) : (
                          <span className="no-data">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</span>
                        )}
                      </div>
                    </td>
                    <td>{event.page || '-'}</td>
                    <td>{event.ipAddress || '-'}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          <div className="pagination">
            <button 
              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
              disabled={currentPage === 1}
            >
              ‚Üê –ù–∞–∑–∞–¥
            </button>
            <span>–°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentPage}</span>
            <button 
              onClick={() => setCurrentPage(currentPage + 1)}
              disabled={events.length < 50}
            >
              –í–ø–µ—Ä–µ–¥ ‚Üí
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default AdminAnalytics;
